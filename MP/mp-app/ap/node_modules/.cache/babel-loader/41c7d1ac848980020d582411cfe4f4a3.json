{"ast":null,"code":"import _regeneratorRuntime from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/components/ChatHead/ChatHead.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { cloneElement } from 'react';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    popup: {\n      position: 'fixed',\n      right: theme.spacing(2),\n      bottom: theme.spacing(2),\n      top: '100vh',\n      transition: 'top 250ms ease-in-out',\n      boxShadow: theme.shadows[6],\n      borderRadius: 6,\n      zIndex: 99999,\n      width: 360,\n      overflow: 'hidden',\n      '@media only screen and (max-width: 450px)': {\n        width: 'calc(100% - 32px)',\n        left: theme.spacing(2)\n      }\n    },\n    popupOpen: _defineProperty({\n      top: 'calc(var(--topbar-height) + 16px)'\n    }, theme.breakpoints.down('sm'), {\n      bottom: 0\n    }),\n    closeIcon: {\n      position: 'absolute',\n      top: 6,\n      right: 6\n    }\n  };\n});\n\nvar ChatHead = function ChatHead(_ref2) {\n  var _clsx;\n\n  var icon = _ref2.icon,\n      children = _ref2.children;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var togglePopup = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOpen(function (open) {\n                return !open;\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function togglePopup() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, cloneElement(icon, {\n    onClick: togglePopup\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx((_clsx = {\n      'bg-paper': true\n    }, _defineProperty(_clsx, classes.popup, true), _defineProperty(_clsx, classes.popupOpen, open), _clsx)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, open ? cloneElement(children, {\n    togglePopup: togglePopup\n  }) : null));\n};\n\nexport default ChatHead;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/components/ChatHead/ChatHead.jsx"],"names":["React","useState","makeStyles","clsx","cloneElement","useStyles","palette","theme","popup","position","right","spacing","bottom","top","transition","boxShadow","shadows","borderRadius","zIndex","width","overflow","left","popupOpen","breakpoints","down","closeIcon","ChatHead","icon","children","classes","open","setOpen","togglePopup","onClick"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,OAA7B;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC;AAAA,MAAGI,OAAH,QAAGA,OAAH;AAAA,MAAeC,KAAf;;AAAA,SAA4B;AACrDC,IAAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,OADP;AAEHC,MAAAA,KAAK,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFJ;AAGHC,MAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAHL;AAIHE,MAAAA,GAAG,EAAE,OAJF;AAKHC,MAAAA,UAAU,EAAE,uBALT;AAMHC,MAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CANR;AAOHC,MAAAA,YAAY,EAAE,CAPX;AAQHC,MAAAA,MAAM,EAAE,KARL;AASHC,MAAAA,KAAK,EAAE,GATJ;AAUHC,MAAAA,QAAQ,EAAE,QAVP;AAWH,mDAA6C;AACzCD,QAAAA,KAAK,EAAE,mBADkC;AAEzCE,QAAAA,IAAI,EAAEd,KAAK,CAACI,OAAN,CAAc,CAAd;AAFmC;AAX1C,KAD8C;AAiBrDW,IAAAA,SAAS;AACLT,MAAAA,GAAG,EAAE;AADA,OAEJN,KAAK,CAACgB,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAFI,EAE2B;AAC5BZ,MAAAA,MAAM,EAAE;AADoB,KAF3B,CAjB4C;AAuBrDa,IAAAA,SAAS,EAAE;AACPhB,MAAAA,QAAQ,EAAE,UADH;AAEPI,MAAAA,GAAG,EAAE,CAFE;AAGPH,MAAAA,KAAK,EAAE;AAHA;AAvB0C,GAA5B;AAAA,CAAD,CAA5B;;AA8BA,IAAMgB,QAAQ,GAAG,SAAXA,QAAW,QAAwB;AAAA;;AAAA,MAArBC,IAAqB,SAArBA,IAAqB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AACrC,MAAMC,OAAO,GAAGxB,SAAS,EAAzB;;AACA,kBAAwBJ,QAAQ,CAAC,KAAD,CAAhC;AAAA;AAAA,MAAO6B,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAChBD,cAAAA,OAAO,CAAC,UAACD,IAAD;AAAA,uBAAU,CAACA,IAAX;AAAA,eAAD,CAAP;;AADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXE,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK5B,YAAY,CAACuB,IAAD,EAAO;AAAEM,IAAAA,OAAO,EAAED;AAAX,GAAP,CADjB,eAEI;AACI,IAAA,SAAS,EAAE7B,IAAI;AACX,kBAAY;AADD,8BAEV0B,OAAO,CAACrB,KAFE,EAEM,IAFN,0BAGVqB,OAAO,CAACP,SAHE,EAGUQ,IAHV,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKA,IAAI,GAAG1B,YAAY,CAACwB,QAAD,EAAW;AAAEI,IAAAA,WAAW,EAAXA;AAAF,GAAX,CAAf,GAA6C,IAPtD,CAFJ,CADJ;AAcH,CAtBD;;AAwBA,eAAeN,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { cloneElement } from 'react'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    popup: {\n        position: 'fixed',\n        right: theme.spacing(2),\n        bottom: theme.spacing(2),\n        top: '100vh',\n        transition: 'top 250ms ease-in-out',\n        boxShadow: theme.shadows[6],\n        borderRadius: 6,\n        zIndex: 99999,\n        width: 360,\n        overflow: 'hidden',\n        '@media only screen and (max-width: 450px)': {\n            width: 'calc(100% - 32px)',\n            left: theme.spacing(2),\n        },\n    },\n    popupOpen: {\n        top: 'calc(var(--topbar-height) + 16px)',\n        [theme.breakpoints.down('sm')]: {\n            bottom: 0,\n        },\n    },\n    closeIcon: {\n        position: 'absolute',\n        top: 6,\n        right: 6,\n    },\n}))\n\nconst ChatHead = ({ icon, children }) => {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n\n    const togglePopup = async () => {\n        setOpen((open) => !open)\n    }\n\n    return (\n        <div>\n            {cloneElement(icon, { onClick: togglePopup })}\n            <div\n                className={clsx({\n                    'bg-paper': true,\n                    [classes.popup]: true,\n                    [classes.popupOpen]: open,\n                })}\n            >\n                {open ? cloneElement(children, { togglePopup }) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default ChatHead\n"]},"metadata":{},"sourceType":"module"}