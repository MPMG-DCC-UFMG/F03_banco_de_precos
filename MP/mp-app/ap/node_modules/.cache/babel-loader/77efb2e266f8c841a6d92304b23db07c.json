{"ast":null,"code":"import _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/auto-complete/Faixa.jsx\";\nimport * as React from 'react';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nexport default function StateTextFields() {\n  var _this = this;\n\n  var _React$useState = React.useState('Cat in the Hat'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setName(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    component: \"form\",\n    sx: {\n      '& > :not(style)': {\n        m: 1,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    value: this.state.value,\n    onChange: function onChange(e) {\n      var input = e.target.value;\n      if (!input || input[input.length - 1].match('[0-9]') && input[0].match('[1-9]')) _this.setState({\n        value: input\n      });\n    },\n    type: \"text\",\n    placeholder: '[1-100]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-uncontrolled\",\n    label: \"Uncontrolled\",\n    defaultValue: \"foo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/auto-complete/Faixa.jsx"],"names":["React","Box","TextField","StateTextFields","useState","name","setName","handleChange","event","target","value","m","width","state","e","input","length","match","setState"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACtC,wBAAwBH,KAAK,CAACI,QAAN,CAAe,gBAAf,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAIA,sBACI,oBAAC,GAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,EAAE,EAAE;AACA,yBAAmB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf;AADnB,KAFR;AAKI,IAAA,UAAU,MALd;AAMI,IAAA,YAAY,EAAC,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE,KAAKC,KAAL,CAAWH,KADtB;AAEI,IAAA,QAAQ,EAAE,kBAACI,CAAD,EAAO;AACb,UAAIC,KAAK,GAAGD,CAAC,CAACL,MAAF,CAASC,KAArB;AACA,UACI,CAACK,KAAD,IACCA,KAAK,CAACA,KAAK,CAACC,MAAN,GAAe,CAAhB,CAAL,CAAwBC,KAAxB,CAA8B,OAA9B,KACGF,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,OAAf,CAHR,EAKI,KAAI,CAACC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAEK;AAAT,OAAd;AACP,KAVL;AAWI,IAAA,IAAI,EAAC,MAXT;AAYI,IAAA,WAAW,EAAE,SAZjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAsBI,oBAAC,SAAD;AACI,IAAA,EAAE,EAAC,uBADP;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,YAAY,EAAC,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA8BH","sourcesContent":["import * as React from 'react'\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\n\nexport default function StateTextFields() {\n    const [name, setName] = React.useState('Cat in the Hat')\n    const handleChange = (event) => {\n        setName(event.target.value)\n    }\n\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& > :not(style)': { m: 1, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\"\n        >\n            <TextField\n                value={this.state.value}\n                onChange={(e) => {\n                    let input = e.target.value\n                    if (\n                        !input ||\n                        (input[input.length - 1].match('[0-9]') &&\n                            input[0].match('[1-9]'))\n                    )\n                        this.setState({ value: input })\n                }}\n                type=\"text\"\n                placeholder={'[1-100]'}\n            />\n            <TextField\n                id=\"outlined-uncontrolled\"\n                label=\"Uncontrolled\"\n                defaultValue=\"foo\"\n            />\n        </Box>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}