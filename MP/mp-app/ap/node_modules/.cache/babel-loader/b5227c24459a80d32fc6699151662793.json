{"ast":null,"code":"var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have two main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\n\n\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/graphic/IncrementalDisplayable.js"],"names":["_util","require","inherits","Displayble","BoundingRect","IncrementalDisplayble","opts","call","_displayables","_temporaryDisplayables","_cursor","notClear","prototype","incremental","clearDisplaybles","dirty","addDisplayable","displayable","notPersistent","push","addDisplayables","displayables","i","length","eachPendingDisplayable","cb","update","updateTransform","parent","brush","ctx","prevEl","beforeBrush","afterBrush","m","getBoundingRect","_rect","rect","Infinity","childRect","clone","needLocalTransform","applyTransform","getLocalTransform","union","contain","x","y","localPos","transformCoordToLocal","_default","module","exports"],"mappings":"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","sourcesContent":["var _util = require(\"../core/util\");\n\nvar inherits = _util.inherits;\n\nvar Displayble = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Displayable for incremental rendering. It will be rendered in a separate layer\n * IncrementalDisplay have two main methods. `clearDisplayables` and `addDisplayables`\n * addDisplayables will render the added displayables incremetally.\n *\n * It use a not clearFlag to tell the painter don't clear the layer if it's the first element.\n */\n// TODO Style override ?\nfunction IncrementalDisplayble(opts) {\n  Displayble.call(this, opts);\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.notClear = true;\n}\n\nIncrementalDisplayble.prototype.incremental = true;\n\nIncrementalDisplayble.prototype.clearDisplaybles = function () {\n  this._displayables = [];\n  this._temporaryDisplayables = [];\n  this._cursor = 0;\n  this.dirty();\n  this.notClear = false;\n};\n\nIncrementalDisplayble.prototype.addDisplayable = function (displayable, notPersistent) {\n  if (notPersistent) {\n    this._temporaryDisplayables.push(displayable);\n  } else {\n    this._displayables.push(displayable);\n  }\n\n  this.dirty();\n};\n\nIncrementalDisplayble.prototype.addDisplayables = function (displayables, notPersistent) {\n  notPersistent = notPersistent || false;\n\n  for (var i = 0; i < displayables.length; i++) {\n    this.addDisplayable(displayables[i], notPersistent);\n  }\n};\n\nIncrementalDisplayble.prototype.eachPendingDisplayable = function (cb) {\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    cb && cb(this._displayables[i]);\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    cb && cb(this._temporaryDisplayables[i]);\n  }\n};\n\nIncrementalDisplayble.prototype.update = function () {\n  this.updateTransform();\n\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i]; // PENDING\n\n    displayable.parent = this;\n    displayable.update();\n    displayable.parent = null;\n  }\n};\n\nIncrementalDisplayble.prototype.brush = function (ctx, prevEl) {\n  // Render persistant displayables.\n  for (var i = this._cursor; i < this._displayables.length; i++) {\n    var displayable = this._displayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === this._cursor ? null : this._displayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._cursor = i; // Render temporary displayables.\n\n  for (var i = 0; i < this._temporaryDisplayables.length; i++) {\n    var displayable = this._temporaryDisplayables[i];\n    displayable.beforeBrush && displayable.beforeBrush(ctx);\n    displayable.brush(ctx, i === 0 ? null : this._temporaryDisplayables[i - 1]);\n    displayable.afterBrush && displayable.afterBrush(ctx);\n  }\n\n  this._temporaryDisplayables = [];\n  this.notClear = true;\n};\n\nvar m = [];\n\nIncrementalDisplayble.prototype.getBoundingRect = function () {\n  if (!this._rect) {\n    var rect = new BoundingRect(Infinity, Infinity, -Infinity, -Infinity);\n\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n      var childRect = displayable.getBoundingRect().clone();\n\n      if (displayable.needLocalTransform()) {\n        childRect.applyTransform(displayable.getLocalTransform(m));\n      }\n\n      rect.union(childRect);\n    }\n\n    this._rect = rect;\n  }\n\n  return this._rect;\n};\n\nIncrementalDisplayble.prototype.contain = function (x, y) {\n  var localPos = this.transformCoordToLocal(x, y);\n  var rect = this.getBoundingRect();\n\n  if (rect.contain(localPos[0], localPos[1])) {\n    for (var i = 0; i < this._displayables.length; i++) {\n      var displayable = this._displayables[i];\n\n      if (displayable.contain(x, y)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\ninherits(IncrementalDisplayble, Displayble);\nvar _default = IncrementalDisplayble;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}