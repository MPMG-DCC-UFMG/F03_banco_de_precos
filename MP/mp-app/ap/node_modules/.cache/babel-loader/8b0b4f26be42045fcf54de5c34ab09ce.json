{"ast":null,"code":"import _toConsumableArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/auto-complete/CheckMeses.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\nimport options from \"./Meses.jsx\";\n\nvar MultiSelectAll = function MultiSelectAll() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOptions = _useState2[0],\n      setSelectedOptions = _useState2[1];\n\n  useEffect(function () {\n    setSelectedOptions([{\n      label: \"Todos\",\n      value: \"*\"\n    }].concat(_toConsumableArray(options)));\n  }, []);\n\n  function getDropdownButtonLabel(_ref) {\n    var placeholderButtonLabel = _ref.placeholderButtonLabel,\n        value = _ref.value;\n\n    if (value && value.some(function (o) {\n      return o.value === \"*\";\n    })) {\n      return \"\".concat(placeholderButtonLabel, \": Todos\");\n    } else {\n      return \"\".concat(placeholderButtonLabel, \": \").concat(value.length, \" selected\");\n    }\n  }\n\n  function onChange(value, event) {\n    if (event.action === \"select-option\" && event.option.value === \"*\") {\n      this.setState(this.options);\n    } else if (event.action === \"deselect-option\" && event.option.value === \"*\") {\n      this.setState([]);\n    } else if (event.action === \"deselect-option\") {\n      this.setState(value.filter(function (o) {\n        return o.value !== \"*\";\n      }));\n    } else if (value.length === this.options.length - 1) {\n      this.setState(this.options);\n    } else {\n      this.setState(value);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ReactMultiSelectCheckboxes, {\n    options: [{\n      label: \"Selecionar todos\",\n      value: \"*\"\n    }].concat(_toConsumableArray(options)),\n    placeholderButtonLabel: \"Meses\",\n    getDropdownButtonLabel: getDropdownButtonLabel,\n    value: selectedOptions,\n    onChange: onChange,\n    setState: setSelectedOptions,\n    className: \"periodo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default MultiSelectAll;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/auto-complete/CheckMeses.jsx"],"names":["React","useState","useEffect","ReactMultiSelectCheckboxes","options","MultiSelectAll","selectedOptions","setSelectedOptions","label","value","getDropdownButtonLabel","placeholderButtonLabel","some","o","length","onChange","event","action","option","setState","filter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AAEA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,kBAA8CJ,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,kBAAkB,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAAF,4BAAqCL,OAArC,GAAlB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASM,sBAAT,OAAmE;AAAA,QAAjCC,sBAAiC,QAAjCA,sBAAiC;AAAA,QAATF,KAAS,QAATA,KAAS;;AACjE,QAAIA,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAW,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACJ,KAAF,KAAY,GAAnB;AAAA,KAAX,CAAb,EAAiD;AAC/C,uBAAUE,sBAAV;AACD,KAFD,MAEO;AACL,uBAAUA,sBAAV,eAAqCF,KAAK,CAACK,MAA3C;AACD;AACF;;AAED,WAASC,QAAT,CAAkBN,KAAlB,EAAyBO,KAAzB,EAAgC;AAC9B,QAAIA,KAAK,CAACC,MAAN,KAAiB,eAAjB,IAAoCD,KAAK,CAACE,MAAN,CAAaT,KAAb,KAAuB,GAA/D,EAAoE;AAClE,WAAKU,QAAL,CAAc,KAAKf,OAAnB;AACD,KAFD,MAEO,IACLY,KAAK,CAACC,MAAN,KAAiB,iBAAjB,IACAD,KAAK,CAACE,MAAN,CAAaT,KAAb,KAAuB,GAFlB,EAGL;AACA,WAAKU,QAAL,CAAc,EAAd;AACD,KALM,MAKA,IAAIH,KAAK,CAACC,MAAN,KAAiB,iBAArB,EAAwC;AAC7C,WAAKE,QAAL,CAAcV,KAAK,CAACW,MAAN,CAAa,UAACP,CAAD;AAAA,eAAOA,CAAC,CAACJ,KAAF,KAAY,GAAnB;AAAA,OAAb,CAAd;AACD,KAFM,MAEA,IAAIA,KAAK,CAACK,MAAN,KAAiB,KAAKV,OAAL,CAAaU,MAAb,GAAsB,CAA3C,EAA8C;AACnD,WAAKK,QAAL,CAAc,KAAKf,OAAnB;AACD,KAFM,MAEA;AACL,WAAKe,QAAL,CAAcV,KAAd;AACD;AACF;;AAED,sBACE,oBAAC,0BAAD;AACE,IAAA,OAAO,GAAG;AAAED,MAAAA,KAAK,EAAE,kBAAT;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAH,4BAAiDL,OAAjD,EADT;AAEE,IAAA,sBAAsB,EAAC,OAFzB;AAGE,IAAA,sBAAsB,EAAEM,sBAH1B;AAIE,IAAA,KAAK,EAAEJ,eAJT;AAKE,IAAA,QAAQ,EAAES,QALZ;AAME,IAAA,QAAQ,EAAER,kBANZ;AAOE,IAAA,SAAS,EAAC,SAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAWD,CA3CD;;AA6CA,eAAeF,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\n\nimport options from \"./Meses.jsx\";\n\nconst MultiSelectAll = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n\n  useEffect(() => {\n    setSelectedOptions([{ label: \"Todos\", value: \"*\" }, ...options]);\n  }, []);\n\n  function getDropdownButtonLabel({ placeholderButtonLabel, value }) {\n    if (value && value.some((o) => o.value === \"*\")) {\n      return `${placeholderButtonLabel}: Todos`;\n    } else {\n      return `${placeholderButtonLabel}: ${value.length} selected`;\n    }\n  }\n\n  function onChange(value, event) {\n    if (event.action === \"select-option\" && event.option.value === \"*\") {\n      this.setState(this.options);\n    } else if (\n      event.action === \"deselect-option\" &&\n      event.option.value === \"*\"\n    ) {\n      this.setState([]);\n    } else if (event.action === \"deselect-option\") {\n      this.setState(value.filter((o) => o.value !== \"*\"));\n    } else if (value.length === this.options.length - 1) {\n      this.setState(this.options);\n    } else {\n      this.setState(value);\n    }\n  }\n\n  return (\n    <ReactMultiSelectCheckboxes\n      options={[{ label: \"Selecionar todos\", value: \"*\" }, ...options]}\n      placeholderButtonLabel=\"Meses\"\n      getDropdownButtonLabel={getDropdownButtonLabel}\n      value={selectedOptions}\n      onChange={onChange}\n      setState={setSelectedOptions}\n      className=\"periodo\"\n    />\n  );\n};\n\nexport default MultiSelectAll;"]},"metadata":{},"sourceType":"module"}