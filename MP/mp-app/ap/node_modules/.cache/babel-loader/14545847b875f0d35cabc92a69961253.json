{"ast":null,"code":"var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/core/curve.js"],"names":["_vector","require","v2Create","create","v2DistSquare","distSquare","mathPow","Math","pow","mathSqrt","sqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","val","isNotAroundZero","cubicAt","p0","p1","p2","p3","t","onet","cubicDerivativeAt","cubicRootAt","roots","a","b","c","d","A","B","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","cos","sin","t3","cubicExtrema","extrema","cubicSubdivide","out","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x1","y1","x2","y2","x3","y3","x","y","interval","Infinity","prev","next","d1","d2","_t","i","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","exports"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AAEA,IAAIC,QAAQ,GAAGF,OAAO,CAACG,MAAvB;AACA,IAAIC,YAAY,GAAGJ,OAAO,CAACK,UAA3B;AAEA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,GAAnB;AACA,IAAIC,QAAQ,GAAGF,IAAI,CAACG,IAApB;AACA,IAAIC,OAAO,GAAG,IAAd;AACA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,UAAU,GAAGJ,QAAQ,CAAC,CAAD,CAAzB;AACA,IAAIK,SAAS,GAAG,IAAI,CAApB,C,CAAuB;;AAEvB,IAAIC,GAAG,GAAGb,QAAQ,EAAlB;;AAEA,IAAIc,GAAG,GAAGd,QAAQ,EAAlB;;AAEA,IAAIe,GAAG,GAAGf,QAAQ,EAAlB;;AAEA,SAASgB,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,SAAOA,GAAG,GAAG,CAACR,OAAP,IAAkBQ,GAAG,GAAGR,OAA/B;AACD;;AAED,SAASS,eAAT,CAAyBD,GAAzB,EAA8B;AAC5B,SAAOA,GAAG,GAAGR,OAAN,IAAiBQ,GAAG,GAAG,CAACR,OAA/B;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASU,OAAT,CAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,CAAjC,EAAoC;AAClC,MAAIC,IAAI,GAAG,IAAID,CAAf;AACA,SAAOC,IAAI,GAAGA,IAAP,IAAeA,IAAI,GAAGL,EAAP,GAAY,IAAII,CAAJ,GAAQH,EAAnC,IAAyCG,CAAC,GAAGA,CAAJ,IAASA,CAAC,GAAGD,EAAJ,GAAS,IAAIE,IAAJ,GAAWH,EAA7B,CAAhD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASI,iBAAT,CAA2BN,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,CAA3C,EAA8C;AAC5C,MAAIC,IAAI,GAAG,IAAID,CAAf;AACA,SAAO,KAAK,CAAC,CAACH,EAAE,GAAGD,EAAN,IAAYK,IAAZ,GAAmB,KAAKH,EAAE,GAAGD,EAAV,IAAgBG,CAApC,IAAyCC,IAAzC,GAAgD,CAACF,EAAE,GAAGD,EAAN,IAAYE,CAAZ,GAAgBA,CAArE,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASG,WAAT,CAAqBP,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCN,GAArC,EAA0CW,KAA1C,EAAiD;AAC/C;AACA,MAAIC,CAAC,GAAGN,EAAE,GAAG,KAAKF,EAAE,GAAGC,EAAV,CAAL,GAAqBF,EAA7B;AACA,MAAIU,CAAC,GAAG,KAAKR,EAAE,GAAGD,EAAE,GAAG,CAAV,GAAcD,EAAnB,CAAR;AACA,MAAIW,CAAC,GAAG,KAAKV,EAAE,GAAGD,EAAV,CAAR;AACA,MAAIY,CAAC,GAAGZ,EAAE,GAAGH,GAAb;AACA,MAAIgB,CAAC,GAAGH,CAAC,GAAGA,CAAJ,GAAQ,IAAID,CAAJ,GAAQE,CAAxB;AACA,MAAIG,CAAC,GAAGJ,CAAC,GAAGC,CAAJ,GAAQ,IAAIF,CAAJ,GAAQG,CAAxB;AACA,MAAIG,CAAC,GAAGJ,CAAC,GAAGA,CAAJ,GAAQ,IAAID,CAAJ,GAAQE,CAAxB;AACA,MAAII,CAAC,GAAG,CAAR;;AAEA,MAAIpB,YAAY,CAACiB,CAAD,CAAZ,IAAmBjB,YAAY,CAACkB,CAAD,CAAnC,EAAwC;AACtC,QAAIlB,YAAY,CAACc,CAAD,CAAhB,EAAqB;AACnBF,MAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX;AACD,KAFD,MAEO;AACL,UAAIS,EAAE,GAAG,CAACN,CAAD,GAAKD,CAAd,CADK,CACY;;AAEjB,UAAIO,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;AACF;AACF,GAVD,MAUO;AACL,QAAIC,IAAI,GAAGJ,CAAC,GAAGA,CAAJ,GAAQ,IAAID,CAAJ,GAAQE,CAA3B;;AAEA,QAAInB,YAAY,CAACsB,IAAD,CAAhB,EAAwB;AACtB,UAAIC,CAAC,GAAGL,CAAC,GAAGD,CAAZ;AACA,UAAII,EAAE,GAAG,CAACP,CAAD,GAAKD,CAAL,GAASU,CAAlB,CAFsB,CAED;;AAErB,UAAIC,EAAE,GAAG,CAACD,CAAD,GAAK,CAAd,CAJsB,CAIL;;AAEjB,UAAIF,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;;AAED,UAAIG,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBZ,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaI,EAAb;AACD;AACF,KAbD,MAaO,IAAIF,IAAI,GAAG,CAAX,EAAc;AACnB,UAAIG,QAAQ,GAAGlC,QAAQ,CAAC+B,IAAD,CAAvB;AACA,UAAII,EAAE,GAAGT,CAAC,GAAGH,CAAJ,GAAQ,MAAMD,CAAN,IAAW,CAACK,CAAD,GAAKO,QAAhB,CAAjB;AACA,UAAIE,EAAE,GAAGV,CAAC,GAAGH,CAAJ,GAAQ,MAAMD,CAAN,IAAW,CAACK,CAAD,GAAKO,QAAhB,CAAjB;;AAEA,UAAIC,EAAE,GAAG,CAAT,EAAY;AACVA,QAAAA,EAAE,GAAG,CAACtC,OAAO,CAAC,CAACsC,EAAF,EAAM9B,SAAN,CAAb;AACD,OAFD,MAEO;AACL8B,QAAAA,EAAE,GAAGtC,OAAO,CAACsC,EAAD,EAAK9B,SAAL,CAAZ;AACD;;AAED,UAAI+B,EAAE,GAAG,CAAT,EAAY;AACVA,QAAAA,EAAE,GAAG,CAACvC,OAAO,CAAC,CAACuC,EAAF,EAAM/B,SAAN,CAAb;AACD,OAFD,MAEO;AACL+B,QAAAA,EAAE,GAAGvC,OAAO,CAACuC,EAAD,EAAK/B,SAAL,CAAZ;AACD;;AAED,UAAIyB,EAAE,GAAG,CAAC,CAACP,CAAD,IAAMY,EAAE,GAAGC,EAAX,CAAD,KAAoB,IAAId,CAAxB,CAAT;;AAEA,UAAIQ,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;AACF,KAtBM,MAsBA;AACL,UAAIO,CAAC,GAAG,CAAC,IAAIX,CAAJ,GAAQH,CAAR,GAAY,IAAID,CAAJ,GAAQK,CAArB,KAA2B,IAAI3B,QAAQ,CAAC0B,CAAC,GAAGA,CAAJ,GAAQA,CAAT,CAAvC,CAAR;AACA,UAAIY,KAAK,GAAGxC,IAAI,CAACyC,IAAL,CAAUF,CAAV,IAAe,CAA3B;AACA,UAAIG,KAAK,GAAGxC,QAAQ,CAAC0B,CAAD,CAApB;AACA,UAAIe,GAAG,GAAG3C,IAAI,CAAC4C,GAAL,CAASJ,KAAT,CAAV;AACA,UAAIR,EAAE,GAAG,CAAC,CAACP,CAAD,GAAK,IAAIiB,KAAJ,GAAYC,GAAlB,KAA0B,IAAInB,CAA9B,CAAT;AACA,UAAIW,EAAE,GAAG,CAAC,CAACV,CAAD,GAAKiB,KAAK,IAAIC,GAAG,GAAGrC,UAAU,GAAGN,IAAI,CAAC6C,GAAL,CAASL,KAAT,CAAvB,CAAX,KAAuD,IAAIhB,CAA3D,CAAT;AACA,UAAIsB,EAAE,GAAG,CAAC,CAACrB,CAAD,GAAKiB,KAAK,IAAIC,GAAG,GAAGrC,UAAU,GAAGN,IAAI,CAAC6C,GAAL,CAASL,KAAT,CAAvB,CAAX,KAAuD,IAAIhB,CAA3D,CAAT;;AAEA,UAAIQ,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;;AAED,UAAIG,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBZ,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaI,EAAb;AACD;;AAED,UAAIW,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBvB,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAae,EAAb;AACD;AACF;AACF;;AAED,SAAOf,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASgB,YAAT,CAAsBhC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsC8B,OAAtC,EAA+C;AAC7C,MAAIvB,CAAC,GAAG,IAAIR,EAAJ,GAAS,KAAKD,EAAd,GAAmB,IAAID,EAA/B;AACA,MAAIS,CAAC,GAAG,IAAIR,EAAJ,GAAS,IAAIE,EAAb,GAAkB,IAAIH,EAAtB,GAA2B,IAAIE,EAAvC;AACA,MAAIS,CAAC,GAAG,IAAIV,EAAJ,GAAS,IAAID,EAArB;AACA,MAAIgB,CAAC,GAAG,CAAR;;AAEA,MAAIpB,YAAY,CAACa,CAAD,CAAhB,EAAqB;AACnB,QAAIX,eAAe,CAACY,CAAD,CAAnB,EAAwB;AACtB,UAAIO,EAAE,GAAG,CAACN,CAAD,GAAKD,CAAd;;AAEA,UAAIO,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBgB,QAAAA,OAAO,CAACjB,CAAC,EAAF,CAAP,GAAeC,EAAf;AACD;AACF;AACF,GARD,MAQO;AACL,QAAIC,IAAI,GAAGR,CAAC,GAAGA,CAAJ,GAAQ,IAAID,CAAJ,GAAQE,CAA3B;;AAEA,QAAIf,YAAY,CAACsB,IAAD,CAAhB,EAAwB;AACtBe,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa,CAACvB,CAAD,IAAM,IAAID,CAAV,CAAb;AACD,KAFD,MAEO,IAAIS,IAAI,GAAG,CAAX,EAAc;AACnB,UAAIG,QAAQ,GAAGlC,QAAQ,CAAC+B,IAAD,CAAvB;AACA,UAAID,EAAE,GAAG,CAAC,CAACP,CAAD,GAAKW,QAAN,KAAmB,IAAIZ,CAAvB,CAAT;AACA,UAAIW,EAAE,GAAG,CAAC,CAACV,CAAD,GAAKW,QAAN,KAAmB,IAAIZ,CAAvB,CAAT;;AAEA,UAAIQ,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBgB,QAAAA,OAAO,CAACjB,CAAC,EAAF,CAAP,GAAeC,EAAf;AACD;;AAED,UAAIG,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBa,QAAAA,OAAO,CAACjB,CAAC,EAAF,CAAP,GAAeI,EAAf;AACD;AACF;AACF;;AAED,SAAOJ,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASkB,cAAT,CAAwBlC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCC,CAAxC,EAA2C+B,GAA3C,EAAgD;AAC9C,MAAIC,GAAG,GAAG,CAACnC,EAAE,GAAGD,EAAN,IAAYI,CAAZ,GAAgBJ,EAA1B;AACA,MAAIqC,GAAG,GAAG,CAACnC,EAAE,GAAGD,EAAN,IAAYG,CAAZ,GAAgBH,EAA1B;AACA,MAAIqC,GAAG,GAAG,CAACnC,EAAE,GAAGD,EAAN,IAAYE,CAAZ,GAAgBF,EAA1B;AACA,MAAIqC,IAAI,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAchC,CAAd,GAAkBgC,GAA7B;AACA,MAAII,IAAI,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAcjC,CAAd,GAAkBiC,GAA7B;AACA,MAAII,KAAK,GAAG,CAACD,IAAI,GAAGD,IAAR,IAAgBnC,CAAhB,GAAoBmC,IAAhC,CAN8C,CAMR;;AAEtCJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASnC,EAAT;AACAmC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,GAAT;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,IAAT;AACAJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,KAAT,CAX8C,CAW9B;;AAEhBN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASM,KAAT;AACAN,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,IAAT;AACAL,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASG,GAAT;AACAH,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAShC,EAAT;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASuC,iBAAT,CAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuDC,EAAvD,EAA2DC,CAA3D,EAA8DC,CAA9D,EAAiEjB,GAAjE,EAAsE;AACpE;AACA,MAAI/B,CAAJ;AACA,MAAIiD,QAAQ,GAAG,KAAf;AACA,MAAIzC,CAAC,GAAG0C,QAAR;AACA,MAAIC,IAAJ;AACA,MAAIC,IAAJ;AACA,MAAIC,EAAJ;AACA,MAAIC,EAAJ;AACAjE,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0D,CAAT;AACA1D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2D,CAAT,CAVoE,CAUxD;AACZ;;AAEA,OAAK,IAAIO,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,CAAtB,EAAyBA,EAAE,IAAI,IAA/B,EAAqC;AACnCjE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,OAAO,CAAC4C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBU,EAAjB,CAAhB;AACAjE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,OAAO,CAAC6C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBS,EAAjB,CAAhB;AACAF,IAAAA,EAAE,GAAG3E,YAAY,CAACW,GAAD,EAAMC,GAAN,CAAjB;;AAEA,QAAI+D,EAAE,GAAG7C,CAAT,EAAY;AACVR,MAAAA,CAAC,GAAGuD,EAAJ;AACA/C,MAAAA,CAAC,GAAG6C,EAAJ;AACD;AACF;;AAED7C,EAAAA,CAAC,GAAG0C,QAAJ,CAxBoE,CAwBtD;;AAEd,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIP,QAAQ,GAAG/D,eAAf,EAAgC;AAC9B;AACD;;AAEDiE,IAAAA,IAAI,GAAGnD,CAAC,GAAGiD,QAAX;AACAG,IAAAA,IAAI,GAAGpD,CAAC,GAAGiD,QAAX,CAN2B,CAMN;;AAErB3D,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,OAAO,CAAC4C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBM,IAAjB,CAAhB;AACA7D,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASK,OAAO,CAAC6C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBK,IAAjB,CAAhB;AACAE,IAAAA,EAAE,GAAG3E,YAAY,CAACY,GAAD,EAAMD,GAAN,CAAjB;;AAEA,QAAI8D,IAAI,IAAI,CAAR,IAAaE,EAAE,GAAG7C,CAAtB,EAAyB;AACvBR,MAAAA,CAAC,GAAGmD,IAAJ;AACA3C,MAAAA,CAAC,GAAG6C,EAAJ;AACD,KAHD,MAGO;AACL;AACA9D,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,OAAO,CAAC4C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBO,IAAjB,CAAhB;AACA7D,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,OAAO,CAAC6C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiBM,IAAjB,CAAhB;AACAE,MAAAA,EAAE,GAAG5E,YAAY,CAACa,GAAD,EAAMF,GAAN,CAAjB;;AAEA,UAAI+D,IAAI,IAAI,CAAR,IAAaE,EAAE,GAAG9C,CAAtB,EAAyB;AACvBR,QAAAA,CAAC,GAAGoD,IAAJ;AACA5C,QAAAA,CAAC,GAAG8C,EAAJ;AACD,OAHD,MAGO;AACLL,QAAAA,QAAQ,IAAI,GAAZ;AACD;AACF;AACF,GAtDmE,CAsDlE;;;AAGF,MAAIlB,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASpC,OAAO,CAAC4C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiB7C,CAAjB,CAAhB;AACA+B,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASpC,OAAO,CAAC6C,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaE,EAAb,EAAiB9C,CAAjB,CAAhB;AACD,GA5DmE,CA4DlE;;;AAGF,SAAOjB,QAAQ,CAACyB,CAAD,CAAf;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASiD,WAAT,CAAqB7D,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCE,CAAjC,EAAoC;AAClC,MAAIC,IAAI,GAAG,IAAID,CAAf;AACA,SAAOC,IAAI,IAAIA,IAAI,GAAGL,EAAP,GAAY,IAAII,CAAJ,GAAQH,EAAxB,CAAJ,GAAkCG,CAAC,GAAGA,CAAJ,GAAQF,EAAjD;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS4D,qBAAT,CAA+B9D,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CE,CAA3C,EAA8C;AAC5C,SAAO,KAAK,CAAC,IAAIA,CAAL,KAAWH,EAAE,GAAGD,EAAhB,IAAsBI,CAAC,IAAIF,EAAE,GAAGD,EAAT,CAA5B,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS8D,eAAT,CAAyB/D,EAAzB,EAA6BC,EAA7B,EAAiCC,EAAjC,EAAqCL,GAArC,EAA0CW,KAA1C,EAAiD;AAC/C,MAAIC,CAAC,GAAGT,EAAE,GAAG,IAAIC,EAAT,GAAcC,EAAtB;AACA,MAAIQ,CAAC,GAAG,KAAKT,EAAE,GAAGD,EAAV,CAAR;AACA,MAAIW,CAAC,GAAGX,EAAE,GAAGH,GAAb;AACA,MAAImB,CAAC,GAAG,CAAR;;AAEA,MAAIpB,YAAY,CAACa,CAAD,CAAhB,EAAqB;AACnB,QAAIX,eAAe,CAACY,CAAD,CAAnB,EAAwB;AACtB,UAAIO,EAAE,GAAG,CAACN,CAAD,GAAKD,CAAd;;AAEA,UAAIO,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;AACF;AACF,GARD,MAQO;AACL,QAAIC,IAAI,GAAGR,CAAC,GAAGA,CAAJ,GAAQ,IAAID,CAAJ,GAAQE,CAA3B;;AAEA,QAAIf,YAAY,CAACsB,IAAD,CAAhB,EAAwB;AACtB,UAAID,EAAE,GAAG,CAACP,CAAD,IAAM,IAAID,CAAV,CAAT;;AAEA,UAAIQ,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;AACF,KAND,MAMO,IAAIC,IAAI,GAAG,CAAX,EAAc;AACnB,UAAIG,QAAQ,GAAGlC,QAAQ,CAAC+B,IAAD,CAAvB;AACA,UAAID,EAAE,GAAG,CAAC,CAACP,CAAD,GAAKW,QAAN,KAAmB,IAAIZ,CAAvB,CAAT;AACA,UAAIW,EAAE,GAAG,CAAC,CAACV,CAAD,GAAKW,QAAN,KAAmB,IAAIZ,CAAvB,CAAT;;AAEA,UAAIQ,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBT,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaC,EAAb;AACD;;AAED,UAAIG,EAAE,IAAI,CAAN,IAAWA,EAAE,IAAI,CAArB,EAAwB;AACtBZ,QAAAA,KAAK,CAACQ,CAAC,EAAF,CAAL,GAAaI,EAAb;AACD;AACF;AACF;;AAED,SAAOJ,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASgD,iBAAT,CAA2BhE,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuC;AACrC,MAAI+D,OAAO,GAAGjE,EAAE,GAAGE,EAAL,GAAU,IAAID,EAA5B;;AAEA,MAAIgE,OAAO,KAAK,CAAhB,EAAmB;AACjB;AACA,WAAO,GAAP;AACD,GAHD,MAGO;AACL,WAAO,CAACjE,EAAE,GAAGC,EAAN,IAAYgE,OAAnB;AACD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,kBAAT,CAA4BlE,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC,EAAwCE,CAAxC,EAA2C+B,GAA3C,EAAgD;AAC9C,MAAIC,GAAG,GAAG,CAACnC,EAAE,GAAGD,EAAN,IAAYI,CAAZ,GAAgBJ,EAA1B;AACA,MAAIqC,GAAG,GAAG,CAACnC,EAAE,GAAGD,EAAN,IAAYG,CAAZ,GAAgBH,EAA1B;AACA,MAAIsC,IAAI,GAAG,CAACF,GAAG,GAAGD,GAAP,IAAchC,CAAd,GAAkBgC,GAA7B,CAH8C,CAGZ;;AAElCD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASnC,EAAT;AACAmC,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASC,GAAT;AACAD,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,IAAT,CAP8C,CAO/B;;AAEfJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASI,IAAT;AACAJ,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASE,GAAT;AACAF,EAAAA,GAAG,CAAC,CAAD,CAAH,GAASjC,EAAT;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASiE,qBAAT,CAA+BxB,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuDG,CAAvD,EAA0DC,CAA1D,EAA6DjB,GAA7D,EAAkE;AAChE;AACA,MAAI/B,CAAJ;AACA,MAAIiD,QAAQ,GAAG,KAAf;AACA,MAAIzC,CAAC,GAAG0C,QAAR;AACA7D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0D,CAAT;AACA1D,EAAAA,GAAG,CAAC,CAAD,CAAH,GAAS2D,CAAT,CANgE,CAMpD;AACZ;;AAEA,OAAK,IAAIO,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG,CAAtB,EAAyBA,EAAE,IAAI,IAA/B,EAAqC;AACnCjE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASmE,WAAW,CAAClB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaY,EAAb,CAApB;AACAjE,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASmE,WAAW,CAACjB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaW,EAAb,CAApB;AACA,QAAIF,EAAE,GAAG3E,YAAY,CAACW,GAAD,EAAMC,GAAN,CAArB;;AAEA,QAAI+D,EAAE,GAAG7C,CAAT,EAAY;AACVR,MAAAA,CAAC,GAAGuD,EAAJ;AACA/C,MAAAA,CAAC,GAAG6C,EAAJ;AACD;AACF;;AAED7C,EAAAA,CAAC,GAAG0C,QAAJ,CApBgE,CAoBlD;;AAEd,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIP,QAAQ,GAAG/D,eAAf,EAAgC;AAC9B;AACD;;AAED,QAAIiE,IAAI,GAAGnD,CAAC,GAAGiD,QAAf;AACA,QAAIG,IAAI,GAAGpD,CAAC,GAAGiD,QAAf,CAN2B,CAMF;;AAEzB3D,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASmE,WAAW,CAAClB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaQ,IAAb,CAApB;AACA7D,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASmE,WAAW,CAACjB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaO,IAAb,CAApB;AACA,QAAIE,EAAE,GAAG3E,YAAY,CAACY,GAAD,EAAMD,GAAN,CAArB;;AAEA,QAAI8D,IAAI,IAAI,CAAR,IAAaE,EAAE,GAAG7C,CAAtB,EAAyB;AACvBR,MAAAA,CAAC,GAAGmD,IAAJ;AACA3C,MAAAA,CAAC,GAAG6C,EAAJ;AACD,KAHD,MAGO;AACL;AACA9D,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASkE,WAAW,CAAClB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaS,IAAb,CAApB;AACA7D,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASkE,WAAW,CAACjB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAaQ,IAAb,CAApB;AACA,UAAIE,EAAE,GAAG5E,YAAY,CAACa,GAAD,EAAMF,GAAN,CAArB;;AAEA,UAAI+D,IAAI,IAAI,CAAR,IAAaE,EAAE,GAAG9C,CAAtB,EAAyB;AACvBR,QAAAA,CAAC,GAAGoD,IAAJ;AACA5C,QAAAA,CAAC,GAAG8C,EAAJ;AACD,OAHD,MAGO;AACLL,QAAAA,QAAQ,IAAI,GAAZ;AACD;AACF;AACF,GAlD+D,CAkD9D;;;AAGF,MAAIlB,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0B,WAAW,CAAClB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAa3C,CAAb,CAApB;AACA+B,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS0B,WAAW,CAACjB,EAAD,EAAKE,EAAL,EAASE,EAAT,EAAa5C,CAAb,CAApB;AACD,GAxD+D,CAwD9D;;;AAGF,SAAOjB,QAAQ,CAACyB,CAAD,CAAf;AACD;;AAEDwD,OAAO,CAACrE,OAAR,GAAkBA,OAAlB;AACAqE,OAAO,CAAC9D,iBAAR,GAA4BA,iBAA5B;AACA8D,OAAO,CAAC7D,WAAR,GAAsBA,WAAtB;AACA6D,OAAO,CAACpC,YAAR,GAAuBA,YAAvB;AACAoC,OAAO,CAAClC,cAAR,GAAyBA,cAAzB;AACAkC,OAAO,CAAC1B,iBAAR,GAA4BA,iBAA5B;AACA0B,OAAO,CAACP,WAAR,GAAsBA,WAAtB;AACAO,OAAO,CAACN,qBAAR,GAAgCA,qBAAhC;AACAM,OAAO,CAACL,eAAR,GAA0BA,eAA1B;AACAK,OAAO,CAACJ,iBAAR,GAA4BA,iBAA5B;AACAI,OAAO,CAACF,kBAAR,GAA6BA,kBAA7B;AACAE,OAAO,CAACD,qBAAR,GAAgCA,qBAAhC","sourcesContent":["var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;"]},"metadata":{},"sourceType":"script"}