{"ast":null,"code":"import _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/dialog/SimpleDialog.jsx\";\nvar _excluded = [\"onClose\", \"selectedValue\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nvar emails = ['username@gmail.com', 'user02@gmail.com'];\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      other = _objectWithoutProperties(props, _excluded);\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\"\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Set backup account\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, emails.map(function (email) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(email);\n      },\n      key: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(PersonIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: email,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick('addAccount');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"add account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }))));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  selectedValue: PropTypes.string\n};\nexport default function SimpleDialogDemo() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(emails[1]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Selected: \", selectedValue), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Open simple dialog\"), /*#__PURE__*/React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/dialog/SimpleDialog.jsx"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","classes","onClose","selectedValue","other","handleClose","handleListItemClick","value","map","email","propTypes","func","open","bool","string","SimpleDialogDemo","useState","setOpen","setSelectedValue","handleClickOpen"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,0BAArB;AAEA,IAAMC,MAAM,GAAG,CAAC,oBAAD,EAAuB,kBAAvB,CAAf;AACA,IAAMC,SAAS,GAAGd,UAAU,CAAC;AACzBe,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAEJ,IAAI,CAAC,GAAD,CADjB;AAEJK,IAAAA,KAAK,EAAEL,IAAI,CAAC,GAAD;AAFP;AADiB,CAAD,CAA5B;;AAOA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AACA,MAAQO,OAAR,GAA6CF,KAA7C,CAAQE,OAAR;AAAA,MAAiBC,aAAjB,GAA6CH,KAA7C,CAAiBG,aAAjB;AAAA,MAAmCC,KAAnC,4BAA6CJ,KAA7C;;AAEA,WAASK,WAAT,GAAuB;AACnBH,IAAAA,OAAO,CAACC,aAAD,CAAP;AACH;;AAED,WAASG,mBAAT,CAA6BC,KAA7B,EAAoC;AAChCL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACH;;AAED,sBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEF,WADb;AAEI,uBAAgB;AAFpB,KAGQD,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACc,GAAP,CAAW,UAACC,KAAD;AAAA,wBACR,oBAAC,QAAD;AACI,MAAA,MAAM,MADV;AAEI,MAAA,OAAO,EAAE;AAAA,eAAMH,mBAAmB,CAACG,KAAD,CAAzB;AAAA,OAFb;AAGI,MAAA,GAAG,EAAEA,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAER,OAAO,CAACL,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CALJ,eAUI,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEa,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADQ;AAAA,GAAX,CADL,eAgBI,oBAAC,QAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMH,mBAAmB,CAAC,YAAD,CAAzB;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,eASI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAhBJ,CARJ,CADJ;AAuCH;;AAEDP,YAAY,CAACW,SAAb,GAAyB;AACrBR,EAAAA,OAAO,EAAEtB,SAAS,CAAC+B,IADE;AAErBC,EAAAA,IAAI,EAAEhC,SAAS,CAACiC,IAFK;AAGrBV,EAAAA,aAAa,EAAEvB,SAAS,CAACkC;AAHJ,CAAzB;AAMA,eAAe,SAASC,gBAAT,GAA4B;AACvC,wBAAwBpC,KAAK,CAACqC,QAAN,CAAe,KAAf,CAAxB;AAAA;AAAA,MAAOJ,IAAP;AAAA,MAAaK,OAAb;;AACA,yBAA0CtC,KAAK,CAACqC,QAAN,CAAetB,MAAM,CAAC,CAAD,CAArB,CAA1C;AAAA;AAAA,MAAOS,aAAP;AAAA,MAAsBe,gBAAtB;;AAEA,WAASC,eAAT,GAA2B;AACvBF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,MAAMZ,WAAW,GAAG,SAAdA,WAAc,CAACE,KAAD,EAAW;AAC3BU,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,gBAAgB,CAACX,KAAD,CAAhB;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeJ,aADf,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,OAAO,EAAEgB,eAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAYI,oBAAC,YAAD;AACI,IAAA,aAAa,EAAEhB,aADnB;AAEI,IAAA,IAAI,EAAES,IAFV;AAGI,IAAA,OAAO,EAAEP,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAoBH","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Avatar from '@material-ui/core/Avatar'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Dialog from '@material-ui/core/Dialog'\nimport PersonIcon from '@material-ui/icons/Person'\nimport AddIcon from '@material-ui/icons/Add'\nimport Typography from '@material-ui/core/Typography'\nimport { blue } from '@material-ui/core/colors'\n\nconst emails = ['username@gmail.com', 'user02@gmail.com']\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n})\n\nfunction SimpleDialog(props) {\n    const classes = useStyles()\n    const { onClose, selectedValue, ...other } = props\n\n    function handleClose() {\n        onClose(selectedValue)\n    }\n\n    function handleListItemClick(value) {\n        onClose(value)\n    }\n\n    return (\n        <Dialog\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            {...other}\n        >\n            <DialogTitle id=\"simple-dialog-title\">\n                Set backup account\n            </DialogTitle>\n            <List>\n                {emails.map((email) => (\n                    <ListItem\n                        button\n                        onClick={() => handleListItemClick(email)}\n                        key={email}\n                    >\n                        <ListItemAvatar>\n                            <Avatar className={classes.avatar}>\n                                <PersonIcon />\n                            </Avatar>\n                        </ListItemAvatar>\n                        <ListItemText primary={email} />\n                    </ListItem>\n                ))}\n\n                <ListItem\n                    button\n                    onClick={() => handleListItemClick('addAccount')}\n                >\n                    <ListItemAvatar>\n                        <Avatar>\n                            <AddIcon />\n                        </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary=\"add account\" />\n                </ListItem>\n            </List>\n        </Dialog>\n    )\n}\n\nSimpleDialog.propTypes = {\n    onClose: PropTypes.func,\n    open: PropTypes.bool,\n    selectedValue: PropTypes.string,\n}\n\nexport default function SimpleDialogDemo() {\n    const [open, setOpen] = React.useState(false)\n    const [selectedValue, setSelectedValue] = React.useState(emails[1])\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    const handleClose = (value) => {\n        setOpen(false)\n        setSelectedValue(value)\n    }\n\n    return (\n        <div>\n            <Typography variant=\"subtitle1\">\n                Selected: {selectedValue}\n            </Typography>\n            <br />\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open simple dialog\n            </Button>\n            <SimpleDialog\n                selectedValue={selectedValue}\n                open={open}\n                onClose={handleClose}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}