{"ast":null,"code":"/**\n * @name InfoBox\n * @version 1.1.13 [March 19, 2014]\n * @author Gary Little (inspired by proof-of-concept code from Pamela Fox of Google)\n * @copyright Copyright 2010 Gary Little [gary at luxcentral.com]\n * @fileoverview InfoBox extends the Google Maps JavaScript API V3 <tt>OverlayView</tt> class.\n *  <p>\n *  An InfoBox behaves like a <tt>google.maps.InfoWindow</tt>, but it supports several\n *  additional properties for advanced styling. An InfoBox can also be used as a map label.\n *  <p>\n *  An InfoBox also fires the same events as a <tt>google.maps.InfoWindow</tt>.\n */\n\n/*!\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browser:true */\n\n/*global google */\n\n/**\n * @name InfoBoxOptions\n * @class This class represents the optional parameter passed to the {@link InfoBox} constructor.\n * @property {string|Node} content The content of the InfoBox (plain text or an HTML DOM node).\n * @property {boolean} [disableAutoPan=false] Disable auto-pan on <tt>open</tt>.\n * @property {number} maxWidth The maximum width (in pixels) of the InfoBox. Set to 0 if no maximum.\n * @property {Size} pixelOffset The offset (in pixels) from the top left corner of the InfoBox\n *  (or the bottom left corner if the <code>alignBottom</code> property is <code>true</code>)\n *  to the map pixel corresponding to <tt>position</tt>.\n * @property {LatLng} position The geographic location at which to display the InfoBox.\n * @property {number} zIndex The CSS z-index style value for the InfoBox.\n *  Note: This value overrides a zIndex setting specified in the <tt>boxStyle</tt> property.\n * @property {string} [boxClass=\"infoBox\"] The name of the CSS class defining the styles for the InfoBox container.\n * @property {Object} [boxStyle] An object literal whose properties define specific CSS\n *  style values to be applied to the InfoBox. Style values defined here override those that may\n *  be defined in the <code>boxClass</code> style sheet. If this property is changed after the\n *  InfoBox has been created, all previously set styles (except those defined in the style sheet)\n *  are removed from the InfoBox before the new style values are applied.\n * @property {string} closeBoxMargin The CSS margin style value for the close box.\n *  The default is \"2px\" (a 2-pixel margin on all sides).\n * @property {string} closeBoxURL The URL of the image representing the close box.\n *  Note: The default is the URL for Google's standard close box.\n *  Set this property to \"\" if no close box is required.\n * @property {Size} infoBoxClearance Minimum offset (in pixels) from the InfoBox to the\n *  map edge after an auto-pan.\n * @property {boolean} [isHidden=false] Hide the InfoBox on <tt>open</tt>.\n *  [Deprecated in favor of the <tt>visible</tt> property.]\n * @property {boolean} [visible=true] Show the InfoBox on <tt>open</tt>.\n * @property {boolean} alignBottom Align the bottom left corner of the InfoBox to the <code>position</code>\n *  location (default is <tt>false</tt> which means that the top left corner of the InfoBox is aligned).\n * @property {string} pane The pane where the InfoBox is to appear (default is \"floatPane\").\n *  Set the pane to \"mapPane\" if the InfoBox is being used as a map label.\n *  Valid pane names are the property names for the <tt>google.maps.MapPanes</tt> object.\n * @property {boolean} enableEventPropagation Propagate mousedown, mousemove, mouseover, mouseout,\n *  mouseup, click, dblclick, touchstart, touchend, touchmove, and contextmenu events in the InfoBox\n *  (default is <tt>false</tt> to mimic the behavior of a <tt>google.maps.InfoWindow</tt>). Set\n *  this property to <tt>true</tt> if the InfoBox is being used as a map label.\n */\n\n/**\n * Creates an InfoBox with the options specified in {@link InfoBoxOptions}.\n *  Call <tt>InfoBox.open</tt> to add the box to the map.\n * @constructor\n * @param {InfoBoxOptions} [opt_opts]\n */\nfunction InfoBox(opt_opts) {\n  opt_opts = opt_opts || {};\n  google.maps.OverlayView.apply(this, arguments); // Standard options (in common with google.maps.InfoWindow):\n  //\n\n  this.content_ = opt_opts.content || \"\";\n  this.disableAutoPan_ = opt_opts.disableAutoPan || false;\n  this.maxWidth_ = opt_opts.maxWidth || 0;\n  this.pixelOffset_ = opt_opts.pixelOffset || new google.maps.Size(0, 0);\n  this.position_ = opt_opts.position || new google.maps.LatLng(0, 0);\n  this.zIndex_ = opt_opts.zIndex || null; // Additional options (unique to InfoBox):\n  //\n\n  this.boxClass_ = opt_opts.boxClass || \"infoBox\";\n  this.boxStyle_ = opt_opts.boxStyle || {};\n  this.closeBoxMargin_ = opt_opts.closeBoxMargin || \"2px\";\n  this.closeBoxURL_ = opt_opts.closeBoxURL || \"http://www.google.com/intl/en_us/mapfiles/close.gif\";\n\n  if (opt_opts.closeBoxURL === \"\") {\n    this.closeBoxURL_ = \"\";\n  }\n\n  this.infoBoxClearance_ = opt_opts.infoBoxClearance || new google.maps.Size(1, 1);\n\n  if (typeof opt_opts.visible === \"undefined\") {\n    if (typeof opt_opts.isHidden === \"undefined\") {\n      opt_opts.visible = true;\n    } else {\n      opt_opts.visible = !opt_opts.isHidden;\n    }\n  }\n\n  this.isHidden_ = !opt_opts.visible;\n  this.alignBottom_ = opt_opts.alignBottom || false;\n  this.pane_ = opt_opts.pane || \"floatPane\";\n  this.enableEventPropagation_ = opt_opts.enableEventPropagation || false;\n  this.div_ = null;\n  this.closeListener_ = null;\n  this.moveListener_ = null;\n  this.mapListener_ = null;\n  this.contextListener_ = null;\n  this.eventListeners_ = null;\n  this.fixedWidthSet_ = null;\n}\n/* InfoBox extends OverlayView in the Google Maps API v3.\n */\n\n\nInfoBox.prototype = new google.maps.OverlayView();\n/**\n * Creates the DIV representing the InfoBox.\n * @private\n */\n\nInfoBox.prototype.createInfoBoxDiv_ = function () {\n  var i;\n  var events;\n  var bw;\n  var me = this; // This handler prevents an event in the InfoBox from being passed on to the map.\n  //\n\n  var cancelHandler = function cancelHandler(e) {\n    e.cancelBubble = true;\n\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n  }; // This handler ignores the current event in the InfoBox and conditionally prevents\n  // the event from being passed on to the map. It is used for the contextmenu event.\n  //\n\n\n  var ignoreHandler = function ignoreHandler(e) {\n    e.returnValue = false;\n\n    if (e.preventDefault) {\n      e.preventDefault();\n    }\n\n    if (!me.enableEventPropagation_) {\n      cancelHandler(e);\n    }\n  };\n\n  if (!this.div_) {\n    this.div_ = document.createElement(\"div\");\n    this.setBoxStyle_();\n\n    if (typeof this.content_.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + this.content_;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(this.content_);\n    } // Add the InfoBox DIV to the DOM\n\n\n    this.getPanes()[this.pane_].appendChild(this.div_);\n    this.addClickHandler_();\n\n    if (this.div_.style.width) {\n      this.fixedWidthSet_ = true;\n    } else {\n      if (this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_) {\n        this.div_.style.width = this.maxWidth_;\n        this.fixedWidthSet_ = true;\n      } else {\n        // The following code is needed to overcome problems with MSIE\n        bw = this.getBoxWidths_();\n        this.div_.style.width = this.div_.offsetWidth - bw.left - bw.right + \"px\";\n        this.fixedWidthSet_ = false;\n      }\n    }\n\n    this.panBox_(this.disableAutoPan_);\n\n    if (!this.enableEventPropagation_) {\n      this.eventListeners_ = []; // Cancel event propagation.\n      //\n      // Note: mousemove not included (to resolve Issue 152)\n\n      events = [\"mousedown\", \"mouseover\", \"mouseout\", \"mouseup\", \"click\", \"dblclick\", \"touchstart\", \"touchend\", \"touchmove\"];\n\n      for (i = 0; i < events.length; i++) {\n        this.eventListeners_.push(google.maps.event.addDomListener(this.div_, events[i], cancelHandler));\n      } // Workaround for Google bug that causes the cursor to change to a pointer\n      // when the mouse moves over a marker underneath InfoBox.\n\n\n      this.eventListeners_.push(google.maps.event.addDomListener(this.div_, \"mouseover\", function (e) {\n        this.style.cursor = \"default\";\n      }));\n    }\n\n    this.contextListener_ = google.maps.event.addDomListener(this.div_, \"contextmenu\", ignoreHandler);\n    /**\n     * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n     * @name InfoBox#domready\n     * @event\n     */\n\n    google.maps.event.trigger(this, \"domready\");\n  }\n};\n/**\n * Returns the HTML <IMG> tag for the close box.\n * @private\n */\n\n\nInfoBox.prototype.getCloseBoxImg_ = function () {\n  var img = \"\";\n\n  if (this.closeBoxURL_ !== \"\") {\n    img = \"<img\";\n    img += \" src='\" + this.closeBoxURL_ + \"'\";\n    img += \" align=right\"; // Do this because Opera chokes on style='float: right;'\n\n    img += \" style='\";\n    img += \" position: relative;\"; // Required by MSIE\n\n    img += \" cursor: pointer;\";\n    img += \" margin: \" + this.closeBoxMargin_ + \";\";\n    img += \"'>\";\n  }\n\n  return img;\n};\n/**\n * Adds the click handler to the InfoBox close box.\n * @private\n */\n\n\nInfoBox.prototype.addClickHandler_ = function () {\n  var closeBox;\n\n  if (this.closeBoxURL_ !== \"\") {\n    closeBox = this.div_.firstChild;\n    this.closeListener_ = google.maps.event.addDomListener(closeBox, \"click\", this.getCloseClickHandler_());\n  } else {\n    this.closeListener_ = null;\n  }\n};\n/**\n * Returns the function to call when the user clicks the close box of an InfoBox.\n * @private\n */\n\n\nInfoBox.prototype.getCloseClickHandler_ = function () {\n  var me = this;\n  return function (e) {\n    // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n    e.cancelBubble = true;\n\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n    /**\n     * This event is fired when the InfoBox's close box is clicked.\n     * @name InfoBox#closeclick\n     * @event\n     */\n\n\n    google.maps.event.trigger(me, \"closeclick\");\n    me.close();\n  };\n};\n/**\n * Pans the map so that the InfoBox appears entirely within the map's visible area.\n * @private\n */\n\n\nInfoBox.prototype.panBox_ = function (disablePan) {\n  var map;\n  var bounds;\n  var xOffset = 0,\n      yOffset = 0;\n\n  if (!disablePan) {\n    map = this.getMap();\n\n    if (map instanceof google.maps.Map) {\n      // Only pan if attached to map, not panorama\n      if (!map.getBounds().contains(this.position_)) {\n        // Marker not in visible area of map, so set center\n        // of map to the marker position first.\n        map.setCenter(this.position_);\n      }\n\n      bounds = map.getBounds();\n      var mapDiv = map.getDiv();\n      var mapWidth = mapDiv.offsetWidth;\n      var mapHeight = mapDiv.offsetHeight;\n      var iwOffsetX = this.pixelOffset_.width;\n      var iwOffsetY = this.pixelOffset_.height;\n      var iwWidth = this.div_.offsetWidth;\n      var iwHeight = this.div_.offsetHeight;\n      var padX = this.infoBoxClearance_.width;\n      var padY = this.infoBoxClearance_.height;\n      var pixPosition = this.getProjection().fromLatLngToContainerPixel(this.position_);\n\n      if (pixPosition.x < -iwOffsetX + padX) {\n        xOffset = pixPosition.x + iwOffsetX - padX;\n      } else if (pixPosition.x + iwWidth + iwOffsetX + padX > mapWidth) {\n        xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n      }\n\n      if (this.alignBottom_) {\n        if (pixPosition.y < -iwOffsetY + padY + iwHeight) {\n          yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n        } else if (pixPosition.y + iwOffsetY + padY > mapHeight) {\n          yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n        }\n      } else {\n        if (pixPosition.y < -iwOffsetY + padY) {\n          yOffset = pixPosition.y + iwOffsetY - padY;\n        } else if (pixPosition.y + iwHeight + iwOffsetY + padY > mapHeight) {\n          yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n        }\n      }\n\n      if (!(xOffset === 0 && yOffset === 0)) {\n        // Move the map to the shifted center.\n        //\n        var c = map.getCenter();\n        map.panBy(xOffset, yOffset);\n      }\n    }\n  }\n};\n/**\n * Sets the style of the InfoBox by setting the style sheet and applying\n * other specific styles requested.\n * @private\n */\n\n\nInfoBox.prototype.setBoxStyle_ = function () {\n  var i, boxStyle;\n\n  if (this.div_) {\n    // Apply style values from the style sheet defined in the boxClass parameter:\n    this.div_.className = this.boxClass_; // Clear existing inline style values:\n\n    this.div_.style.cssText = \"\"; // Apply style values defined in the boxStyle parameter:\n\n    boxStyle = this.boxStyle_;\n\n    for (i in boxStyle) {\n      if (boxStyle.hasOwnProperty(i)) {\n        this.div_.style[i] = boxStyle[i];\n      }\n    } // Fix for iOS disappearing InfoBox problem.\n    // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n\n\n    this.div_.style.WebkitTransform = \"translateZ(0)\"; // Fix up opacity style for benefit of MSIE:\n    //\n\n    if (typeof this.div_.style.opacity !== \"undefined\" && this.div_.style.opacity !== \"\") {\n      // See http://www.quirksmode.org/css/opacity.html\n      this.div_.style.MsFilter = \"\\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + this.div_.style.opacity * 100 + \")\\\"\";\n      this.div_.style.filter = \"alpha(opacity=\" + this.div_.style.opacity * 100 + \")\";\n    } // Apply required styles:\n    //\n\n\n    this.div_.style.position = \"absolute\";\n    this.div_.style.visibility = 'hidden';\n\n    if (this.zIndex_ !== null) {\n      this.div_.style.zIndex = this.zIndex_;\n    }\n\n    if (!this.div_.style.overflow) {\n      this.div_.style.overflow = \"auto\";\n    }\n  }\n};\n/**\n * Get the widths of the borders of the InfoBox.\n * @private\n * @return {Object} widths object (top, bottom left, right)\n */\n\n\nInfoBox.prototype.getBoxWidths_ = function () {\n  var computedStyle;\n  var bw = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  };\n  var box = this.div_;\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    computedStyle = box.ownerDocument.defaultView.getComputedStyle(box, \"\");\n\n    if (computedStyle) {\n      // The computed styles are always in pixel units (good!)\n      bw.top = parseInt(computedStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    }\n  } else if (document.documentElement.currentStyle) {\n    // MSIE\n    if (box.currentStyle) {\n      // The current styles may not be in pixel units, but assume they are (bad!)\n      bw.top = parseInt(box.currentStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(box.currentStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(box.currentStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(box.currentStyle.borderRightWidth, 10) || 0;\n    }\n  }\n\n  return bw;\n};\n/**\n * Invoked when <tt>close</tt> is called. Do not call it directly.\n */\n\n\nInfoBox.prototype.onRemove = function () {\n  if (this.div_) {\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n/**\n * Draws the InfoBox based on the current map projection and zoom level.\n */\n\n\nInfoBox.prototype.draw = function () {\n  this.createInfoBoxDiv_();\n  var pixPosition = this.getProjection().fromLatLngToDivPixel(this.position_);\n  this.div_.style.left = pixPosition.x + this.pixelOffset_.width + \"px\";\n\n  if (this.alignBottom_) {\n    this.div_.style.bottom = -(pixPosition.y + this.pixelOffset_.height) + \"px\";\n  } else {\n    this.div_.style.top = pixPosition.y + this.pixelOffset_.height + \"px\";\n  }\n\n  if (this.isHidden_) {\n    this.div_.style.visibility = \"hidden\";\n  } else {\n    this.div_.style.visibility = \"visible\";\n  }\n};\n/**\n * Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,\n *  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>\n *  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one\n *  is <tt>open</tt>ed.\n * @param {InfoBoxOptions} opt_opts\n */\n\n\nInfoBox.prototype.setOptions = function (opt_opts) {\n  if (typeof opt_opts.boxClass !== \"undefined\") {\n    // Must be first\n    this.boxClass_ = opt_opts.boxClass;\n    this.setBoxStyle_();\n  }\n\n  if (typeof opt_opts.boxStyle !== \"undefined\") {\n    // Must be second\n    this.boxStyle_ = opt_opts.boxStyle;\n    this.setBoxStyle_();\n  }\n\n  if (typeof opt_opts.content !== \"undefined\") {\n    this.setContent(opt_opts.content);\n  }\n\n  if (typeof opt_opts.disableAutoPan !== \"undefined\") {\n    this.disableAutoPan_ = opt_opts.disableAutoPan;\n  }\n\n  if (typeof opt_opts.maxWidth !== \"undefined\") {\n    this.maxWidth_ = opt_opts.maxWidth;\n  }\n\n  if (typeof opt_opts.pixelOffset !== \"undefined\") {\n    this.pixelOffset_ = opt_opts.pixelOffset;\n  }\n\n  if (typeof opt_opts.alignBottom !== \"undefined\") {\n    this.alignBottom_ = opt_opts.alignBottom;\n  }\n\n  if (typeof opt_opts.position !== \"undefined\") {\n    this.setPosition(opt_opts.position);\n  }\n\n  if (typeof opt_opts.zIndex !== \"undefined\") {\n    this.setZIndex(opt_opts.zIndex);\n  }\n\n  if (typeof opt_opts.closeBoxMargin !== \"undefined\") {\n    this.closeBoxMargin_ = opt_opts.closeBoxMargin;\n  }\n\n  if (typeof opt_opts.closeBoxURL !== \"undefined\") {\n    this.closeBoxURL_ = opt_opts.closeBoxURL;\n  }\n\n  if (typeof opt_opts.infoBoxClearance !== \"undefined\") {\n    this.infoBoxClearance_ = opt_opts.infoBoxClearance;\n  }\n\n  if (typeof opt_opts.isHidden !== \"undefined\") {\n    this.isHidden_ = opt_opts.isHidden;\n  }\n\n  if (typeof opt_opts.visible !== \"undefined\") {\n    this.isHidden_ = !opt_opts.visible;\n  }\n\n  if (typeof opt_opts.enableEventPropagation !== \"undefined\") {\n    this.enableEventPropagation_ = opt_opts.enableEventPropagation;\n  }\n\n  if (this.div_) {\n    this.draw();\n  }\n};\n/**\n * Sets the content of the InfoBox.\n *  The content can be plain text or an HTML DOM node.\n * @param {string|Node} content\n */\n\n\nInfoBox.prototype.setContent = function (content) {\n  this.content_ = content;\n\n  if (this.div_) {\n    if (this.closeListener_) {\n      google.maps.event.removeListener(this.closeListener_);\n      this.closeListener_ = null;\n    } // Odd code required to make things work with MSIE.\n    //\n\n\n    if (!this.fixedWidthSet_) {\n      this.div_.style.width = \"\";\n    }\n\n    if (typeof content.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + content;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(content);\n    } // Perverse code required to make things work with MSIE.\n    // (Ensures the close box does, in fact, float to the right.)\n    //\n\n\n    if (!this.fixedWidthSet_) {\n      this.div_.style.width = this.div_.offsetWidth + \"px\";\n\n      if (typeof content.nodeType === \"undefined\") {\n        this.div_.innerHTML = this.getCloseBoxImg_() + content;\n      } else {\n        this.div_.innerHTML = this.getCloseBoxImg_();\n        this.div_.appendChild(content);\n      }\n    }\n\n    this.addClickHandler_();\n  }\n  /**\n   * This event is fired when the content of the InfoBox changes.\n   * @name InfoBox#content_changed\n   * @event\n   */\n\n\n  google.maps.event.trigger(this, \"content_changed\");\n};\n/**\n * Sets the geographic location of the InfoBox.\n * @param {LatLng} latlng\n */\n\n\nInfoBox.prototype.setPosition = function (latlng) {\n  this.position_ = latlng;\n\n  if (this.div_) {\n    this.draw();\n  }\n  /**\n   * This event is fired when the position of the InfoBox changes.\n   * @name InfoBox#position_changed\n   * @event\n   */\n\n\n  google.maps.event.trigger(this, \"position_changed\");\n};\n/**\n * Sets the zIndex style for the InfoBox.\n * @param {number} index\n */\n\n\nInfoBox.prototype.setZIndex = function (index) {\n  this.zIndex_ = index;\n\n  if (this.div_) {\n    this.div_.style.zIndex = index;\n  }\n  /**\n   * This event is fired when the zIndex of the InfoBox changes.\n   * @name InfoBox#zindex_changed\n   * @event\n   */\n\n\n  google.maps.event.trigger(this, \"zindex_changed\");\n};\n/**\n * Sets the visibility of the InfoBox.\n * @param {boolean} isVisible\n */\n\n\nInfoBox.prototype.setVisible = function (isVisible) {\n  this.isHidden_ = !isVisible;\n\n  if (this.div_) {\n    this.div_.style.visibility = this.isHidden_ ? \"hidden\" : \"visible\";\n  }\n};\n/**\n * Returns the content of the InfoBox.\n * @returns {string | Node}\n */\n\n\nInfoBox.prototype.getContent = function () {\n  return this.content_;\n};\n/**\n * Returns the geographic location of the InfoBox.\n * @returns {LatLng}\n */\n\n\nInfoBox.prototype.getPosition = function () {\n  return this.position_;\n};\n/**\n * Returns the zIndex for the InfoBox.\n * @returns {number}\n */\n\n\nInfoBox.prototype.getZIndex = function () {\n  return this.zIndex_;\n};\n/**\n * Returns a flag indicating whether the InfoBox is visible.\n * @returns {boolean}\n */\n\n\nInfoBox.prototype.getVisible = function () {\n  var isVisible;\n\n  if (typeof this.getMap() === \"undefined\" || this.getMap() === null) {\n    isVisible = false;\n  } else {\n    isVisible = !this.isHidden_;\n  }\n\n  return isVisible;\n};\n/**\n * Shows the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\n\n\nInfoBox.prototype.show = function () {\n  this.isHidden_ = false;\n\n  if (this.div_) {\n    this.div_.style.visibility = \"visible\";\n  }\n};\n/**\n * Hides the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\n\n\nInfoBox.prototype.hide = function () {\n  this.isHidden_ = true;\n\n  if (this.div_) {\n    this.div_.style.visibility = \"hidden\";\n  }\n};\n/**\n * Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>\n *  (usually a <tt>google.maps.Marker</tt>) is specified, the position\n *  of the InfoBox is set to the position of the <tt>anchor</tt>. If the\n *  anchor is dragged to a new location, the InfoBox moves as well.\n * @param {Map|StreetViewPanorama} map\n * @param {MVCObject} [anchor]\n */\n\n\nInfoBox.prototype.open = function (map, anchor) {\n  var me = this;\n\n  if (anchor) {\n    this.position_ = anchor.getPosition();\n    this.moveListener_ = google.maps.event.addListener(anchor, \"position_changed\", function () {\n      me.setPosition(this.getPosition());\n    });\n    this.mapListener_ = google.maps.event.addListener(anchor, \"map_changed\", function () {\n      me.setMap(this.map);\n    });\n  }\n\n  this.setMap(map);\n\n  if (this.div_) {\n    this.panBox_();\n  }\n};\n/**\n * Removes the InfoBox from the map.\n */\n\n\nInfoBox.prototype.close = function () {\n  var i;\n\n  if (this.closeListener_) {\n    google.maps.event.removeListener(this.closeListener_);\n    this.closeListener_ = null;\n  }\n\n  if (this.eventListeners_) {\n    for (i = 0; i < this.eventListeners_.length; i++) {\n      google.maps.event.removeListener(this.eventListeners_[i]);\n    }\n\n    this.eventListeners_ = null;\n  }\n\n  if (this.moveListener_) {\n    google.maps.event.removeListener(this.moveListener_);\n    this.moveListener_ = null;\n  }\n\n  if (this.mapListener_) {\n    google.maps.event.removeListener(this.mapListener_);\n    this.mapListener_ = null;\n  }\n\n  if (this.contextListener_) {\n    google.maps.event.removeListener(this.contextListener_);\n    this.contextListener_ = null;\n  }\n\n  this.setMap(null);\n};\n\nmodule.exports = {\n  default: InfoBox,\n  InfoBox: InfoBox\n};","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/google-maps-infobox/infobox-module.js"],"names":["InfoBox","opt_opts","google","maps","OverlayView","apply","arguments","content_","content","disableAutoPan_","disableAutoPan","maxWidth_","maxWidth","pixelOffset_","pixelOffset","Size","position_","position","LatLng","zIndex_","zIndex","boxClass_","boxClass","boxStyle_","boxStyle","closeBoxMargin_","closeBoxMargin","closeBoxURL_","closeBoxURL","infoBoxClearance_","infoBoxClearance","visible","isHidden","isHidden_","alignBottom_","alignBottom","pane_","pane","enableEventPropagation_","enableEventPropagation","div_","closeListener_","moveListener_","mapListener_","contextListener_","eventListeners_","fixedWidthSet_","prototype","createInfoBoxDiv_","i","events","bw","me","cancelHandler","e","cancelBubble","stopPropagation","ignoreHandler","returnValue","preventDefault","document","createElement","setBoxStyle_","nodeType","innerHTML","getCloseBoxImg_","appendChild","getPanes","addClickHandler_","style","width","offsetWidth","getBoxWidths_","left","right","panBox_","length","push","event","addDomListener","cursor","trigger","img","closeBox","firstChild","getCloseClickHandler_","close","disablePan","map","bounds","xOffset","yOffset","getMap","Map","getBounds","contains","setCenter","mapDiv","getDiv","mapWidth","mapHeight","offsetHeight","iwOffsetX","iwOffsetY","height","iwWidth","iwHeight","padX","padY","pixPosition","getProjection","fromLatLngToContainerPixel","x","y","c","getCenter","panBy","className","cssText","hasOwnProperty","WebkitTransform","opacity","MsFilter","filter","visibility","overflow","computedStyle","top","bottom","box","defaultView","getComputedStyle","ownerDocument","parseInt","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","documentElement","currentStyle","onRemove","parentNode","removeChild","draw","fromLatLngToDivPixel","setOptions","setContent","setPosition","setZIndex","removeListener","latlng","index","setVisible","isVisible","getContent","getPosition","getZIndex","getVisible","show","hide","open","anchor","addListener","setMap","module","exports","default"],"mappings":"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","sourcesContent":["/**\n * @name InfoBox\n * @version 1.1.13 [March 19, 2014]\n * @author Gary Little (inspired by proof-of-concept code from Pamela Fox of Google)\n * @copyright Copyright 2010 Gary Little [gary at luxcentral.com]\n * @fileoverview InfoBox extends the Google Maps JavaScript API V3 <tt>OverlayView</tt> class.\n *  <p>\n *  An InfoBox behaves like a <tt>google.maps.InfoWindow</tt>, but it supports several\n *  additional properties for advanced styling. An InfoBox can also be used as a map label.\n *  <p>\n *  An InfoBox also fires the same events as a <tt>google.maps.InfoWindow</tt>.\n */\n\n/*!\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint browser:true */\n/*global google */\n\n/**\n * @name InfoBoxOptions\n * @class This class represents the optional parameter passed to the {@link InfoBox} constructor.\n * @property {string|Node} content The content of the InfoBox (plain text or an HTML DOM node).\n * @property {boolean} [disableAutoPan=false] Disable auto-pan on <tt>open</tt>.\n * @property {number} maxWidth The maximum width (in pixels) of the InfoBox. Set to 0 if no maximum.\n * @property {Size} pixelOffset The offset (in pixels) from the top left corner of the InfoBox\n *  (or the bottom left corner if the <code>alignBottom</code> property is <code>true</code>)\n *  to the map pixel corresponding to <tt>position</tt>.\n * @property {LatLng} position The geographic location at which to display the InfoBox.\n * @property {number} zIndex The CSS z-index style value for the InfoBox.\n *  Note: This value overrides a zIndex setting specified in the <tt>boxStyle</tt> property.\n * @property {string} [boxClass=\"infoBox\"] The name of the CSS class defining the styles for the InfoBox container.\n * @property {Object} [boxStyle] An object literal whose properties define specific CSS\n *  style values to be applied to the InfoBox. Style values defined here override those that may\n *  be defined in the <code>boxClass</code> style sheet. If this property is changed after the\n *  InfoBox has been created, all previously set styles (except those defined in the style sheet)\n *  are removed from the InfoBox before the new style values are applied.\n * @property {string} closeBoxMargin The CSS margin style value for the close box.\n *  The default is \"2px\" (a 2-pixel margin on all sides).\n * @property {string} closeBoxURL The URL of the image representing the close box.\n *  Note: The default is the URL for Google's standard close box.\n *  Set this property to \"\" if no close box is required.\n * @property {Size} infoBoxClearance Minimum offset (in pixels) from the InfoBox to the\n *  map edge after an auto-pan.\n * @property {boolean} [isHidden=false] Hide the InfoBox on <tt>open</tt>.\n *  [Deprecated in favor of the <tt>visible</tt> property.]\n * @property {boolean} [visible=true] Show the InfoBox on <tt>open</tt>.\n * @property {boolean} alignBottom Align the bottom left corner of the InfoBox to the <code>position</code>\n *  location (default is <tt>false</tt> which means that the top left corner of the InfoBox is aligned).\n * @property {string} pane The pane where the InfoBox is to appear (default is \"floatPane\").\n *  Set the pane to \"mapPane\" if the InfoBox is being used as a map label.\n *  Valid pane names are the property names for the <tt>google.maps.MapPanes</tt> object.\n * @property {boolean} enableEventPropagation Propagate mousedown, mousemove, mouseover, mouseout,\n *  mouseup, click, dblclick, touchstart, touchend, touchmove, and contextmenu events in the InfoBox\n *  (default is <tt>false</tt> to mimic the behavior of a <tt>google.maps.InfoWindow</tt>). Set\n *  this property to <tt>true</tt> if the InfoBox is being used as a map label.\n */\n\n/**\n * Creates an InfoBox with the options specified in {@link InfoBoxOptions}.\n *  Call <tt>InfoBox.open</tt> to add the box to the map.\n * @constructor\n * @param {InfoBoxOptions} [opt_opts]\n */\nfunction InfoBox(opt_opts) {\n\n  opt_opts = opt_opts || {};\n\n  google.maps.OverlayView.apply(this, arguments);\n\n  // Standard options (in common with google.maps.InfoWindow):\n  //\n  this.content_ = opt_opts.content || \"\";\n  this.disableAutoPan_ = opt_opts.disableAutoPan || false;\n  this.maxWidth_ = opt_opts.maxWidth || 0;\n  this.pixelOffset_ = opt_opts.pixelOffset || new google.maps.Size(0, 0);\n  this.position_ = opt_opts.position || new google.maps.LatLng(0, 0);\n  this.zIndex_ = opt_opts.zIndex || null;\n\n  // Additional options (unique to InfoBox):\n  //\n  this.boxClass_ = opt_opts.boxClass || \"infoBox\";\n  this.boxStyle_ = opt_opts.boxStyle || {};\n  this.closeBoxMargin_ = opt_opts.closeBoxMargin || \"2px\";\n  this.closeBoxURL_ = opt_opts.closeBoxURL || \"http://www.google.com/intl/en_us/mapfiles/close.gif\";\n  if (opt_opts.closeBoxURL === \"\") {\n    this.closeBoxURL_ = \"\";\n  }\n  this.infoBoxClearance_ = opt_opts.infoBoxClearance || new google.maps.Size(1, 1);\n\n  if (typeof opt_opts.visible === \"undefined\") {\n    if (typeof opt_opts.isHidden === \"undefined\") {\n      opt_opts.visible = true;\n    } else {\n      opt_opts.visible = !opt_opts.isHidden;\n    }\n  }\n  this.isHidden_ = !opt_opts.visible;\n\n  this.alignBottom_ = opt_opts.alignBottom || false;\n  this.pane_ = opt_opts.pane || \"floatPane\";\n  this.enableEventPropagation_ = opt_opts.enableEventPropagation || false;\n\n  this.div_ = null;\n  this.closeListener_ = null;\n  this.moveListener_ = null;\n  this.mapListener_ = null;\n  this.contextListener_ = null;\n  this.eventListeners_ = null;\n  this.fixedWidthSet_ = null;\n}\n\n/* InfoBox extends OverlayView in the Google Maps API v3.\n */\nInfoBox.prototype = new google.maps.OverlayView();\n\n/**\n * Creates the DIV representing the InfoBox.\n * @private\n */\nInfoBox.prototype.createInfoBoxDiv_ = function () {\n\n  var i;\n  var events;\n  var bw;\n  var me = this;\n\n  // This handler prevents an event in the InfoBox from being passed on to the map.\n  //\n  var cancelHandler = function (e) {\n    e.cancelBubble = true;\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n  };\n\n  // This handler ignores the current event in the InfoBox and conditionally prevents\n  // the event from being passed on to the map. It is used for the contextmenu event.\n  //\n  var ignoreHandler = function (e) {\n\n    e.returnValue = false;\n\n    if (e.preventDefault) {\n\n      e.preventDefault();\n    }\n\n    if (!me.enableEventPropagation_) {\n\n      cancelHandler(e);\n    }\n  };\n\n  if (!this.div_) {\n\n    this.div_ = document.createElement(\"div\");\n\n    this.setBoxStyle_();\n\n    if (typeof this.content_.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + this.content_;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(this.content_);\n    }\n\n    // Add the InfoBox DIV to the DOM\n    this.getPanes()[this.pane_].appendChild(this.div_);\n\n    this.addClickHandler_();\n\n    if (this.div_.style.width) {\n\n      this.fixedWidthSet_ = true;\n\n    } else {\n\n      if (this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_) {\n\n        this.div_.style.width = this.maxWidth_;\n        this.fixedWidthSet_ = true;\n\n      } else { // The following code is needed to overcome problems with MSIE\n\n        bw = this.getBoxWidths_();\n\n        this.div_.style.width = (this.div_.offsetWidth - bw.left - bw.right) + \"px\";\n        this.fixedWidthSet_ = false;\n      }\n    }\n\n    this.panBox_(this.disableAutoPan_);\n\n    if (!this.enableEventPropagation_) {\n\n      this.eventListeners_ = [];\n\n      // Cancel event propagation.\n      //\n      // Note: mousemove not included (to resolve Issue 152)\n      events = [\"mousedown\", \"mouseover\", \"mouseout\", \"mouseup\",\n      \"click\", \"dblclick\", \"touchstart\", \"touchend\", \"touchmove\"];\n\n      for (i = 0; i < events.length; i++) {\n\n        this.eventListeners_.push(google.maps.event.addDomListener(this.div_, events[i], cancelHandler));\n      }\n\n      // Workaround for Google bug that causes the cursor to change to a pointer\n      // when the mouse moves over a marker underneath InfoBox.\n      this.eventListeners_.push(google.maps.event.addDomListener(this.div_, \"mouseover\", function (e) {\n        this.style.cursor = \"default\";\n      }));\n    }\n\n    this.contextListener_ = google.maps.event.addDomListener(this.div_, \"contextmenu\", ignoreHandler);\n\n    /**\n     * This event is fired when the DIV containing the InfoBox's content is attached to the DOM.\n     * @name InfoBox#domready\n     * @event\n     */\n    google.maps.event.trigger(this, \"domready\");\n  }\n};\n\n/**\n * Returns the HTML <IMG> tag for the close box.\n * @private\n */\nInfoBox.prototype.getCloseBoxImg_ = function () {\n\n  var img = \"\";\n\n  if (this.closeBoxURL_ !== \"\") {\n\n    img  = \"<img\";\n    img += \" src='\" + this.closeBoxURL_ + \"'\";\n    img += \" align=right\"; // Do this because Opera chokes on style='float: right;'\n    img += \" style='\";\n    img += \" position: relative;\"; // Required by MSIE\n    img += \" cursor: pointer;\";\n    img += \" margin: \" + this.closeBoxMargin_ + \";\";\n    img += \"'>\";\n  }\n\n  return img;\n};\n\n/**\n * Adds the click handler to the InfoBox close box.\n * @private\n */\nInfoBox.prototype.addClickHandler_ = function () {\n\n  var closeBox;\n\n  if (this.closeBoxURL_ !== \"\") {\n\n    closeBox = this.div_.firstChild;\n    this.closeListener_ = google.maps.event.addDomListener(closeBox, \"click\", this.getCloseClickHandler_());\n\n  } else {\n\n    this.closeListener_ = null;\n  }\n};\n\n/**\n * Returns the function to call when the user clicks the close box of an InfoBox.\n * @private\n */\nInfoBox.prototype.getCloseClickHandler_ = function () {\n\n  var me = this;\n\n  return function (e) {\n\n    // 1.0.3 fix: Always prevent propagation of a close box click to the map:\n    e.cancelBubble = true;\n\n    if (e.stopPropagation) {\n\n      e.stopPropagation();\n    }\n\n    /**\n     * This event is fired when the InfoBox's close box is clicked.\n     * @name InfoBox#closeclick\n     * @event\n     */\n    google.maps.event.trigger(me, \"closeclick\");\n\n    me.close();\n  };\n};\n\n/**\n * Pans the map so that the InfoBox appears entirely within the map's visible area.\n * @private\n */\nInfoBox.prototype.panBox_ = function (disablePan) {\n\n  var map;\n  var bounds;\n  var xOffset = 0, yOffset = 0;\n\n  if (!disablePan) {\n\n    map = this.getMap();\n\n    if (map instanceof google.maps.Map) { // Only pan if attached to map, not panorama\n\n      if (!map.getBounds().contains(this.position_)) {\n      // Marker not in visible area of map, so set center\n      // of map to the marker position first.\n        map.setCenter(this.position_);\n      }\n\n      bounds = map.getBounds();\n\n      var mapDiv = map.getDiv();\n      var mapWidth = mapDiv.offsetWidth;\n      var mapHeight = mapDiv.offsetHeight;\n      var iwOffsetX = this.pixelOffset_.width;\n      var iwOffsetY = this.pixelOffset_.height;\n      var iwWidth = this.div_.offsetWidth;\n      var iwHeight = this.div_.offsetHeight;\n      var padX = this.infoBoxClearance_.width;\n      var padY = this.infoBoxClearance_.height;\n      var pixPosition = this.getProjection().fromLatLngToContainerPixel(this.position_);\n\n      if (pixPosition.x < (-iwOffsetX + padX)) {\n        xOffset = pixPosition.x + iwOffsetX - padX;\n      } else if ((pixPosition.x + iwWidth + iwOffsetX + padX) > mapWidth) {\n        xOffset = pixPosition.x + iwWidth + iwOffsetX + padX - mapWidth;\n      }\n      if (this.alignBottom_) {\n        if (pixPosition.y < (-iwOffsetY + padY + iwHeight)) {\n          yOffset = pixPosition.y + iwOffsetY - padY - iwHeight;\n        } else if ((pixPosition.y + iwOffsetY + padY) > mapHeight) {\n          yOffset = pixPosition.y + iwOffsetY + padY - mapHeight;\n        }\n      } else {\n        if (pixPosition.y < (-iwOffsetY + padY)) {\n          yOffset = pixPosition.y + iwOffsetY - padY;\n        } else if ((pixPosition.y + iwHeight + iwOffsetY + padY) > mapHeight) {\n          yOffset = pixPosition.y + iwHeight + iwOffsetY + padY - mapHeight;\n        }\n      }\n\n      if (!(xOffset === 0 && yOffset === 0)) {\n\n        // Move the map to the shifted center.\n        //\n        var c = map.getCenter();\n        map.panBy(xOffset, yOffset);\n      }\n    }\n  }\n};\n\n/**\n * Sets the style of the InfoBox by setting the style sheet and applying\n * other specific styles requested.\n * @private\n */\nInfoBox.prototype.setBoxStyle_ = function () {\n\n  var i, boxStyle;\n\n  if (this.div_) {\n\n    // Apply style values from the style sheet defined in the boxClass parameter:\n    this.div_.className = this.boxClass_;\n\n    // Clear existing inline style values:\n    this.div_.style.cssText = \"\";\n\n    // Apply style values defined in the boxStyle parameter:\n    boxStyle = this.boxStyle_;\n    for (i in boxStyle) {\n\n      if (boxStyle.hasOwnProperty(i)) {\n\n        this.div_.style[i] = boxStyle[i];\n      }\n    }\n\n    // Fix for iOS disappearing InfoBox problem.\n    // See http://stackoverflow.com/questions/9229535/google-maps-markers-disappear-at-certain-zoom-level-only-on-iphone-ipad\n    this.div_.style.WebkitTransform = \"translateZ(0)\";\n\n    // Fix up opacity style for benefit of MSIE:\n    //\n    if (typeof this.div_.style.opacity !== \"undefined\" && this.div_.style.opacity !== \"\") {\n      // See http://www.quirksmode.org/css/opacity.html\n      this.div_.style.MsFilter = \"\\\"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + (this.div_.style.opacity * 100) + \")\\\"\";\n      this.div_.style.filter = \"alpha(opacity=\" + (this.div_.style.opacity * 100) + \")\";\n    }\n\n    // Apply required styles:\n    //\n    this.div_.style.position = \"absolute\";\n    this.div_.style.visibility = 'hidden';\n    if (this.zIndex_ !== null) {\n\n      this.div_.style.zIndex = this.zIndex_;\n    }\n    if (!this.div_.style.overflow) {\n      this.div_.style.overflow = \"auto\";\n    }\n  }\n};\n\n/**\n * Get the widths of the borders of the InfoBox.\n * @private\n * @return {Object} widths object (top, bottom left, right)\n */\nInfoBox.prototype.getBoxWidths_ = function () {\n\n  var computedStyle;\n  var bw = {top: 0, bottom: 0, left: 0, right: 0};\n  var box = this.div_;\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n\n    computedStyle = box.ownerDocument.defaultView.getComputedStyle(box, \"\");\n\n    if (computedStyle) {\n\n      // The computed styles are always in pixel units (good!)\n      bw.top = parseInt(computedStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    }\n\n  } else if (document.documentElement.currentStyle) { // MSIE\n\n    if (box.currentStyle) {\n\n      // The current styles may not be in pixel units, but assume they are (bad!)\n      bw.top = parseInt(box.currentStyle.borderTopWidth, 10) || 0;\n      bw.bottom = parseInt(box.currentStyle.borderBottomWidth, 10) || 0;\n      bw.left = parseInt(box.currentStyle.borderLeftWidth, 10) || 0;\n      bw.right = parseInt(box.currentStyle.borderRightWidth, 10) || 0;\n    }\n  }\n\n  return bw;\n};\n\n/**\n * Invoked when <tt>close</tt> is called. Do not call it directly.\n */\nInfoBox.prototype.onRemove = function () {\n\n  if (this.div_) {\n\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n/**\n * Draws the InfoBox based on the current map projection and zoom level.\n */\nInfoBox.prototype.draw = function () {\n\n  this.createInfoBoxDiv_();\n\n  var pixPosition = this.getProjection().fromLatLngToDivPixel(this.position_);\n\n  this.div_.style.left = (pixPosition.x + this.pixelOffset_.width) + \"px\";\n\n  if (this.alignBottom_) {\n    this.div_.style.bottom = -(pixPosition.y + this.pixelOffset_.height) + \"px\";\n  } else {\n    this.div_.style.top = (pixPosition.y + this.pixelOffset_.height) + \"px\";\n  }\n\n  if (this.isHidden_) {\n\n    this.div_.style.visibility = \"hidden\";\n\n  } else {\n\n    this.div_.style.visibility = \"visible\";\n  }\n};\n\n/**\n * Sets the options for the InfoBox. Note that changes to the <tt>maxWidth</tt>,\n *  <tt>closeBoxMargin</tt>, <tt>closeBoxURL</tt>, and <tt>enableEventPropagation</tt>\n *  properties have no affect until the current InfoBox is <tt>close</tt>d and a new one\n *  is <tt>open</tt>ed.\n * @param {InfoBoxOptions} opt_opts\n */\nInfoBox.prototype.setOptions = function (opt_opts) {\n  if (typeof opt_opts.boxClass !== \"undefined\") { // Must be first\n\n    this.boxClass_ = opt_opts.boxClass;\n    this.setBoxStyle_();\n  }\n  if (typeof opt_opts.boxStyle !== \"undefined\") { // Must be second\n\n    this.boxStyle_ = opt_opts.boxStyle;\n    this.setBoxStyle_();\n  }\n  if (typeof opt_opts.content !== \"undefined\") {\n\n    this.setContent(opt_opts.content);\n  }\n  if (typeof opt_opts.disableAutoPan !== \"undefined\") {\n\n    this.disableAutoPan_ = opt_opts.disableAutoPan;\n  }\n  if (typeof opt_opts.maxWidth !== \"undefined\") {\n\n    this.maxWidth_ = opt_opts.maxWidth;\n  }\n  if (typeof opt_opts.pixelOffset !== \"undefined\") {\n\n    this.pixelOffset_ = opt_opts.pixelOffset;\n  }\n  if (typeof opt_opts.alignBottom !== \"undefined\") {\n\n    this.alignBottom_ = opt_opts.alignBottom;\n  }\n  if (typeof opt_opts.position !== \"undefined\") {\n\n    this.setPosition(opt_opts.position);\n  }\n  if (typeof opt_opts.zIndex !== \"undefined\") {\n\n    this.setZIndex(opt_opts.zIndex);\n  }\n  if (typeof opt_opts.closeBoxMargin !== \"undefined\") {\n\n    this.closeBoxMargin_ = opt_opts.closeBoxMargin;\n  }\n  if (typeof opt_opts.closeBoxURL !== \"undefined\") {\n\n    this.closeBoxURL_ = opt_opts.closeBoxURL;\n  }\n  if (typeof opt_opts.infoBoxClearance !== \"undefined\") {\n\n    this.infoBoxClearance_ = opt_opts.infoBoxClearance;\n  }\n  if (typeof opt_opts.isHidden !== \"undefined\") {\n\n    this.isHidden_ = opt_opts.isHidden;\n  }\n  if (typeof opt_opts.visible !== \"undefined\") {\n\n    this.isHidden_ = !opt_opts.visible;\n  }\n  if (typeof opt_opts.enableEventPropagation !== \"undefined\") {\n\n    this.enableEventPropagation_ = opt_opts.enableEventPropagation;\n  }\n\n  if (this.div_) {\n\n    this.draw();\n  }\n};\n\n/**\n * Sets the content of the InfoBox.\n *  The content can be plain text or an HTML DOM node.\n * @param {string|Node} content\n */\nInfoBox.prototype.setContent = function (content) {\n  this.content_ = content;\n\n  if (this.div_) {\n\n    if (this.closeListener_) {\n\n      google.maps.event.removeListener(this.closeListener_);\n      this.closeListener_ = null;\n    }\n\n    // Odd code required to make things work with MSIE.\n    //\n    if (!this.fixedWidthSet_) {\n\n      this.div_.style.width = \"\";\n    }\n\n    if (typeof content.nodeType === \"undefined\") {\n      this.div_.innerHTML = this.getCloseBoxImg_() + content;\n    } else {\n      this.div_.innerHTML = this.getCloseBoxImg_();\n      this.div_.appendChild(content);\n    }\n\n    // Perverse code required to make things work with MSIE.\n    // (Ensures the close box does, in fact, float to the right.)\n    //\n    if (!this.fixedWidthSet_) {\n      this.div_.style.width = this.div_.offsetWidth + \"px\";\n      if (typeof content.nodeType === \"undefined\") {\n        this.div_.innerHTML = this.getCloseBoxImg_() + content;\n      } else {\n        this.div_.innerHTML = this.getCloseBoxImg_();\n        this.div_.appendChild(content);\n      }\n    }\n\n    this.addClickHandler_();\n  }\n\n  /**\n   * This event is fired when the content of the InfoBox changes.\n   * @name InfoBox#content_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"content_changed\");\n};\n\n/**\n * Sets the geographic location of the InfoBox.\n * @param {LatLng} latlng\n */\nInfoBox.prototype.setPosition = function (latlng) {\n\n  this.position_ = latlng;\n\n  if (this.div_) {\n\n    this.draw();\n  }\n\n  /**\n   * This event is fired when the position of the InfoBox changes.\n   * @name InfoBox#position_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"position_changed\");\n};\n\n/**\n * Sets the zIndex style for the InfoBox.\n * @param {number} index\n */\nInfoBox.prototype.setZIndex = function (index) {\n\n  this.zIndex_ = index;\n\n  if (this.div_) {\n\n    this.div_.style.zIndex = index;\n  }\n\n  /**\n   * This event is fired when the zIndex of the InfoBox changes.\n   * @name InfoBox#zindex_changed\n   * @event\n   */\n  google.maps.event.trigger(this, \"zindex_changed\");\n};\n\n/**\n * Sets the visibility of the InfoBox.\n * @param {boolean} isVisible\n */\nInfoBox.prototype.setVisible = function (isVisible) {\n\n  this.isHidden_ = !isVisible;\n  if (this.div_) {\n    this.div_.style.visibility = (this.isHidden_ ? \"hidden\" : \"visible\");\n  }\n};\n\n/**\n * Returns the content of the InfoBox.\n * @returns {string | Node}\n */\nInfoBox.prototype.getContent = function () {\n\n  return this.content_;\n};\n\n/**\n * Returns the geographic location of the InfoBox.\n * @returns {LatLng}\n */\nInfoBox.prototype.getPosition = function () {\n\n  return this.position_;\n};\n\n/**\n * Returns the zIndex for the InfoBox.\n * @returns {number}\n */\nInfoBox.prototype.getZIndex = function () {\n\n  return this.zIndex_;\n};\n\n/**\n * Returns a flag indicating whether the InfoBox is visible.\n * @returns {boolean}\n */\nInfoBox.prototype.getVisible = function () {\n\n  var isVisible;\n\n  if ((typeof this.getMap() === \"undefined\") || (this.getMap() === null)) {\n    isVisible = false;\n  } else {\n    isVisible = !this.isHidden_;\n  }\n  return isVisible;\n};\n\n/**\n * Shows the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\nInfoBox.prototype.show = function () {\n\n  this.isHidden_ = false;\n  if (this.div_) {\n    this.div_.style.visibility = \"visible\";\n  }\n};\n\n/**\n * Hides the InfoBox. [Deprecated; use <tt>setVisible</tt> instead.]\n */\nInfoBox.prototype.hide = function () {\n\n  this.isHidden_ = true;\n  if (this.div_) {\n    this.div_.style.visibility = \"hidden\";\n  }\n};\n\n/**\n * Adds the InfoBox to the specified map or Street View panorama. If <tt>anchor</tt>\n *  (usually a <tt>google.maps.Marker</tt>) is specified, the position\n *  of the InfoBox is set to the position of the <tt>anchor</tt>. If the\n *  anchor is dragged to a new location, the InfoBox moves as well.\n * @param {Map|StreetViewPanorama} map\n * @param {MVCObject} [anchor]\n */\nInfoBox.prototype.open = function (map, anchor) {\n\n  var me = this;\n\n  if (anchor) {\n\n    this.position_ = anchor.getPosition();\n    this.moveListener_ = google.maps.event.addListener(anchor, \"position_changed\", function () {\n      me.setPosition(this.getPosition());\n    });\n\n    this.mapListener_ = google.maps.event.addListener(anchor, \"map_changed\", function() {\n      me.setMap(this.map);\n    });\n  }\n\n  this.setMap(map);\n\n  if (this.div_) {\n\n    this.panBox_();\n  }\n};\n\n/**\n * Removes the InfoBox from the map.\n */\nInfoBox.prototype.close = function () {\n\n  var i;\n\n  if (this.closeListener_) {\n\n    google.maps.event.removeListener(this.closeListener_);\n    this.closeListener_ = null;\n  }\n\n  if (this.eventListeners_) {\n\n    for (i = 0; i < this.eventListeners_.length; i++) {\n\n      google.maps.event.removeListener(this.eventListeners_[i]);\n    }\n    this.eventListeners_ = null;\n  }\n\n  if (this.moveListener_) {\n\n    google.maps.event.removeListener(this.moveListener_);\n    this.moveListener_ = null;\n  }\n\n  if (this.mapListener_) {\n\n    google.maps.event.removeListener(this.mapListener_);\n    this.mapListener_ = null;\n  }\n\n  if (this.contextListener_) {\n\n    google.maps.event.removeListener(this.contextListener_);\n    this.contextListener_ = null;\n  }\n\n  this.setMap(null);\n};\n\n\nmodule.exports = { default: InfoBox, InfoBox: InfoBox }; "]},"metadata":{},"sourceType":"script"}