{"ast":null,"code":"var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_;\n    var y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema === 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i === 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        i += 1;\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/contain/path.js"],"names":["PathProxy","require","line","cubic","quadratic","arc","_util","normalizeRadian","curve","windingLine","CMD","PI2","Math","PI","EPSILON","isAroundEqual","a","b","abs","roots","extrema","swapExtrema","tmp","windingCubic","x0","y0","x1","y1","x2","y2","x3","y3","x","y","nRoots","cubicRootAt","w","nExtrema","y0_","y1_","i","t","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","cx","cy","r","startAngle","endAngle","anticlockwise","sqrt","diff","dir","angle","atan2","containPath","data","lineWidth","isStroke","xi","yi","length","cmd","M","L","containStroke","C","Q","A","rx","ry","theta","dTheta","cos","sin","_x","R","width","height","Z","contain","pathData","exports"],"mappings":"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","sourcesContent":["var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_;\n    var y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema === 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i === 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        i += 1;\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;"]},"metadata":{},"sourceType":"script"}