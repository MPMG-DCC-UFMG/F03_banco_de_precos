{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function init() {\n    this._layers = [];\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/themeRiver/ThemeRiverView.js"],"names":["echarts","require","_poly","Polygon","graphic","_util","bind","extend","DataDiffer","_default","extendChartView","type","init","_layers","render","seriesModel","ecModel","api","data","getData","group","layerSeries","getLayerSeries","layoutInfo","getLayout","rect","boundaryGap","attr","y","keyGetter","item","name","dataDiffer","_layersSeries","newLayersGroups","add","process","update","remove","execute","status","idx","oldIdx","oldLayersGroups","points0","points1","color","indices","j","length","layout","getItemLayout","x","y0","push","getItemVisual","polygon","text","textLayout","itemModel","getItemModel","labelModel","getModel","margin","get","layerGroup","Group","shape","points","stackedOnPoints","smooth","stackedOnSmooth","smoothConstraint","z2","Text","style","setClipPath","createGridClipShape","getBoundingRect","removeClipPath","childAt","updateProps","hoverItemStyleModel","itemStyleModel","setTextStyle","getFormattedLabel","getName","textVerticalAlign","setStyle","fill","getItemStyle","setHoverStyle","dispose","cb","rectEl","Rect","width","height","initProps","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}