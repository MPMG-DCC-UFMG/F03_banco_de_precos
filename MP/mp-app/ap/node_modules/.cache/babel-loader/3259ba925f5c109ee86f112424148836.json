{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption() {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function restoreData() {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/coord/cartesian/AxisModel.js"],"names":["zrUtil","require","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","extend","type","axis","init","superApply","arguments","resetRange","mergeOption","restoreData","getCoordSysModel","ecModel","queryComponents","mainType","index","option","gridIndex","id","gridId","getAxisType","axisDim","data","merge","prototype","extraOption","offset","_default","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,uBAAD,CAA5B;;AAEA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,qBAAD,CAA9B;;AAEA,IAAIG,oBAAoB,GAAGH,OAAO,CAAC,yBAAD,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAII,SAAS,GAAGH,cAAc,CAACI,MAAf,CAAsB;AACpCC,EAAAA,IAAI,EAAE,iBAD8B;;AAGpC;AACF;AACA;AACEC,EAAAA,IAAI,EAAE,IAN8B;;AAQpC;AACF;AACA;AACEC,EAAAA,IAAI,EAAE,gBAAY;AAChBJ,IAAAA,SAAS,CAACK,UAAV,CAAqB,IAArB,EAA2B,MAA3B,EAAmCC,SAAnC;AACA,SAAKC,UAAL;AACD,GAdmC;;AAgBpC;AACF;AACA;AACEC,EAAAA,WAAW,EAAE,uBAAY;AACvBR,IAAAA,SAAS,CAACK,UAAV,CAAqB,IAArB,EAA2B,aAA3B,EAA0CC,SAA1C;AACA,SAAKC,UAAL;AACD,GAtBmC;;AAwBpC;AACF;AACA;AACEE,EAAAA,WAAW,EAAE,uBAAY;AACvBT,IAAAA,SAAS,CAACK,UAAV,CAAqB,IAArB,EAA2B,aAA3B,EAA0CC,SAA1C;AACA,SAAKC,UAAL;AACD,GA9BmC;;AAgCpC;AACF;AACA;AACA;AACEG,EAAAA,gBAAgB,EAAE,4BAAY;AAC5B,WAAO,KAAKC,OAAL,CAAaC,eAAb,CAA6B;AAClCC,MAAAA,QAAQ,EAAE,MADwB;AAElCC,MAAAA,KAAK,EAAE,KAAKC,MAAL,CAAYC,SAFe;AAGlCC,MAAAA,EAAE,EAAE,KAAKF,MAAL,CAAYG;AAHkB,KAA7B,EAIJ,CAJI,CAAP;AAKD;AA1CmC,CAAtB,CAAhB;;AA6CA,SAASC,WAAT,CAAqBC,OAArB,EAA8BL,MAA9B,EAAsC;AACpC;AACA,SAAOA,MAAM,CAACb,IAAP,KAAgBa,MAAM,CAACM,IAAP,GAAc,UAAd,GAA2B,OAA3C,CAAP;AACD;;AAED1B,MAAM,CAAC2B,KAAP,CAAatB,SAAS,CAACuB,SAAvB,EAAkCxB,oBAAlC;AACA,IAAIyB,WAAW,GAAG;AAChB;AACA;AACA;AACAC,EAAAA,MAAM,EAAE;AAJQ,CAAlB;AAMA3B,gBAAgB,CAAC,GAAD,EAAME,SAAN,EAAiBmB,WAAjB,EAA8BK,WAA9B,CAAhB;AACA1B,gBAAgB,CAAC,GAAD,EAAME,SAAN,EAAiBmB,WAAjB,EAA8BK,WAA9B,CAAhB;AACA,IAAIE,QAAQ,GAAG1B,SAAf;AACA2B,MAAM,CAACC,OAAP,GAAiBF,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}