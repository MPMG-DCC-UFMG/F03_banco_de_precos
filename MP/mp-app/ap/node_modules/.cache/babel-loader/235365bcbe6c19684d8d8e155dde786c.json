{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * add commas after every three numbers\n * @param {string|number} x\n * @return {string}\n */\n\n\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function wrapVar(varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\n/**\n * @public\n * @param {Object} opt\n * @param {string} opt.text\n * @param {string} opt.font\n * @param {string} [opt.textAlign='left']\n * @param {string} [opt.textVerticalAlign='top']\n * @param {Array.<number>} [opt.textPadding]\n * @param {number} [opt.textLineHeight]\n * @param {Object} [opt.rich]\n * @param {Object} [opt.truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\nfunction getTextBoundingRect(opt) {\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\n}\n/**\n * @deprecated\n * the `textLineHeight` was added later.\n * For backward compatiblility, put it as the last parameter.\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\n */\n\n\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\n}\n/**\n * open new tab\n * @param {string} link url\n * @param {string} target blank or self\n */\n\n\nfunction windowOpen(link, target) {\n  if (target === '_blank' || target === 'blank') {\n    var blank = window.open();\n    blank.opener = null;\n    blank.location = link;\n  } else {\n    window.open(link, target);\n  }\n}\n\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextBoundingRect = getTextBoundingRect;\nexports.getTextRect = getTextRect;\nexports.windowOpen = windowOpen;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/util/format.js"],"names":["zrUtil","require","textContain","numberUtil","addCommas","x","isNaN","split","replace","length","toCamelCase","str","upperCaseFirst","toLowerCase","match","group1","toUpperCase","charAt","slice","normalizeCssArray","replaceReg","replaceMap","encodeHTML","source","c","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","isArray","seriesLen","$vars","i","alias","k","val","formatTplSimple","param","each","value","key","getTooltipMarker","opt","extraCssText","isString","color","type","renderMode","markerId","content","style","pad","len","substr","formatTime","isUTC","date","parseDate","utc","y","M","d","h","m","s","S","capitalFirst","truncateText","getTextBoundingRect","getBoundingRect","text","font","textAlign","textVerticalAlign","textPadding","textLineHeight","rich","truncate","getTextRect","windowOpen","link","target","blank","window","open","opener","location","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * add commas after every three numbers\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\n/**\n * @public\n * @param {Object} opt\n * @param {string} opt.text\n * @param {string} opt.font\n * @param {string} [opt.textAlign='left']\n * @param {string} [opt.textVerticalAlign='top']\n * @param {Array.<number>} [opt.textPadding]\n * @param {number} [opt.textLineHeight]\n * @param {Object} [opt.rich]\n * @param {Object} [opt.truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\nfunction getTextBoundingRect(opt) {\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\n}\n/**\n * @deprecated\n * the `textLineHeight` was added later.\n * For backward compatiblility, put it as the last parameter.\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\n */\n\n\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\n}\n/**\n * open new tab\n * @param {string} link url\n * @param {string} target blank or self\n */\n\n\nfunction windowOpen(link, target) {\n  if (target === '_blank' || target === 'blank') {\n    var blank = window.open();\n    blank.opener = null;\n    blank.location = link;\n  } else {\n    window.open(link, target);\n  }\n}\n\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextBoundingRect = getTextBoundingRect;\nexports.getTextRect = getTextRect;\nexports.windowOpen = windowOpen;"]},"metadata":{},"sourceType":"script"}