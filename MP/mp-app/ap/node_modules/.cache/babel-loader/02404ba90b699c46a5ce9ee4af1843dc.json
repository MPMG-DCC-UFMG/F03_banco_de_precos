{"ast":null,"code":"import _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport Mock from '../mock';\nimport shortId from 'shortid'; // import * as _ from \"lodash\";\n\nvar ChatDB = {\n  user: [{\n    id: '7863a6802ez0e277a0f98534',\n    name: 'John Doe',\n    avatar: '/assets/images/face-1.jpg',\n    status: 'online',\n    chatInfo: [{\n      chatId: '89564a680b3249760ea21fe77',\n      contactId: '323sa680b3249760ea21rt47',\n      unread: 4,\n      lastChatTime: '2017-06-12T02:10:18.931Z'\n    }, {\n      chatId: '3289564a680b2134760ea21fe7753',\n      contactId: '14663a3406eb47ffa63d4fec9429cb71',\n      unread: 0,\n      lastChatTime: '2019-03-10T02:10:18.931Z'\n    }]\n  }],\n  contacts: [{\n    id: '323sa680b3249760ea21rt47',\n    name: 'Frank Powell',\n    avatar: '/assets/images/faces/13.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: '7863a6802ez0e277a0f98534',\n    name: 'John Doe',\n    avatar: '/assets/images/face-1.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: '14663a3406eb47ffa63d4fec9429cb71',\n    name: 'Betty Diaz',\n    avatar: '/assets/images/faces/12.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: '43bd9bc59d164b5aea498e3ae1c24c3c',\n    name: 'Brian Stephens',\n    avatar: '/assets/images/faces/3.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: '3fc8e01f3ce649d1caf884fbf4f698e4',\n    name: 'Jacqueline Day',\n    avatar: '/assets/images/faces/16.jpg',\n    status: 'offline',\n    mood: ''\n  }, {\n    id: 'e929b1d790ab49968ed8e34648553df4',\n    name: 'Arthur Mendoza',\n    avatar: '/assets/images/faces/10.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: 'd6caf04bba614632b5fecf91aebf4564',\n    name: 'Jeremy Lee',\n    avatar: '/assets/images/faces/9.jpg',\n    status: 'offline',\n    mood: ''\n  }, {\n    id: 'be0fb188c8e242f097fafa24632107e4',\n    name: 'Johnny Newman',\n    avatar: '/assets/images/faces/5.jpg',\n    status: 'offline',\n    mood: ''\n  }, {\n    id: 'dea902191b964a68ba5f2d93cff37e13',\n    name: 'Jeffrey Little',\n    avatar: '/assets/images/faces/15.jpg',\n    status: 'online',\n    mood: ''\n  }, {\n    id: '0bf58f5ccc4543a9f8747350b7bda3c7',\n    name: 'Barbara Romero',\n    avatar: '/assets/images/faces/4.jpg',\n    status: 'offline',\n    mood: ''\n  }, {\n    id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n    name: 'Daniel James',\n    avatar: '/assets/images/faces/2.jpg',\n    status: 'offline',\n    mood: ''\n  }, {\n    id: '97bfbdd9413e46efdaca2010400fe18c',\n    name: 'Alice Sanders',\n    avatar: '/assets/images/faces/17.jpg',\n    status: 'offline',\n    mood: ''\n  }],\n  chatCollection: [{\n    id: '89564a680b3249760ea21fe77',\n    chats: [{\n      contactId: '323sa680b3249760ea21rt47',\n      text: 'Do you ever find yourself falling into the “discount trap?”',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Giving away your knowledge or product just to gain clients?',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '323sa680b3249760ea21rt47',\n      text: 'Yes',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Don’t feel bad. It happens to a lot of us',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '323sa680b3249760ea21rt47',\n      text: 'Do you ever find yourself falling into the “discount trap?”',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Giving away your knowledge or product just to gain clients?',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '323sa680b3249760ea21rt47',\n      text: 'Yes',\n      time: '2018-02-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Don’t feel bad. It happens to a lot of us',\n      time: '2018-02-10T08:45:28.291Z'\n    }]\n  }, {\n    id: '3289564a680b2134760ea21fe7753',\n    chats: [{\n      contactId: '14663a3406eb47ffa63d4fec9429cb71',\n      text: 'Do you ever find yourself falling into the “discount trap?”',\n      time: '2019-03-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Giving away your knowledge or product just to gain clients?',\n      time: '2019-03-10T08:45:28.291Z'\n    }, {\n      contactId: '14663a3406eb47ffa63d4fec9429cb71',\n      text: 'Yes',\n      time: '2019-03-10T08:45:28.291Z'\n    }, {\n      contactId: '7863a6802ez0e277a0f98534',\n      text: 'Don’t feel bad. It happens to a lot of us',\n      time: '2019-03-10T08:45:28.291Z'\n    }]\n  }]\n};\nMock.onGet('/api/chat').reply(function (config) {\n  var id = config.data;\n  var chats = ChatDB.chatCollection.find(function (collection) {\n    return collection.id === id;\n  }).chats;\n  var response = chats.map(function (chat) {\n    var temp = ChatDB.contacts.find(function (user) {\n      return user.id === chat.contactId;\n    });\n    return _objectSpread(_objectSpread({}, chat), temp);\n  });\n  return [200, response];\n});\nMock.onGet('/api/chat/chat-room').reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      currentUser = _JSON$parse.currentUser,\n      contactId = _JSON$parse.contactId;\n\n  var chatUser = ChatDB.user.find(function (user) {\n    return user.id === currentUser;\n  });\n  var chatRoom = chatUser.chatInfo.find(function (chat) {\n    return chat.contactId === contactId;\n  });\n\n  if (chatRoom) {\n    var chats = ChatDB.chatCollection.find(function (collection) {\n      return collection.id === chatRoom.chatId;\n    }).chats;\n    var messageList = chats.map(function (chat) {\n      var temp = ChatDB.contacts.find(function (user) {\n        return user.id === chat.contactId;\n      });\n      return _objectSpread(_objectSpread({}, chat), temp);\n    });\n    var response = {\n      chatId: chatRoom.chatId,\n      messageList: messageList,\n      recentListUpdated: false\n    };\n    return [200, response];\n  } else {\n    var chatId = shortId.generate();\n    ChatDB.user.forEach(function (user) {\n      if (currentUser === user.id) {\n        user.chatInfo.push({\n          chatId: chatId,\n          contactId: contactId,\n          lastChatTime: Date.now(),\n          unread: 0\n        });\n      }\n    });\n    ChatDB.chatCollection.push({\n      id: chatId,\n      chats: []\n    });\n    var _response = {\n      chatId: chatId,\n      messageList: [],\n      recentListUpdated: true\n    };\n    return [200, _response];\n  }\n});\nMock.onGet('/api/chat/contacts/recent').reply(function (config) {\n  var temp = {\n    contact: ''\n  };\n  var id = config.data;\n  var contacts = ChatDB.user.find(function (user) {\n    return user.id === id;\n  }).chatInfo;\n  var response = contacts.map(function (contact) {\n    temp.contact = ChatDB.contacts.find(function (user) {\n      return user.id === contact.contactId;\n    });\n    return _objectSpread(_objectSpread({}, temp.contact), contact);\n  });\n  return [200, response];\n});\nMock.onGet('/api/chat/contacts/all').reply(function (config) {\n  var id = config.data;\n  var response = ChatDB.contacts.filter(function (contact) {\n    return contact.id !== id;\n  });\n  return [200, response];\n});\nMock.onGet('/api/chat/contacts').reply(function (config) {\n  var id = config.data;\n  var response = ChatDB.contacts.find(function (contact) {\n    return contact.id === id;\n  });\n  return [200, response];\n});\nMock.onPost('/api/chat/add').reply(function (config) {\n  var chatDetails = JSON.parse(config.data);\n  var chatId = chatDetails.chatId;\n  ChatDB.chatCollection.forEach(function (chatRoom) {\n    if (chatId === chatRoom.id) {\n      delete chatDetails.chatId;\n      chatRoom.chats.push(_objectSpread({}, chatDetails));\n    }\n  });\n  var chats = ChatDB.chatCollection.find(function (chatRoom) {\n    return chatRoom.id === chatId;\n  }).chats;\n  var response = chats.map(function (chat) {\n    var temp = ChatDB.contacts.find(function (user) {\n      return user.id === chat.contactId;\n    });\n    return _objectSpread(_objectSpread({}, chat), temp);\n  });\n  return [200, response];\n});","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/fake-db/db/chat.js"],"names":["Mock","shortId","ChatDB","user","id","name","avatar","status","chatInfo","chatId","contactId","unread","lastChatTime","contacts","mood","chatCollection","chats","text","time","onGet","reply","config","data","find","collection","response","map","chat","temp","JSON","parse","currentUser","chatUser","chatRoom","messageList","recentListUpdated","generate","forEach","push","Date","now","contact","filter","onPost","chatDetails"],"mappings":"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","sourcesContent":["import Mock from '../mock'\nimport shortId from 'shortid'\n// import * as _ from \"lodash\";\n\nconst ChatDB = {\n    user: [\n        {\n            id: '7863a6802ez0e277a0f98534',\n            name: 'John Doe',\n            avatar: '/assets/images/face-1.jpg',\n            status: 'online',\n            chatInfo: [\n                {\n                    chatId: '89564a680b3249760ea21fe77',\n                    contactId: '323sa680b3249760ea21rt47',\n                    unread: 4,\n                    lastChatTime: '2017-06-12T02:10:18.931Z',\n                },\n                {\n                    chatId: '3289564a680b2134760ea21fe7753',\n                    contactId: '14663a3406eb47ffa63d4fec9429cb71',\n                    unread: 0,\n                    lastChatTime: '2019-03-10T02:10:18.931Z',\n                },\n            ],\n        },\n    ],\n\n    contacts: [\n        {\n            id: '323sa680b3249760ea21rt47',\n            name: 'Frank Powell',\n            avatar: '/assets/images/faces/13.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: '7863a6802ez0e277a0f98534',\n            name: 'John Doe',\n            avatar: '/assets/images/face-1.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: '14663a3406eb47ffa63d4fec9429cb71',\n            name: 'Betty Diaz',\n            avatar: '/assets/images/faces/12.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: '43bd9bc59d164b5aea498e3ae1c24c3c',\n            name: 'Brian Stephens',\n            avatar: '/assets/images/faces/3.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: '3fc8e01f3ce649d1caf884fbf4f698e4',\n            name: 'Jacqueline Day',\n            avatar: '/assets/images/faces/16.jpg',\n            status: 'offline',\n            mood: '',\n        },\n        {\n            id: 'e929b1d790ab49968ed8e34648553df4',\n            name: 'Arthur Mendoza',\n            avatar: '/assets/images/faces/10.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: 'd6caf04bba614632b5fecf91aebf4564',\n            name: 'Jeremy Lee',\n            avatar: '/assets/images/faces/9.jpg',\n            status: 'offline',\n            mood: '',\n        },\n        {\n            id: 'be0fb188c8e242f097fafa24632107e4',\n            name: 'Johnny Newman',\n            avatar: '/assets/images/faces/5.jpg',\n            status: 'offline',\n            mood: '',\n        },\n        {\n            id: 'dea902191b964a68ba5f2d93cff37e13',\n            name: 'Jeffrey Little',\n            avatar: '/assets/images/faces/15.jpg',\n            status: 'online',\n            mood: '',\n        },\n        {\n            id: '0bf58f5ccc4543a9f8747350b7bda3c7',\n            name: 'Barbara Romero',\n            avatar: '/assets/images/faces/4.jpg',\n            status: 'offline',\n            mood: '',\n        },\n        {\n            id: 'c5d7498bbcb84d81fc72168871ac6a6e',\n            name: 'Daniel James',\n            avatar: '/assets/images/faces/2.jpg',\n            status: 'offline',\n            mood: '',\n        },\n        {\n            id: '97bfbdd9413e46efdaca2010400fe18c',\n            name: 'Alice Sanders',\n            avatar: '/assets/images/faces/17.jpg',\n            status: 'offline',\n            mood: '',\n        },\n    ],\n\n    chatCollection: [\n        {\n            id: '89564a680b3249760ea21fe77',\n            chats: [\n                {\n                    contactId: '323sa680b3249760ea21rt47',\n                    text:\n                        'Do you ever find yourself falling into the “discount trap?”',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text:\n                        'Giving away your knowledge or product just to gain clients?',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '323sa680b3249760ea21rt47',\n                    text: 'Yes',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text: 'Don’t feel bad. It happens to a lot of us',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '323sa680b3249760ea21rt47',\n                    text:\n                        'Do you ever find yourself falling into the “discount trap?”',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text:\n                        'Giving away your knowledge or product just to gain clients?',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '323sa680b3249760ea21rt47',\n                    text: 'Yes',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text: 'Don’t feel bad. It happens to a lot of us',\n                    time: '2018-02-10T08:45:28.291Z',\n                },\n            ],\n        },\n        {\n            id: '3289564a680b2134760ea21fe7753',\n            chats: [\n                {\n                    contactId: '14663a3406eb47ffa63d4fec9429cb71',\n                    text:\n                        'Do you ever find yourself falling into the “discount trap?”',\n                    time: '2019-03-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text:\n                        'Giving away your knowledge or product just to gain clients?',\n                    time: '2019-03-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '14663a3406eb47ffa63d4fec9429cb71',\n                    text: 'Yes',\n                    time: '2019-03-10T08:45:28.291Z',\n                },\n                {\n                    contactId: '7863a6802ez0e277a0f98534',\n                    text: 'Don’t feel bad. It happens to a lot of us',\n                    time: '2019-03-10T08:45:28.291Z',\n                },\n            ],\n        },\n    ],\n}\n\nMock.onGet('/api/chat').reply((config) => {\n    const id = config.data\n    const chats = ChatDB.chatCollection.find(\n        (collection) => collection.id === id\n    ).chats\n    const response = chats.map((chat) => {\n        let temp = ChatDB.contacts.find((user) => user.id === chat.contactId)\n        return { ...chat, ...temp }\n    })\n    return [200, response]\n})\n\nMock.onGet('/api/chat/chat-room').reply((config) => {\n    const { currentUser, contactId } = JSON.parse(config.data)\n\n    const chatUser = ChatDB.user.find((user) => user.id === currentUser)\n    const chatRoom = chatUser.chatInfo.find(\n        (chat) => chat.contactId === contactId\n    )\n\n    if (chatRoom) {\n        const chats = ChatDB.chatCollection.find(\n            (collection) => collection.id === chatRoom.chatId\n        ).chats\n        const messageList = chats.map((chat) => {\n            let temp = ChatDB.contacts.find(\n                (user) => user.id === chat.contactId\n            )\n            return { ...chat, ...temp }\n        })\n        const response = {\n            chatId: chatRoom.chatId,\n            messageList,\n            recentListUpdated: false,\n        }\n        return [200, response]\n    } else {\n        let chatId = shortId.generate()\n        ChatDB.user.forEach((user) => {\n            if (currentUser === user.id) {\n                user.chatInfo.push({\n                    chatId,\n                    contactId,\n                    lastChatTime: Date.now(),\n                    unread: 0,\n                })\n            }\n        })\n        ChatDB.chatCollection.push({\n            id: chatId,\n            chats: [],\n        })\n\n        const response = {\n            chatId,\n            messageList: [],\n            recentListUpdated: true,\n        }\n\n        return [200, response]\n    }\n})\n\nMock.onGet('/api/chat/contacts/recent').reply((config) => {\n    let temp = { contact: '' }\n    const id = config.data\n    const contacts = ChatDB.user.find((user) => user.id === id).chatInfo\n    const response = contacts.map((contact) => {\n        temp.contact = ChatDB.contacts.find(\n            (user) => user.id === contact.contactId\n        )\n        return { ...temp.contact, ...contact }\n    })\n    return [200, response]\n})\n\nMock.onGet('/api/chat/contacts/all').reply((config) => {\n    const id = config.data\n    const response = ChatDB.contacts.filter((contact) => contact.id !== id)\n    return [200, response]\n})\n\nMock.onGet('/api/chat/contacts').reply((config) => {\n    const id = config.data\n    const response = ChatDB.contacts.find((contact) => contact.id === id)\n    return [200, response]\n})\n\nMock.onPost('/api/chat/add').reply((config) => {\n    let chatDetails = JSON.parse(config.data)\n    let { chatId } = chatDetails\n    ChatDB.chatCollection.forEach((chatRoom) => {\n        if (chatId === chatRoom.id) {\n            delete chatDetails.chatId\n            chatRoom.chats.push({ ...chatDetails })\n        }\n    })\n    let chats = ChatDB.chatCollection.find((chatRoom) => chatRoom.id === chatId)\n        .chats\n\n    let response = chats.map((chat) => {\n        let temp = ChatDB.contacts.find((user) => user.id === chat.contactId)\n        return { ...chat, ...temp }\n    })\n    return [200, response]\n})\n"]},"metadata":{},"sourceType":"module"}