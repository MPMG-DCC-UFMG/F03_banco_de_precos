{"ast":null,"code":"var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\n\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function brush(ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function getBoundingRect() {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/graphic/Image.js"],"names":["Displayable","require","BoundingRect","zrUtil","imageHelper","ZImage","opts","call","prototype","constructor","type","brush","ctx","prevEl","style","src","image","bind","_image","createOrUpdateImage","onload","isImageReady","x","y","width","height","aspect","setTransform","sWidth","sHeight","sx","sy","drawImage","text","restoreTransform","drawRectText","getBoundingRect","_rect","inherits","_default","module","exports"],"mappings":"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","sourcesContent":["var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    } // Draw rect text\n\n\n    if (style.text != null) {\n      // Only restore transform when needs draw text.\n      this.restoreTransform(ctx);\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}