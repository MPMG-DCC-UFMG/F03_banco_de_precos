{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isFunction = _util.isFunction;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.'); // Set in itemStyle\n\n    var color = seriesModel.get(colorAccessPath);\n    var colorCallback = isFunction(color) && !(color instanceof Gradient) ? color : null; // Default color\n\n    if (!color || colorCallback) {\n      color = seriesModel.getColorFromPalette( // TODO series count changed.\n      seriesModel.name, null, ecModel.getSeriesCount());\n    }\n\n    data.setVisual('color', color);\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\n    var borderColor = seriesModel.get(borderColorAccessPath);\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (colorCallback) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', colorCallback(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function dataEach(data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n        var borderColor = itemModel.get(borderColorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n\n        if (borderColor != null) {\n          data.setItemVisual(idx, 'borderColor', borderColor);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/visual/seriesColor.js"],"names":["Gradient","require","_util","isFunction","_default","createOnAllSeries","performRawSeries","reset","seriesModel","ecModel","data","getData","colorAccessPath","visualColorAccessPath","split","color","get","colorCallback","getColorFromPalette","name","getSeriesCount","setVisual","borderColorAccessPath","visualBorderColorAccessPath","borderColor","isSeriesFiltered","each","idx","setItemVisual","getDataParams","dataEach","itemModel","getItemModel","hasItemOption","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isFunction = _util.isFunction;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.'); // Set in itemStyle\n\n    var color = seriesModel.get(colorAccessPath);\n    var colorCallback = isFunction(color) && !(color instanceof Gradient) ? color : null; // Default color\n\n    if (!color || colorCallback) {\n      color = seriesModel.getColorFromPalette( // TODO series count changed.\n      seriesModel.name, null, ecModel.getSeriesCount());\n    }\n\n    data.setVisual('color', color);\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\n    var borderColor = seriesModel.get(borderColorAccessPath);\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (colorCallback) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', colorCallback(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function (data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n        var borderColor = itemModel.get(borderColorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n\n        if (borderColor != null) {\n          data.setItemVisual(idx, 'borderColor', borderColor);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}