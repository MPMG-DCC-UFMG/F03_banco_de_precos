{"ast":null,"code":"import _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"palette\"];\nimport React, { Fragment, useState } from 'react';\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCartList, deleteProductFromCart, updateCartAmount } from 'app/redux/actions/EcommerceActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useSettings from 'app/hooks/useSettings';\nimport useAuth from 'app/hooks/useAuth';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    miniCart: {\n      width: 'var(--sidenav-width)',\n      '& .cart__topbar': {\n        height: 'var(--topbar-height)'\n      },\n      '& .mini-cart__item': {\n        transition: 'background 300ms ease',\n        '&:hover': {\n          background: 'rgba(0,0,0,0.01)'\n        }\n      }\n    }\n  };\n});\nvar cartListLoaded = false;\n\nfunction ShoppingCart(_ref2) {\n  var container = _ref2.container;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      totalCost = _useState2[0],\n      setTotalCost = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      panelOpen = _useState4[0],\n      setPanelOpen = _useState4[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useSelector = useSelector(function (state) {\n    return state.ecommerce;\n  }),\n      cartList = _useSelector.cartList;\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings;\n\n  if (!cartListLoaded) {\n    dispatch(getCartList(user.id));\n    cartListLoaded = true;\n  }\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    setPanelOpen(!panelOpen);\n  };\n\n  var handleCheckoutClick = function handleCheckoutClick() {\n    if (totalCost > 0) {\n      history.push('/ecommerce/checkout');\n      setPanelOpen(false);\n    }\n  };\n\n  useEffect(function () {\n    var total = 0;\n    cartList.forEach(function (product) {\n      total += product.price * product.amount;\n    });\n    setTotalCost(total);\n  }, [cartList]);\n}\n\nexport default ShoppingCart;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/components/ShoppingCart/ShoppingCart.jsx"],"names":["React","Fragment","useState","Icon","Badge","IconButton","Drawer","Button","ThemeProvider","useDispatch","useSelector","getCartList","deleteProductFromCart","updateCartAmount","makeStyles","clsx","useEffect","useHistory","useSettings","useAuth","useStyles","palette","theme","miniCart","width","height","transition","background","cartListLoaded","ShoppingCart","container","totalCost","setTotalCost","panelOpen","setPanelOpen","classes","dispatch","history","user","state","ecommerce","cartList","settings","id","handleDrawerToggle","handleCheckoutClick","push","total","forEach","product","price","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,MAAlC,EAA0CC,MAA1C,QAAwD,mBAAxD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,WADJ,EAEIC,qBAFJ,EAGIC,gBAHJ,QAIO,oCAJP;AAKA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC;AAAA,MAAGO,OAAH,QAAGA,OAAH;AAAA,MAAeC,KAAf;;AAAA,SAA4B;AACrDC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,KAAK,EAAE,sBADD;AAEN,yBAAmB;AACfC,QAAAA,MAAM,EAAE;AADO,OAFb;AAKN,4BAAsB;AAClBC,QAAAA,UAAU,EAAE,uBADM;AAElB,mBAAW;AACPC,UAAAA,UAAU,EAAE;AADL;AAFO;AALhB;AAD2C,GAA5B;AAAA,CAAD,CAA5B;AAeA,IAAIC,cAAc,GAAG,KAArB;;AAEA,SAASC,YAAT,QAAqC;AAAA,MAAbC,SAAa,SAAbA,SAAa;;AACjC,kBAAkC5B,QAAQ,CAAC,CAAD,CAA1C;AAAA;AAAA,MAAO6B,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAkC9B,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAO+B,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,OAAO,GAAGf,SAAS,EAAzB;AACA,MAAMgB,QAAQ,GAAG3B,WAAW,EAA5B;AACA,MAAM4B,OAAO,GAAGpB,UAAU,EAA1B;;AACA,iBAAiBE,OAAO,EAAxB;AAAA,MAAQmB,IAAR,YAAQA,IAAR;;AACA,qBAAqB5B,WAAW,CAAC,UAAC6B,KAAD;AAAA,WAAWA,KAAK,CAACC,SAAjB;AAAA,GAAD,CAAhC;AAAA,MAAQC,QAAR,gBAAQA,QAAR;;AACA,qBAAqBvB,WAAW,EAAhC;AAAA,MAAQwB,QAAR,gBAAQA,QAAR;;AAEA,MAAI,CAACd,cAAL,EAAqB;AACjBQ,IAAAA,QAAQ,CAACzB,WAAW,CAAC2B,IAAI,CAACK,EAAN,CAAZ,CAAR;AACAf,IAAAA,cAAc,GAAG,IAAjB;AACH;;AAED,MAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC7BV,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,MAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAId,SAAS,GAAG,CAAhB,EAAmB;AACfM,MAAAA,OAAO,CAACS,IAAR,CAAa,qBAAb;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GALD;;AAOAlB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI+B,KAAK,GAAG,CAAZ;AAEAN,IAAAA,QAAQ,CAACO,OAAT,CAAiB,UAACC,OAAD,EAAa;AAC1BF,MAAAA,KAAK,IAAIE,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,MAAjC;AACH,KAFD;AAIAnB,IAAAA,YAAY,CAACe,KAAD,CAAZ;AACH,GARQ,EAQN,CAACN,QAAD,CARM,CAAT;AAaH;;AAED,eAAeZ,YAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport useAuth from 'app/hooks/useAuth'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    miniCart: {\n        width: 'var(--sidenav-width)',\n        '& .cart__topbar': {\n            height: 'var(--topbar-height)',\n        },\n        '& .mini-cart__item': {\n            transition: 'background 300ms ease',\n            '&:hover': {\n                background: 'rgba(0,0,0,0.01)',\n            },\n        },\n    },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            history.push('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n\n        setTotalCost(total)\n    }, [cartList])\n\n    \n       \n    \n}\n\nexport default ShoppingCart\n"]},"metadata":{},"sourceType":"module"}