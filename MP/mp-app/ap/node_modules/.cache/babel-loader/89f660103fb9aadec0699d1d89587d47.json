{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph, seriesModel);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/graph/simpleLayout.js"],"names":["_util","require","each","_simpleLayoutHelper","simpleLayout","simpleLayoutEdge","_default","ecModel","api","eachSeriesByType","seriesModel","layout","get","coordSys","coordinateSystem","type","data","getData","dimensions","coordDim","concat","mapDimension","dataIndex","count","value","hasValue","i","length","val","isNaN","push","setItemLayout","dataToPoint","NaN","graph","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB;;AAEA,IAAIC,mBAAmB,GAAGF,OAAO,CAAC,sBAAD,CAAjC;;AAEA,IAAIG,YAAY,GAAGD,mBAAmB,CAACC,YAAvC;AACA,IAAIC,gBAAgB,GAAGF,mBAAmB,CAACE,gBAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAC9BD,EAAAA,OAAO,CAACE,gBAAR,CAAyB,OAAzB,EAAkC,UAAUC,WAAV,EAAuB;AACvD,QAAIC,MAAM,GAAGD,WAAW,CAACE,GAAZ,CAAgB,QAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,WAAW,CAACI,gBAA3B;;AAEA,QAAID,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkB,MAAlC,EAA0C;AACxC,UAAIC,IAAI,GAAGN,WAAW,CAACO,OAAZ,EAAX;AACA,UAAIC,UAAU,GAAG,EAAjB;AACAhB,MAAAA,IAAI,CAACW,QAAQ,CAACK,UAAV,EAAsB,UAAUC,QAAV,EAAoB;AAC5CD,QAAAA,UAAU,GAAGA,UAAU,CAACE,MAAX,CAAkBJ,IAAI,CAACK,YAAL,CAAkBF,QAAlB,EAA4B,IAA5B,CAAlB,CAAb;AACD,OAFG,CAAJ;;AAIA,WAAK,IAAIG,SAAS,GAAG,CAArB,EAAwBA,SAAS,GAAGN,IAAI,CAACO,KAAL,EAApC,EAAkDD,SAAS,EAA3D,EAA+D;AAC7D,YAAIE,KAAK,GAAG,EAAZ;AACA,YAAIC,QAAQ,GAAG,KAAf;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACS,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAIE,GAAG,GAAGZ,IAAI,CAACJ,GAAL,CAASM,UAAU,CAACQ,CAAD,CAAnB,EAAwBJ,SAAxB,CAAV;;AAEA,cAAI,CAACO,KAAK,CAACD,GAAD,CAAV,EAAiB;AACfH,YAAAA,QAAQ,GAAG,IAAX;AACD;;AAEDD,UAAAA,KAAK,CAACM,IAAN,CAAWF,GAAX;AACD;;AAED,YAAIH,QAAJ,EAAc;AACZT,UAAAA,IAAI,CAACe,aAAL,CAAmBT,SAAnB,EAA8BT,QAAQ,CAACmB,WAAT,CAAqBR,KAArB,CAA9B;AACD,SAFD,MAEO;AACL;AACAR,UAAAA,IAAI,CAACe,aAAL,CAAmBT,SAAnB,EAA8B,CAACW,GAAD,EAAMA,GAAN,CAA9B;AACD;AACF;;AAED5B,MAAAA,gBAAgB,CAACW,IAAI,CAACkB,KAAN,EAAaxB,WAAb,CAAhB;AACD,KA9BD,MA8BO,IAAI,CAACC,MAAD,IAAWA,MAAM,KAAK,MAA1B,EAAkC;AACvCP,MAAAA,YAAY,CAACM,WAAD,CAAZ;AACD;AACF,GArCD;AAsCD;;AAEDyB,MAAM,CAACC,OAAP,GAAiB9B,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = [];\n      each(coordSys.dimensions, function (coordDim) {\n        dimensions = dimensions.concat(data.mapDimension(coordDim, true));\n      });\n\n      for (var dataIndex = 0; dataIndex < data.count(); dataIndex++) {\n        var value = [];\n        var hasValue = false;\n\n        for (var i = 0; i < dimensions.length; i++) {\n          var val = data.get(dimensions[i], dataIndex);\n\n          if (!isNaN(val)) {\n            hasValue = true;\n          }\n\n          value.push(val);\n        }\n\n        if (hasValue) {\n          data.setItemLayout(dataIndex, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(dataIndex, [NaN, NaN]);\n        }\n      }\n\n      simpleLayoutEdge(data.graph, seriesModel);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}