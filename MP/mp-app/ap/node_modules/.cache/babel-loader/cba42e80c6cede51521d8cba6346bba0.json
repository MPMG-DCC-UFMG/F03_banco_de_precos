{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function init() {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender(visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function _buildView() {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function _renderBar(targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('å›½');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function _createHandle(barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function _createIndicator(barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function _dragHandle(handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function _createBarVisual(dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function _makeColorGradient(dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function _createBarPoints(handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function _createBarGroup(itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function _updateHandle(handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function _showIndicator(cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function _enableHoverLinkToSeries() {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function _enableHoverLinkFromSeries() {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function _doHoverLinkToSeries(cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, 'â‰ˆ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\n\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function _hoverLinkFromSeriesMouseOver(e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function _hideIndicator() {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function _clearHoverLinkToSeries() {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function _clearHoverLinkFromSeries() {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function _applyTransform(vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function _dispatchHighDown(type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function onmousemove(e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/component/visualMap/ContinuousView.js"],"names":["zrUtil","require","LinearGradient","eventTool","VisualMapView","graphic","numberUtil","sliderMove","helper","modelUtil","linearMap","each","mathMin","Math","min","mathMax","max","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","extend","type","init","superApply","arguments","_shapes","_dataInterval","_handleEnds","_orient","_useHandle","_hoverLinkDataIndices","_dragging","_hovering","doRender","visualMapModel","ecModel","api","payload","from","uid","_buildView","group","removeAll","thisGroup","get","_resetInterval","_renderBar","dataRangeText","_renderEndsText","_updateView","renderBackground","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","positionGroup","endsIndex","text","textGap","itemSize","barGroup","position","_applyTransform","align","orient","textStyleModel","add","Text","style","x","y","textVerticalAlign","textAlign","textFont","getFont","textFill","getTextColor","targetGroup","shapes","useHandle","itemAlign","getItemAlign","_createBarGroup","outOfRange","createPolygon","inRange","getCursor","bind","_dragHandle","textRect","getTextRect","textSize","width","height","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","handleIndex","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","draggable","drift","onmousemove","e","stop","event","ondragend","handleLabelPoint","indicator","attr","invisible","silent","indicatorLabel","indicatorLabelPoint","isEnd","dx","dy","vertex","_updateInterval","dispatchAction","visualMapId","id","selected","slice","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","dataInterval","getSelected","dataExtent","getExtent","sizeExtent","delta","handleEnds","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","setStyle","fill","barColor","opacity","setShape","barPoints","_updateHandle","forceState","opts","convertOpacityToAlpha","colorStops","_makeColorGradient","symbolSizes","getControllerVisual","_createBarPoints","handlesColor","color","length","sampleNumber","step","push","offset","i","currValue","inverse","Group","scale","rotation","PI","textPoint","applyTransform","getTransform","formatValueText","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","pos","createIndicatorPoints","self","on","offsetX","offsetY","zr","getZr","option","hoverLink","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","valueRange","Infinity","oldBatch","newBatch","findTargetDataIndices","resultBatches","compressBatches","_dispatchHighDown","makeHighDownBatch","el","target","dataIndex","dataModel","getSeriesByIndex","seriesIndex","isTargetSeries","data","getData","dataType","value","getDataDimension","isNaN","indices","off","element","global","transform","isArray","batch","dispose","remove","points","cursor","Polygon","shape","isRange","extentMax","hoverLinkDataSize","hoverLinkOnHandle","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('å›½');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, 'â‰ˆ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\n\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}