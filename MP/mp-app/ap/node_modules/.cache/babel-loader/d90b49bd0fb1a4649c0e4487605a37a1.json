{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function render(seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2],\n        rotation: symbolRotate * Math.PI / 180 || 0\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      itemGroup.highDownOnUpdate = function (fromState, toState) {\n        polygon.attr('ignore', toState === 'emphasis' ? hoverPolygonIgnore : polygonIgnore);\n      };\n\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/radar/RadarView.js"],"names":["echarts","require","graphic","zrUtil","symbolUtil","normalizeSymbolSize","symbolSize","isArray","_default","extendChartView","type","render","seriesModel","ecModel","api","polar","coordinateSystem","group","data","getData","oldData","_data","createSymbol","idx","symbolType","getItemVisual","color","symbolPath","symbolRotate","attr","style","strokeNoScale","z2","scale","rotation","Math","PI","updateSymbols","oldPoints","newPoints","symbolGroup","isInit","removeAll","i","length","__dimIdx","position","add","getInitialPoints","points","map","pt","cx","cy","diff","getItemLayout","polygon","Polygon","polyline","Polyline","target","shape","initProps","itemGroup","Group","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","childAt","updateProps","remove","execute","eachItemGraphicEl","itemModel","getItemModel","useStyle","defaults","getModel","getLineStyle","fill","stroke","hoverStyle","areaStyleModel","hoverAreaStyleModel","polygonIgnore","isEmpty","parentModel","hoverPolygonIgnore","ignore","getAreaStyle","opacity","itemStyle","getItemStyle","itemHoverStyle","labelModel","labelHoverModel","eachChild","setStyle","clone","defaultText","get","dimensions","isNaN","setLabelStyle","labelFetcher","hostModel","labelDataIndex","labelDimIndex","autoColor","isRectText","highDownOnUpdate","fromState","toState","setHoverStyle","dispose","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2],\n        rotation: symbolRotate * Math.PI / 180 || 0\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      itemGroup.highDownOnUpdate = function (fromState, toState) {\n        polygon.attr('ignore', toState === 'emphasis' ? hoverPolygonIgnore : polygonIgnore);\n      };\n\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}