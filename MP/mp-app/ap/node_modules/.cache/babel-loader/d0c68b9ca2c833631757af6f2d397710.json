{"ast":null,"code":"import _regeneratorRuntime from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/sessions/login/JwtLogin.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { useState } from 'react';\nimport { Card, Checkbox, FormControlLabel, Grid, Button, CircularProgress } from '@material-ui/core';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport { makeStyles } from '@material-ui/core/styles';\nimport history from 'history.js';\nimport clsx from 'clsx';\nimport useAuth from 'app/hooks/useAuth';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    cardHolder: {\n      background: '#1A2038'\n    },\n    card: {\n      maxWidth: 800,\n      borderRadius: 12,\n      margin: '1rem'\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n});\n\nvar JwtLogin = function JwtLogin() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    email: 'jason@ui-lib.com',\n    password: 'dummyPass'\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useAuth = useAuth(),\n      login = _useAuth.login;\n\n  var classes = useStyles();\n\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n        name = _ref2$target.name,\n        value = _ref2$target.value;\n\n    var temp = _objectSpread({}, userInfo);\n\n    temp[name] = value;\n    setUserInfo(temp);\n  };\n\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return login(userInfo.email, userInfo.password);\n\n            case 4:\n              history.push('/');\n              _context.next = 12;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setMessage(_context.t0.message);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function handleFormSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('flex justify-center items-center  min-h-full-screen', classes.cardHolder),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    md: 5,\n    sm: 5,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-8 flex justify-center items-center h-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-200\",\n    src: \"/assets/images/illustrations/dreamer.svg\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 7,\n    md: 7,\n    sm: 7,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-8 h-full bg-light-gray relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ValidatorForm, {\n    onSubmit: handleFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-6 w-full\",\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Email\",\n    onChange: handleChange,\n    type: \"email\",\n    name: \"email\",\n    value: userInfo.email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TextValidator, {\n    className: \"mb-3 w-full\",\n    label: \"Password\",\n    variant: \"outlined\",\n    size: \"small\",\n    onChange: handleChange,\n    name: \"password\",\n    type: \"password\",\n    value: userInfo.password,\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"mb-3 min-w-288\",\n    name: \"agreement\",\n    onChange: handleChange,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      size: \"small\",\n      onChange: function onChange(_ref4) {\n        var checked = _ref4.target.checked;\n        return handleChange({\n          target: {\n            name: 'agreement',\n            value: checked\n          }\n        });\n      },\n      checked: userInfo.agreement || true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }),\n    label: \"Remeber me\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap items-center mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: loading,\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }, \"Sign in\"), loading && /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"mr-2 ml-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, \"or\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"capitalize\",\n    onClick: function onClick() {\n      return history.push('/session/signup');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, \"Sign up\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"text-primary\",\n    onClick: function onClick() {\n      return history.push('/session/forgot-password');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, \"Forgot password?\")))))));\n};\n\nexport default JwtLogin;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/sessions/login/JwtLogin.jsx"],"names":["React","useState","Card","Checkbox","FormControlLabel","Grid","Button","CircularProgress","TextValidator","ValidatorForm","makeStyles","history","clsx","useAuth","useStyles","palette","theme","cardHolder","background","card","maxWidth","borderRadius","margin","buttonProgress","position","top","left","marginTop","marginLeft","JwtLogin","loading","setLoading","email","password","userInfo","setUserInfo","message","setMessage","login","classes","handleChange","target","name","value","temp","handleFormSubmit","event","push","console","log","checked","agreement"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Card,\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    Button,\n    CircularProgress,\n} from '@material-ui/core'\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport history from 'history.js'\nimport clsx from 'clsx'\nimport useAuth from 'app/hooks/useAuth'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    cardHolder: {\n        background: '#1A2038',\n    },\n    card: {\n        maxWidth: 800,\n        borderRadius: 12,\n        margin: '1rem',\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}))\n\nconst JwtLogin = () => {\n    const [loading, setLoading] = useState(false)\n    const [userInfo, setUserInfo] = useState({\n        email: 'jason@ui-lib.com',\n        password: 'dummyPass',\n    })\n    const [message, setMessage] = useState('')\n    const { login } = useAuth()\n\n    const classes = useStyles()\n\n    const handleChange = ({ target: { name, value } }) => {\n        let temp = { ...userInfo }\n        temp[name] = value\n        setUserInfo(temp)\n    }\n\n    const handleFormSubmit = async (event) => {\n        setLoading(true)\n        try {\n            await login(userInfo.email, userInfo.password)\n            history.push('/')\n        } catch (e) {\n            console.log(e)\n            setMessage(e.message)\n            setLoading(false)\n        }\n    }\n\n    return (\n        <div\n            className={clsx(\n                'flex justify-center items-center  min-h-full-screen',\n                classes.cardHolder\n            )}\n        >\n            <Card className={classes.card}>\n                <Grid container>\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\n                        <div className=\"p-8 flex justify-center items-center h-full\">\n                            <img\n                                className=\"w-200\"\n                                src=\"/assets/images/illustrations/dreamer.svg\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\n                        <div className=\"p-8 h-full bg-light-gray relative\">\n                            <ValidatorForm onSubmit={handleFormSubmit}>\n                                <TextValidator\n                                    className=\"mb-6 w-full\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    label=\"Email\"\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    value={userInfo.email}\n                                    validators={['required', 'isEmail']}\n                                    errorMessages={[\n                                        'this field is required',\n                                        'email is not valid',\n                                    ]}\n                                />\n                                <TextValidator\n                                    className=\"mb-3 w-full\"\n                                    label=\"Password\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onChange={handleChange}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    value={userInfo.password}\n                                    validators={['required']}\n                                    errorMessages={['this field is required']}\n                                />\n                                <FormControlLabel\n                                    className=\"mb-3 min-w-288\"\n                                    name=\"agreement\"\n                                    onChange={handleChange}\n                                    control={\n                                        <Checkbox\n                                            size=\"small\"\n                                            onChange={({\n                                                target: { checked },\n                                            }) =>\n                                                handleChange({\n                                                    target: {\n                                                        name: 'agreement',\n                                                        value: checked,\n                                                    },\n                                                })\n                                            }\n                                            checked={userInfo.agreement || true}\n                                        />\n                                    }\n                                    label=\"Remeber me\"\n                                />\n\n                                {message && (\n                                    <p className=\"text-error\">{message}</p>\n                                )}\n\n                                <div className=\"flex flex-wrap items-center mb-4\">\n                                    <div className=\"relative\">\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            disabled={loading}\n                                            type=\"submit\"\n                                        >\n                                            Sign in\n                                        </Button>\n                                        {loading && (\n                                            <CircularProgress\n                                                size={24}\n                                                className={\n                                                    classes.buttonProgress\n                                                }\n                                            />\n                                        )}\n                                    </div>\n                                    <span className=\"mr-2 ml-5\">or</span>\n                                    <Button\n                                        className=\"capitalize\"\n                                        onClick={() =>\n                                            history.push('/session/signup')\n                                        }\n                                    >\n                                        Sign up\n                                    </Button>\n                                </div>\n                                <Button\n                                    className=\"text-primary\"\n                                    onClick={() =>\n                                        history.push('/session/forgot-password')\n                                    }\n                                >\n                                    Forgot password?\n                                </Button>\n                            </ValidatorForm>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Card>\n        </div>\n    )\n}\n\nexport default JwtLogin\n"]},"metadata":{},"sourceType":"module"}