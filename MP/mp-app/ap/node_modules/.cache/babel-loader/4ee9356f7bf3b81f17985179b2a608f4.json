{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysInfoBySeries = _referHelper.getCoordSysInfoBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n * @param {boolean} [opt.useEncodeDefaulter]\n */\n\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysInfo) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefaulter: opt.useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/helper/createListFromArray.js"],"names":["zrUtil","require","List","createDimensions","_sourceType","SOURCE_FORMAT_ORIGINAL","_dimensionHelper","getDimensionTypeByAxis","_model","getDataItemValue","CoordinateSystem","_referHelper","getCoordSysInfoBySeries","Source","_dataStackHelper","enableDataStack","_sourceHelper","makeSeriesEncodeForAxisCoordSys","createListFromArray","source","seriesModel","opt","isInstance","seriesDataToSource","coordSysName","get","registeredCoordSys","coordSysInfo","coordSysDimDefs","map","coordSysDims","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionsInfo","dimensions","slice","dimInfoList","coordDimensions","generateCoord","encodeDefaulter","useEncodeDefaulter","curry","firstCategoryDimIndex","hasNameEncode","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","stackCalculationInfo","list","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","defaultDimValueGetter","hasItemOption","initData","sourceFormat","sampleItem","firstDataNotNull","data","isArray","i","length","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysInfoBySeries = _referHelper.getCoordSysInfoBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n * @param {boolean} [opt.useEncodeDefaulter]\n */\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysInfo) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefaulter: opt.useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}