{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var animationTypeUpdate = seriesModel.getShallow('animationTypeUpdate');\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    if (animationTypeUpdate === 'expansion') {\n      // Sectors are set to be target shape and an overlaying clipPath is used for animation\n      sector.setShape(sectorShape);\n    } else {\n      // Transition animation from the old shape\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), seriesModel.get('selectedOffset'), seriesModel.get('animation')); // Label and text animation should be applied only for transition type animation when update\n\n  var withAnimation = !firstCreate && animationTypeUpdate === 'transition';\n\n  this._updateLabel(data, idx, withAnimation);\n\n  this.highDownOnUpdate = !seriesModel.get('silent') ? function (fromState, toState) {\n    var hasAnimation = seriesModel.isAnimationEnabled() && itemModel.get('hoverAnimation');\n\n    if (toState === 'emphasis') {\n      labelLine.ignore = labelLine.hoverIgnore;\n      labelText.ignore = labelText.hoverIgnore; // Sector may has animation of updating data. Force to move to the last frame\n      // Or it may stopped on the wrong shape\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r + seriesModel.get('hoverOffset')\n          }\n        }, 300, 'elasticOut');\n      }\n    } else {\n      labelLine.ignore = labelLine.normalIgnore;\n      labelText.ignore = labelText.normalIgnore;\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r\n          }\n        }, 300, 'elasticOut');\n      }\n    }\n  } : null;\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx, withAnimation) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n\n  if (!labelLayout || isNaN(labelLayout.x) || isNaN(labelLayout.y)) {\n    labelText.ignore = labelText.normalIgnore = labelText.hoverIgnore = labelLine.ignore = labelLine.normalIgnore = labelLine.hoverIgnore = true;\n    return;\n  }\n\n  var targetLineShape = {\n    points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n  };\n  var targetTextStyle = {\n    x: labelLayout.x,\n    y: labelLayout.y\n  };\n\n  if (withAnimation) {\n    graphic.updateProps(labelLine, {\n      shape: targetLineShape\n    }, seriesModel, idx);\n    graphic.updateProps(labelText, {\n      style: targetTextStyle\n    }, seriesModel, idx);\n  } else {\n    labelLine.attr({\n      shape: targetLineShape\n    });\n    labelText.attr({\n      style: targetTextStyle\n    });\n  }\n\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: labelLayout.text,\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function init() {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var animationTypeUpdate = seriesModel.get('animationTypeUpdate');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n      if (!isFirstRender && animationTypeUpdate !== 'transition') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && data.count() > 0 && (isFirstRender ? animationType !== 'scale' : animationTypeUpdate !== 'transition')) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel, isFirstRender));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  _createClipPath: function _createClipPath(cx, cy, r, startAngle, clockwise, cb, seriesModel, isFirstRender) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    var initOrUpdate = isFirstRender ? graphic.initProps : graphic.updateProps;\n    initOrUpdate(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/pie/PieView.js"],"names":["zrUtil","require","graphic","ChartView","updateDataSelected","uid","seriesModel","hasAnimation","api","data","getData","dataIndex","name","getName","selectedOffset","get","dispatchAction","type","from","seriesId","id","each","idx","toggleItemSelected","getItemGraphicEl","getItemLayout","isSelected","el","layout","midAngle","startAngle","endAngle","dx","Math","cos","dy","sin","offset","position","animate","when","start","attr","PiePiece","Group","call","sector","Sector","z2","polyline","Polyline","text","Text","add","updateData","piePieceProto","prototype","firstCreate","childAt","labelLine","labelText","hostModel","itemModel","getItemModel","sectorShape","extend","label","animationTypeUpdate","getShallow","setShape","animationType","shape","r","r0","initProps","updateProps","visualColor","getItemVisual","useStyle","defaults","lineJoin","fill","getModel","getItemStyle","hoverStyle","cursorStyle","withAnimation","_updateLabel","highDownOnUpdate","fromState","toState","isAnimationEnabled","ignore","hoverIgnore","stopAnimation","animateTo","normalIgnore","setHoverStyle","labelLayout","isNaN","x","y","targetLineShape","points","linePoints","targetTextStyle","style","rotation","origin","labelModel","labelHoverModel","labelLineModel","labelLineHoverModel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","autoColor","useInsideStyle","inside","textAlign","textVerticalAlign","verticalAlign","opacity","setStyle","stroke","getLineStyle","smooth","inherits","PieView","init","sectorGroup","_sectorGroup","render","ecModel","payload","oldData","_data","group","isFirstRender","onSectorClick","curry","selectedMode","diff","piePiece","eachChild","child","on","setItemGraphicEl","update","newIdx","oldIdx","off","remove","execute","count","s","max","getWidth","getHeight","removeClipPath","bind","setClipPath","_createClipPath","cx","cy","clockwise","dispose","cb","clipPath","initOrUpdate","PI","containPoint","point","itemLayout","radius","sqrt","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var animationTypeUpdate = seriesModel.getShallow('animationTypeUpdate');\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    if (animationTypeUpdate === 'expansion') {\n      // Sectors are set to be target shape and an overlaying clipPath is used for animation\n      sector.setShape(sectorShape);\n    } else {\n      // Transition animation from the old shape\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), seriesModel.get('selectedOffset'), seriesModel.get('animation')); // Label and text animation should be applied only for transition type animation when update\n\n  var withAnimation = !firstCreate && animationTypeUpdate === 'transition';\n\n  this._updateLabel(data, idx, withAnimation);\n\n  this.highDownOnUpdate = !seriesModel.get('silent') ? function (fromState, toState) {\n    var hasAnimation = seriesModel.isAnimationEnabled() && itemModel.get('hoverAnimation');\n\n    if (toState === 'emphasis') {\n      labelLine.ignore = labelLine.hoverIgnore;\n      labelText.ignore = labelText.hoverIgnore; // Sector may has animation of updating data. Force to move to the last frame\n      // Or it may stopped on the wrong shape\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r + seriesModel.get('hoverOffset')\n          }\n        }, 300, 'elasticOut');\n      }\n    } else {\n      labelLine.ignore = labelLine.normalIgnore;\n      labelText.ignore = labelText.normalIgnore;\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r\n          }\n        }, 300, 'elasticOut');\n      }\n    }\n  } : null;\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx, withAnimation) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n\n  if (!labelLayout || isNaN(labelLayout.x) || isNaN(labelLayout.y)) {\n    labelText.ignore = labelText.normalIgnore = labelText.hoverIgnore = labelLine.ignore = labelLine.normalIgnore = labelLine.hoverIgnore = true;\n    return;\n  }\n\n  var targetLineShape = {\n    points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n  };\n  var targetTextStyle = {\n    x: labelLayout.x,\n    y: labelLayout.y\n  };\n\n  if (withAnimation) {\n    graphic.updateProps(labelLine, {\n      shape: targetLineShape\n    }, seriesModel, idx);\n    graphic.updateProps(labelText, {\n      style: targetTextStyle\n    }, seriesModel, idx);\n  } else {\n    labelLine.attr({\n      shape: targetLineShape\n    });\n    labelText.attr({\n      style: targetTextStyle\n    });\n  }\n\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: labelLayout.text,\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var animationTypeUpdate = seriesModel.get('animationTypeUpdate');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n      if (!isFirstRender && animationTypeUpdate !== 'transition') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && data.count() > 0 && (isFirstRender ? animationType !== 'scale' : animationTypeUpdate !== 'transition')) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel, isFirstRender));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel, isFirstRender) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    var initOrUpdate = isFirstRender ? graphic.initProps : graphic.updateProps;\n    initOrUpdate(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}