{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function reset(seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/lines/linesVisual.js"],"names":["normalize","a","Array","opacityQuery","split","_default","seriesType","reset","seriesModel","ecModel","api","symbolType","get","symbolSize","data","getData","setVisual","dataEach","idx","itemModel","getItemModel","getShallow","opacity","setItemVisual","hasItemOption","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;AACpB,MAAI,EAAEA,CAAC,YAAYC,KAAf,CAAJ,EAA2B;AACzBD,IAAAA,CAAC,GAAG,CAACA,CAAD,EAAIA,CAAJ,CAAJ;AACD;;AAED,SAAOA,CAAP;AACD;;AAED,IAAIE,YAAY,GAAG,oBAAoBC,KAApB,CAA0B,GAA1B,CAAnB;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,UAAU,EAAE,OADC;AAEbC,EAAAA,KAAK,EAAE,eAAUC,WAAV,EAAuBC,OAAvB,EAAgCC,GAAhC,EAAqC;AAC1C,QAAIC,UAAU,GAAGX,SAAS,CAACQ,WAAW,CAACI,GAAZ,CAAgB,QAAhB,CAAD,CAA1B;AACA,QAAIC,UAAU,GAAGb,SAAS,CAACQ,WAAW,CAACI,GAAZ,CAAgB,YAAhB,CAAD,CAA1B;AACA,QAAIE,IAAI,GAAGN,WAAW,CAACO,OAAZ,EAAX;AACAD,IAAAA,IAAI,CAACE,SAAL,CAAe,YAAf,EAA6BL,UAAU,IAAIA,UAAU,CAAC,CAAD,CAArD;AACAG,IAAAA,IAAI,CAACE,SAAL,CAAe,UAAf,EAA2BL,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAnD;AACAG,IAAAA,IAAI,CAACE,SAAL,CAAe,gBAAf,EAAiCH,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAzD;AACAC,IAAAA,IAAI,CAACE,SAAL,CAAe,cAAf,EAA+BH,UAAU,IAAIA,UAAU,CAAC,CAAD,CAAvD;AACAC,IAAAA,IAAI,CAACE,SAAL,CAAe,SAAf,EAA0BR,WAAW,CAACI,GAAZ,CAAgBT,YAAhB,CAA1B;;AAEA,aAASc,QAAT,CAAkBH,IAAlB,EAAwBI,GAAxB,EAA6B;AAC3B,UAAIC,SAAS,GAAGL,IAAI,CAACM,YAAL,CAAkBF,GAAlB,CAAhB;AACA,UAAIP,UAAU,GAAGX,SAAS,CAACmB,SAAS,CAACE,UAAV,CAAqB,QAArB,EAA+B,IAA/B,CAAD,CAA1B;AACA,UAAIR,UAAU,GAAGb,SAAS,CAACmB,SAAS,CAACE,UAAV,CAAqB,YAArB,EAAmC,IAAnC,CAAD,CAA1B;AACA,UAAIC,OAAO,GAAGH,SAAS,CAACP,GAAV,CAAcT,YAAd,CAAd;AACAQ,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBG,IAAI,CAACS,aAAL,CAAmBL,GAAnB,EAAwB,YAAxB,EAAsCP,UAAU,CAAC,CAAD,CAAhD,CAAjB;AACAA,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBG,IAAI,CAACS,aAAL,CAAmBL,GAAnB,EAAwB,UAAxB,EAAoCP,UAAU,CAAC,CAAD,CAA9C,CAAjB;AACAE,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBC,IAAI,CAACS,aAAL,CAAmBL,GAAnB,EAAwB,gBAAxB,EAA0CL,UAAU,CAAC,CAAD,CAApD,CAAjB;AACAA,MAAAA,UAAU,CAAC,CAAD,CAAV,IAAiBC,IAAI,CAACS,aAAL,CAAmBL,GAAnB,EAAwB,cAAxB,EAAwCL,UAAU,CAAC,CAAD,CAAlD,CAAjB;AACAC,MAAAA,IAAI,CAACS,aAAL,CAAmBL,GAAnB,EAAwB,SAAxB,EAAmCI,OAAnC;AACD;;AAED,WAAO;AACLL,MAAAA,QAAQ,EAAEH,IAAI,CAACU,aAAL,GAAqBP,QAArB,GAAgC;AADrC,KAAP;AAGD;AA3BY,CAAf;AA6BAQ,MAAM,CAACC,OAAP,GAAiBrB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function (seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}