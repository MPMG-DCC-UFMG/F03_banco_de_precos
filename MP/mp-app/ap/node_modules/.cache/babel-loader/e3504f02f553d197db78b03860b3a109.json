{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\n\nvar initCurvenessList = _multipleGraphEdgeHelper.initCurvenessList;\nvar createEdgeMapForCurveness = _multipleGraphEdgeHelper.createEdgeMapForCurveness;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function init(option) {\n    GraphSeries.superApply(this, 'init', arguments);\n    var self = this;\n\n    function getCategoriesData() {\n      return self._categoriesData;\n    } // Provide data for legend select\n\n\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function mergeOption(option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      // auto curveness\n      initCurvenessList(this);\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\n      zrUtil.each(graph.edges, function (edge) {\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\n      }, this);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function getCategoriesData() {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function _updateCategoriesData() {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function isAnimationEnabled() {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Initial friction\n      friction: 0.6,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle',\n      distance: 5\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/graph/GraphSeries.js"],"names":["echarts","require","List","zrUtil","_model","defaultEmphasis","Model","_format","encodeHTML","createGraphFromNodeEdge","LegendVisualProvider","_multipleGraphEdgeHelper","initCurvenessList","createEdgeMapForCurveness","GraphSeries","extendSeriesModel","type","init","option","superApply","arguments","self","getCategoriesData","_categoriesData","legendVisualProvider","fillDataTextStyle","edges","links","_updateCategoriesData","mergeOption","mergeDefaultAndTheme","getInitialData","ecModel","nodes","data","graph","beforeLink","each","edge","node1","node2","dataIndex","nodeData","edgeData","wrapMethod","model","categoriesModels","_categoriesModels","categoryIdx","getShallow","categoryModel","parentModel","edgeLabelModel","getModel","fakeSeriesModel","label","emphasisEdgeLabelModel","emphasisFakeSeriesModel","emphasis","customizeGetParent","edgeGetParent","path","parsePath","getGraph","getData","getEdgeData","formatTooltip","multipleSeries","dataType","params","getDataParams","getEdgeByIndex","sourceName","getName","targetName","html","push","join","value","categories","map","category","extend","categoriesData","initData","mapArray","idx","getItemModel","setZoom","zoom","setCenter","center","isAnimationEnabled","superCall","get","defaultOption","zlevel","z","coordinateSystem","legendHoverLink","hoverAnimation","layout","focusNodeAdjacency","circular","rotateLabel","force","initLayout","repulsion","gravity","friction","edgeLength","layoutAnimation","left","top","symbol","symbolSize","edgeSymbol","edgeSymbolSize","edgeLabel","position","distance","draggable","roam","nodeScaleRatio","show","formatter","itemStyle","lineStyle","color","width","opacity","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n\nvar _multipleGraphEdgeHelper = require(\"../helper/multipleGraphEdgeHelper\");\n\nvar initCurvenessList = _multipleGraphEdgeHelper.initCurvenessList;\nvar createEdgeMapForCurveness = _multipleGraphEdgeHelper.createEdgeMapForCurveness;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments);\n    var self = this;\n\n    function getCategoriesData() {\n      return self._categoriesData;\n    } // Provide data for legend select\n\n\n    this.legendVisualProvider = new LegendVisualProvider(getCategoriesData, getCategoriesData);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option, ['edgeLabel'], ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      // auto curveness\n      initCurvenessList(this);\n      var graph = createGraphFromNodeEdge(nodes, edges, this, true, beforeLink);\n      zrUtil.each(graph.edges, function (edge) {\n        createEdgeMapForCurveness(edge.node1, edge.node2, this, edge.dataIndex);\n      }, this);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      var emphasisEdgeLabelModel = self.getModel('emphasis.edgeLabel');\n      var emphasisFakeSeriesModel = new Model({\n        emphasis: {\n          label: emphasisEdgeLabelModel.option\n        }\n      }, emphasisEdgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : path && path[0] === 'emphasis' && path[1] === 'label' ? emphasisFakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Initial friction\n      friction: 0.6,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      position: 'middle',\n      distance: 5\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}'\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}