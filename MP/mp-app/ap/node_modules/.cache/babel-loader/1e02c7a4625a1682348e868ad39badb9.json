{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _text = require(\"zrender/lib/contain/text\");\n\nvar _calculateTextPosition = _text.calculateTextPosition;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\n\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function line(x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function rect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function roundRect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function square(x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function circle(x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function diamond(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function pin(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function arrow(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function triangle(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  calculateTextPosition: function calculateTextPosition(out, style, rect) {\n    var res = _calculateTextPosition(out, style, rect);\n\n    var shape = this.shape;\n\n    if (shape && shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      res.y = rect.y + rect.height * 0.4;\n    }\n\n    return res;\n  },\n  buildPath: function buildPath(ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n\n    if (symbolType !== 'none') {\n      var proxySymbol = symbolBuildProxies[symbolType];\n\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/util/symbol.js"],"names":["zrUtil","require","graphic","BoundingRect","_text","calculateTextPosition","Triangle","extendShape","type","shape","cx","cy","width","height","buildPath","path","moveTo","lineTo","closePath","Diamond","Pin","x","y","w","h","Math","max","r","dy","angle","asin","dx","cos","tanX","sin","tanY","cpLen","cpLen2","arc","PI","bezierCurveTo","Arrow","ctx","symbolCtors","line","Line","rect","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","x1","y1","x2","y2","min","size","symbolBuildProxies","each","Ctor","name","SymbolClz","symbolType","out","style","res","textPosition","inBundle","proxySymbol","symbolPathSetColor","color","innerColor","symbolStyle","symbolShape","stroke","__isEmptyBrush","fill","dirty","createSymbol","keepAspect","isEmpty","indexOf","substr","toLowerCase","symbolPath","makeImage","slice","makePath","setColor","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _text = require(\"zrender/lib/contain/text\");\n\nvar calculateTextPosition = _text.calculateTextPosition;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  calculateTextPosition: function (out, style, rect) {\n    var res = calculateTextPosition(out, style, rect);\n    var shape = this.shape;\n\n    if (shape && shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      res.y = rect.y + rect.height * 0.4;\n    }\n\n    return res;\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n\n    if (symbolType !== 'none') {\n      var proxySymbol = symbolBuildProxies[symbolType];\n\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;"]},"metadata":{},"sourceType":"script"}