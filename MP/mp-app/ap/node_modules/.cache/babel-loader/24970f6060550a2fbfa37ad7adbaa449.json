{"ast":null,"code":"'use strict';\n\nvar isExisty = function isExisty(value) {\n  return value !== null && value !== undefined;\n};\n\nvar _isEmpty = function _isEmpty(value) {\n  if (value instanceof Array) {\n    return value.length === 0;\n  }\n\n  return value === '' || !isExisty(value);\n};\n\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n  if (typeof value === 'string') {\n    return value.trim() === '';\n  }\n\n  return true;\n};\n\nvar validations = {\n  matchRegexp: function matchRegexp(value, regexp) {\n    var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n    return _isEmpty(value) || validationRegexp.test(value);\n  },\n  // eslint-disable-next-line\n  isEmail: function isEmail(value) {\n    return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n  },\n  isEmpty: function isEmpty(value) {\n    return _isEmpty(value);\n  },\n  required: function required(value) {\n    return !_isEmpty(value);\n  },\n  trim: function trim(value) {\n    return !isEmptyTrimed(value);\n  },\n  isNumber: function isNumber(value) {\n    return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n  },\n  isFloat: function isFloat(value) {\n    return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n  },\n  isPositive: function isPositive(value) {\n    if (isExisty(value)) {\n      return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n    }\n\n    return true;\n  },\n  maxNumber: function maxNumber(value, max) {\n    return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n  },\n  minNumber: function minNumber(value, min) {\n    return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n  },\n  maxFloat: function maxFloat(value, max) {\n    return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n  },\n  minFloat: function minFloat(value, min) {\n    return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n  },\n  isString: function isString(value) {\n    return _isEmpty(value) || typeof value === 'string' || value instanceof String;\n  },\n  minStringLength: function minStringLength(value, length) {\n    return validations.isString(value) && value.length >= length;\n  },\n  maxStringLength: function maxStringLength(value, length) {\n    return validations.isString(value) && value.length <= length;\n  },\n  // eslint-disable-next-line no-undef\n  isFile: function isFile(value) {\n    return _isEmpty(value) || value instanceof File;\n  },\n  maxFileSize: function maxFileSize(value, max) {\n    return _isEmpty(value) || validations.isFile(value) && value.size <= parseInt(max, 10);\n  },\n  allowedExtensions: function allowedExtensions(value, fileTypes) {\n    return _isEmpty(value) || validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n  }\n};\nmodule.exports = validations;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/react-form-validator-core/lib/ValidationRules.js"],"names":["isExisty","value","undefined","_isEmpty","Array","length","isEmptyTrimed","trim","validations","matchRegexp","regexp","validationRegexp","RegExp","test","isEmail","isEmpty","required","isNumber","isFloat","isPositive","maxNumber","max","parseInt","minNumber","min","maxFloat","parseFloat","minFloat","isString","String","minStringLength","maxStringLength","isFile","File","maxFileSize","size","allowedExtensions","fileTypes","split","indexOf","type","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAAnC;AACH,CAFD;;AAIA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBF,KAAlB,EAAyB;AACpC,MAAIA,KAAK,YAAYG,KAArB,EAA4B;AACxB,WAAOH,KAAK,CAACI,MAAN,KAAiB,CAAxB;AACH;;AACD,SAAOJ,KAAK,KAAK,EAAV,IAAgB,CAACD,QAAQ,CAACC,KAAD,CAAhC;AACH,CALD;;AAOA,IAAIK,aAAa,GAAG,SAASA,aAAT,CAAuBL,KAAvB,EAA8B;AAC9C,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAOA,KAAK,CAACM,IAAN,OAAiB,EAAxB;AACH;;AACD,SAAO,IAAP;AACH,CALD;;AAOA,IAAIC,WAAW,GAAG;AACdC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBR,KAArB,EAA4BS,MAA5B,EAAoC;AAC7C,QAAIC,gBAAgB,GAAGD,MAAM,YAAYE,MAAlB,GAA2BF,MAA3B,GAAoC,IAAIE,MAAJ,CAAWF,MAAX,CAA3D;AACA,WAAOP,QAAQ,CAACF,KAAD,CAAR,IAAmBU,gBAAgB,CAACE,IAAjB,CAAsBZ,KAAtB,CAA1B;AACH,GAJa;AAMd;AACAa,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBb,KAAjB,EAAwB;AAC7B,WAAOO,WAAW,CAACC,WAAZ,CAAwBR,KAAxB,EAA+B,y4BAA/B,CAAP;AACH,GATa;AAWdc,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBd,KAAjB,EAAwB;AAC7B,WAAOE,QAAQ,CAACF,KAAD,CAAf;AACH,GAba;AAede,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBf,KAAlB,EAAyB;AAC/B,WAAO,CAACE,QAAQ,CAACF,KAAD,CAAhB;AACH,GAjBa;AAmBdM,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcN,KAAd,EAAqB;AACvB,WAAO,CAACK,aAAa,CAACL,KAAD,CAArB;AACH,GArBa;AAuBdgB,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBhB,KAAlB,EAAyB;AAC/B,WAAOO,WAAW,CAACC,WAAZ,CAAwBR,KAAxB,EAA+B,qBAA/B,CAAP;AACH,GAzBa;AA2BdiB,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBjB,KAAjB,EAAwB;AAC7B,WAAOO,WAAW,CAACC,WAAZ,CAAwBR,KAAxB,EAA+B,kCAA/B,CAAP;AACH,GA7Ba;AA+BdkB,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBlB,KAApB,EAA2B;AACnC,QAAID,QAAQ,CAACC,KAAD,CAAZ,EAAqB;AACjB,aAAO,CAACO,WAAW,CAACS,QAAZ,CAAqBhB,KAArB,KAA+BO,WAAW,CAACU,OAAZ,CAAoBjB,KAApB,CAAhC,KAA+DA,KAAK,IAAI,CAA/E;AACH;;AACD,WAAO,IAAP;AACH,GApCa;AAsCdmB,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBnB,KAAnB,EAA0BoB,GAA1B,EAA+B;AACtC,WAAOlB,QAAQ,CAACF,KAAD,CAAR,IAAmBqB,QAAQ,CAACrB,KAAD,EAAQ,EAAR,CAAR,IAAuBqB,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAzD;AACH,GAxCa;AA0CdE,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBtB,KAAnB,EAA0BuB,GAA1B,EAA+B;AACtC,WAAOrB,QAAQ,CAACF,KAAD,CAAR,IAAmBqB,QAAQ,CAACrB,KAAD,EAAQ,EAAR,CAAR,IAAuBqB,QAAQ,CAACE,GAAD,EAAM,EAAN,CAAzD;AACH,GA5Ca;AA8CdC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBxB,KAAlB,EAAyBoB,GAAzB,EAA8B;AACpC,WAAOlB,QAAQ,CAACF,KAAD,CAAR,IAAmByB,UAAU,CAACzB,KAAD,CAAV,IAAqByB,UAAU,CAACL,GAAD,CAAzD;AACH,GAhDa;AAkDdM,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB1B,KAAlB,EAAyBuB,GAAzB,EAA8B;AACpC,WAAOrB,QAAQ,CAACF,KAAD,CAAR,IAAmByB,UAAU,CAACzB,KAAD,CAAV,IAAqByB,UAAU,CAACF,GAAD,CAAzD;AACH,GApDa;AAsDdI,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB3B,KAAlB,EAAyB;AAC/B,WAAOE,QAAQ,CAACF,KAAD,CAAR,IAAmB,OAAOA,KAAP,KAAiB,QAApC,IAAgDA,KAAK,YAAY4B,MAAxE;AACH,GAxDa;AAyDdC,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyB7B,KAAzB,EAAgCI,MAAhC,EAAwC;AACrD,WAAOG,WAAW,CAACoB,QAAZ,CAAqB3B,KAArB,KAA+BA,KAAK,CAACI,MAAN,IAAgBA,MAAtD;AACH,GA3Da;AA4Dd0B,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyB9B,KAAzB,EAAgCI,MAAhC,EAAwC;AACrD,WAAOG,WAAW,CAACoB,QAAZ,CAAqB3B,KAArB,KAA+BA,KAAK,CAACI,MAAN,IAAgBA,MAAtD;AACH,GA9Da;AAgEd;AACA2B,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgB/B,KAAhB,EAAuB;AAC3B,WAAOE,QAAQ,CAACF,KAAD,CAAR,IAAmBA,KAAK,YAAYgC,IAA3C;AACH,GAnEa;AAoEdC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBjC,KAArB,EAA4BoB,GAA5B,EAAiC;AAC1C,WAAOlB,QAAQ,CAACF,KAAD,CAAR,IAAmBO,WAAW,CAACwB,MAAZ,CAAmB/B,KAAnB,KAA6BA,KAAK,CAACkC,IAAN,IAAcb,QAAQ,CAACD,GAAD,EAAM,EAAN,CAA7E;AACH,GAtEa;AAuEde,EAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2BnC,KAA3B,EAAkCoC,SAAlC,EAA6C;AAC5D,WAAOlC,QAAQ,CAACF,KAAD,CAAR,IAAmBO,WAAW,CAACwB,MAAZ,CAAmB/B,KAAnB,KAA6BoC,SAAS,CAACC,KAAV,CAAgB,GAAhB,EAAqBC,OAArB,CAA6BtC,KAAK,CAACuC,IAAnC,MAA6C,CAAC,CAArG;AACH;AAzEa,CAAlB;AA4EAC,MAAM,CAACC,OAAP,GAAiBlC,WAAjB","sourcesContent":["'use strict';\n\nvar isExisty = function isExisty(value) {\n    return value !== null && value !== undefined;\n};\n\nvar _isEmpty = function _isEmpty(value) {\n    if (value instanceof Array) {\n        return value.length === 0;\n    }\n    return value === '' || !isExisty(value);\n};\n\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n    if (typeof value === 'string') {\n        return value.trim() === '';\n    }\n    return true;\n};\n\nvar validations = {\n    matchRegexp: function matchRegexp(value, regexp) {\n        var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n        return _isEmpty(value) || validationRegexp.test(value);\n    },\n\n    // eslint-disable-next-line\n    isEmail: function isEmail(value) {\n        return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n    },\n\n    isEmpty: function isEmpty(value) {\n        return _isEmpty(value);\n    },\n\n    required: function required(value) {\n        return !_isEmpty(value);\n    },\n\n    trim: function trim(value) {\n        return !isEmptyTrimed(value);\n    },\n\n    isNumber: function isNumber(value) {\n        return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n    },\n\n    isFloat: function isFloat(value) {\n        return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n    },\n\n    isPositive: function isPositive(value) {\n        if (isExisty(value)) {\n            return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n        }\n        return true;\n    },\n\n    maxNumber: function maxNumber(value, max) {\n        return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n    },\n\n    minNumber: function minNumber(value, min) {\n        return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n    },\n\n    maxFloat: function maxFloat(value, max) {\n        return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n    },\n\n    minFloat: function minFloat(value, min) {\n        return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n    },\n\n    isString: function isString(value) {\n        return _isEmpty(value) || typeof value === 'string' || value instanceof String;\n    },\n    minStringLength: function minStringLength(value, length) {\n        return validations.isString(value) && value.length >= length;\n    },\n    maxStringLength: function maxStringLength(value, length) {\n        return validations.isString(value) && value.length <= length;\n    },\n\n    // eslint-disable-next-line no-undef\n    isFile: function isFile(value) {\n        return _isEmpty(value) || value instanceof File;\n    },\n    maxFileSize: function maxFileSize(value, max) {\n        return _isEmpty(value) || validations.isFile(value) && value.size <= parseInt(max, 10);\n    },\n    allowedExtensions: function allowedExtensions(value, fileTypes) {\n        return _isEmpty(value) || validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n    }\n};\n\nmodule.exports = validations;"]},"metadata":{},"sourceType":"script"}