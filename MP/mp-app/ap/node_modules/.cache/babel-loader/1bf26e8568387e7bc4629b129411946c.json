{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\n\n\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function getBoundingRect() {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function contain(coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function cloneShallow(name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/coord/geo/Region.js"],"names":["BoundingRect","require","bbox","vec2","polygonContain","Region","name","geometries","cp","rect","getBoundingRect","x","width","y","height","center","prototype","constructor","properties","_rect","MAX_NUMBER","Number","MAX_VALUE","min","max","min2","max2","i","length","type","exterior","fromPoints","contain","coord","loopGeo","len","interiors","k","transformTo","aspect","target","transform","calculateTransform","p","applyTransform","h","copy","cloneShallow","newRegion","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}