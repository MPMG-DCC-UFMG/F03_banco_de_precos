{"ast":null,"code":"import _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: {\n      display: 'flex',\n      flexDirection: 'column',\n      margin: 'auto',\n      width: 'fit-content'\n    },\n    formControl: {\n      marginTop: theme.spacing(2),\n      minWidth: 120\n    },\n    formControlLabel: {\n      marginTop: theme.spacing(1)\n    }\n  };\n});\nexport default function MaxWidthDialog() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fullWidth = _React$useState4[0],\n      setFullWidth = _React$useState4[1];\n\n  var _React$useState5 = React.useState('sm'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      maxWidth = _React$useState6[0],\n      setMaxWidth = _React$useState6[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Open max-width dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: fullWidth,\n    maxWidth: maxWidth,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"max-width-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Optional sizes\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"You can set my maximum width and whether to adapt or not.\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"max-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"maxWidth\"), /*#__PURE__*/React.createElement(Select, {\n    value: maxWidth,\n    onChange: handleMaxWidthChange,\n    inputProps: {\n      name: 'max-width',\n      id: 'max-width'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, \"false\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, \"xs\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"sm\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, \"md\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, \"lg\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, \"xl\"))), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.formControlLabel,\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: fullWidth,\n      onChange: handleFullWidthChange,\n      value: \"fullWidth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }),\n    label: \"Full width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/dialog/OptimalSizeDialog.jsx"],"names":["React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","useStyles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","minWidth","formControlLabel","MaxWidthDialog","classes","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","name","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport Switch from '@material-ui/core/Switch'\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}))\n\nexport default function MaxWidthDialog() {\n    const classes = useStyles()\n    const [open, setOpen] = React.useState(false)\n    const [fullWidth, setFullWidth] = React.useState(true)\n    const [maxWidth, setMaxWidth] = React.useState('sm')\n\n    function handleClickOpen() {\n        setOpen(true)\n    }\n\n    function handleClose() {\n        setOpen(false)\n    }\n\n    function handleMaxWidthChange(event) {\n        setMaxWidth(event.target.value)\n    }\n\n    function handleFullWidthChange(event) {\n        setFullWidth(event.target.checked)\n    }\n\n    return (\n        <React.Fragment>\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}\n            >\n                Open max-width dialog\n            </Button>\n            <Dialog\n                fullWidth={fullWidth}\n                maxWidth={maxWidth}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">\n                    Optional sizes\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        You can set my maximum width and whether to adapt or\n                        not.\n                    </DialogContentText>\n                    <form className={classes.form} noValidate>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"max-width\">\n                                maxWidth\n                            </InputLabel>\n                            <Select\n                                value={maxWidth}\n                                onChange={handleMaxWidthChange}\n                                inputProps={{\n                                    name: 'max-width',\n                                    id: 'max-width',\n                                }}\n                            >\n                                <MenuItem value={false}>false</MenuItem>\n                                <MenuItem value=\"xs\">xs</MenuItem>\n                                <MenuItem value=\"sm\">sm</MenuItem>\n                                <MenuItem value=\"md\">md</MenuItem>\n                                <MenuItem value=\"lg\">lg</MenuItem>\n                                <MenuItem value=\"xl\">xl</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            control={\n                                <Switch\n                                    checked={fullWidth}\n                                    onChange={handleFullWidthChange}\n                                    value=\"fullWidth\"\n                                />\n                            }\n                            label=\"Full width\"\n                        />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}