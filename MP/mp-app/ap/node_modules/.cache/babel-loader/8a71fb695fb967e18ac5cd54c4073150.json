{"ast":null,"code":"import _toConsumableArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/utilities/Typography.jsx\";\n\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Table, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport Highlight from 'react-highlight';\n\nvar Typography = function Typography() {\n  var list = [{\n    className: '.font-light',\n    description: 'font-weight: 300'\n  }, {\n    className: '.font-normal',\n    description: 'font-weight: normal'\n  }, {\n    className: '.font-medium',\n    description: 'font-weight: 500'\n  }, {\n    className: '.font-semibold',\n    description: 'font-weight: 600'\n  }, {\n    className: '.font-bold',\n    description: 'font-weight: 700'\n  }, {\n    className: '.capitalize',\n    description: 'Capitalize String'\n  }, {\n    className: '.uppercase',\n    description: 'UPPERCASE STRING'\n  }, {\n    className: '.lowercase',\n    description: 'lowercase string'\n  }, {\n    className: '.whitespace-pre',\n    description: 'white-space: pre'\n  }, {\n    className: '.whitespace-pre-wrap',\n    description: 'white-space: pre-wrap'\n  }, {\n    className: '.whitespace-no-wrap',\n    description: 'white-space: nowrap'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Utilities',\n      path: '/utilities'\n    }, {\n      name: 'Typography'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"typography\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: \"bg-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Class Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Size\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Example\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, _toConsumableArray(Array(7).keys()).slice(1).reverse().map(function (item, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \"h\", item), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, ReactHtmlParser(\"<h\".concat(item, \">h\").concat(item, \"</h\").concat(item, \">\"))));\n  }), /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"text-small\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"0.8125rem\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0 capitalize\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, \"text-small\"))), [13, 14, 16, 18, 20, 22, 24, 30, 32].map(function (item, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, \"text-\", item), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, item, \"px\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: \"px-0 capitalize\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, ReactHtmlParser(\"<span class=\\\"text-\".concat(item, \"\\\">text-\").concat(item, \"</span>\"))));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), list.map(function (item, ind) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: ind,\n      className: \"flex items-center flex-wrap justify-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, item.className), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"highlight-js\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Highlight, {\n      className: \"html\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, \"<div className=\\\"\".concat(item.className.replace('.', ''), \"\\\">\").concat(item.description, \"</div>\"))));\n  })));\n};\n\nexport default Typography;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/utilities/Typography.jsx"],"names":["React","ReactHtmlParser","Table","TableHead","TableCell","TableBody","TableRow","Breadcrumb","SimpleCard","Highlight","Typography","list","className","description","name","path","Array","keys","slice","reverse","map","item","index","ind","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport {\n    Table,\n    TableHead,\n    TableCell,\n    TableBody,\n    TableRow,\n} from '@material-ui/core'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport Highlight from 'react-highlight'\n\nconst Typography = () => {\n    let list = [\n        {\n            className: '.font-light',\n            description: 'font-weight: 300',\n        },\n        {\n            className: '.font-normal',\n            description: 'font-weight: normal',\n        },\n        {\n            className: '.font-medium',\n            description: 'font-weight: 500',\n        },\n        {\n            className: '.font-semibold',\n            description: 'font-weight: 600',\n        },\n        {\n            className: '.font-bold',\n            description: 'font-weight: 700',\n        },\n        {\n            className: '.capitalize',\n            description: 'Capitalize String',\n        },\n        {\n            className: '.uppercase',\n            description: 'UPPERCASE STRING',\n        },\n        {\n            className: '.lowercase',\n            description: 'lowercase string',\n        },\n        {\n            className: '.whitespace-pre',\n            description: 'white-space: pre',\n        },\n        {\n            className: '.whitespace-pre-wrap',\n            description: 'white-space: pre-wrap',\n        },\n        {\n            className: '.whitespace-no-wrap',\n            description: 'white-space: nowrap',\n        },\n    ]\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Utilities', path: '/utilities' },\n                        { name: 'Typography' },\n                    ]}\n                />\n            </div>\n\n            <SimpleCard title=\"typography\">\n                <Table>\n                    <TableHead>\n                        <TableRow className=\"bg-default\">\n                            <TableCell className=\"px-0\">Class Name</TableCell>\n                            <TableCell className=\"px-0\">Size</TableCell>\n                            <TableCell className=\"px-0\">Example</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {[...Array(7).keys()]\n                            .slice(1)\n                            .reverse()\n                            .map((item, index) => (\n                                <TableRow key={index}>\n                                    <TableCell className=\"px-0\">\n                                        h{item}\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\"></TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {ReactHtmlParser(\n                                            `<h${item}>h${item}</h${item}>`\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        <TableRow>\n                            <TableCell className=\"px-0\">text-small</TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                0.8125rem\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                <span className=\"text-small\">text-small</span>\n                            </TableCell>\n                        </TableRow>\n\n                        {[13, 14, 16, 18, 20, 22, 24, 30, 32].map(\n                            (item, index) => (\n                                <TableRow key={index}>\n                                    <TableCell className=\"px-0\">\n                                        text-{item}\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {item}px\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {ReactHtmlParser(\n                                            `<span class=\"text-${item}\">text-${item}</span>`\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        )}\n                    </TableBody>\n                </Table>\n\n                <div className=\"py-2\"></div>\n                {list.map((item, ind) => (\n                    <div\n                        key={ind}\n                        className=\"flex items-center flex-wrap justify-between\"\n                    >\n                        <code>{item.className}</code>\n                        <div className=\"highlight-js\">\n                            <Highlight className=\"html\">{`<div className=\"${item.className.replace(\n                                '.',\n                                ''\n                            )}\">${item.description}</div>`}</Highlight>\n                        </div>\n                    </div>\n                ))}\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default Typography\n"]},"metadata":{},"sourceType":"module"}