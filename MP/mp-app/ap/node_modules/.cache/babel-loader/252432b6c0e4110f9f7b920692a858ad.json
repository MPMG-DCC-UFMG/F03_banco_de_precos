{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/util/component.js"],"names":["zrUtil","require","_clazz","parseClassType","base","getUID","type","Math","random","toFixed","join","enableSubTypeDefaulter","entity","subTypeDefaulters","registerSubTypeDefaulter","componentType","defaulter","main","determineSubType","option","componentTypeMain","hasSubTypes","enableTopologicalTravel","dependencyGetter","topologicalTravel","targetNameList","fullNameList","callback","context","length","result","makeDepndencyGraph","graph","stack","noEntryList","targetNameSet","each","name","currComponentType","pop","currVertex","isInTargetNameSet","call","originalDeps","slice","successor","removeEdgeAndAdd","removeEdge","Error","succComponentType","entryCount","push","thisItem","createDependencyGraphItem","availableDeps","getAvailableDependencies","dependentName","indexOf","predecessor","thatItem","dep","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIE,cAAc,GAAGD,MAAM,CAACC,cAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,CAAX;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB;AACA;AACA,SAAO,CAACA,IAAI,IAAI,EAAT,EAAaF,IAAI,EAAjB,EAAqBG,IAAI,CAACC,MAAL,GAAcC,OAAd,CAAsB,CAAtB,CAArB,EAA+CC,IAA/C,CAAoD,GAApD,CAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;AACtC,MAAIC,iBAAiB,GAAG,EAAxB;;AAEAD,EAAAA,MAAM,CAACE,wBAAP,GAAkC,UAAUC,aAAV,EAAyBC,SAAzB,EAAoC;AACpED,IAAAA,aAAa,GAAGZ,cAAc,CAACY,aAAD,CAA9B;AACAF,IAAAA,iBAAiB,CAACE,aAAa,CAACE,IAAf,CAAjB,GAAwCD,SAAxC;AACD,GAHD;;AAKAJ,EAAAA,MAAM,CAACM,gBAAP,GAA0B,UAAUH,aAAV,EAAyBI,MAAzB,EAAiC;AACzD,QAAIb,IAAI,GAAGa,MAAM,CAACb,IAAlB;;AAEA,QAAI,CAACA,IAAL,EAAW;AACT,UAAIc,iBAAiB,GAAGjB,cAAc,CAACY,aAAD,CAAd,CAA8BE,IAAtD;;AAEA,UAAIL,MAAM,CAACS,WAAP,CAAmBN,aAAnB,KAAqCF,iBAAiB,CAACO,iBAAD,CAA1D,EAA+E;AAC7Ed,QAAAA,IAAI,GAAGO,iBAAiB,CAACO,iBAAD,CAAjB,CAAqCD,MAArC,CAAP;AACD;AACF;;AAED,WAAOb,IAAP;AACD,GAZD;;AAcA,SAAOM,MAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASU,uBAAT,CAAiCV,MAAjC,EAAyCW,gBAAzC,EAA2D;AACzD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEX,EAAAA,MAAM,CAACY,iBAAP,GAA2B,UAAUC,cAAV,EAA0BC,YAA1B,EAAwCC,QAAxC,EAAkDC,OAAlD,EAA2D;AACpF,QAAI,CAACH,cAAc,CAACI,MAApB,EAA4B;AAC1B;AACD;;AAED,QAAIC,MAAM,GAAGC,kBAAkB,CAACL,YAAD,CAA/B;AACA,QAAIM,KAAK,GAAGF,MAAM,CAACE,KAAnB;AACA,QAAIC,KAAK,GAAGH,MAAM,CAACI,WAAnB;AACA,QAAIC,aAAa,GAAG,EAApB;AACAnC,IAAAA,MAAM,CAACoC,IAAP,CAAYX,cAAZ,EAA4B,UAAUY,IAAV,EAAgB;AAC1CF,MAAAA,aAAa,CAACE,IAAD,CAAb,GAAsB,IAAtB;AACD,KAFD;;AAIA,WAAOJ,KAAK,CAACJ,MAAb,EAAqB;AACnB,UAAIS,iBAAiB,GAAGL,KAAK,CAACM,GAAN,EAAxB;AACA,UAAIC,UAAU,GAAGR,KAAK,CAACM,iBAAD,CAAtB;AACA,UAAIG,iBAAiB,GAAG,CAAC,CAACN,aAAa,CAACG,iBAAD,CAAvC;;AAEA,UAAIG,iBAAJ,EAAuB;AACrBd,QAAAA,QAAQ,CAACe,IAAT,CAAcd,OAAd,EAAuBU,iBAAvB,EAA0CE,UAAU,CAACG,YAAX,CAAwBC,KAAxB,EAA1C;AACA,eAAOT,aAAa,CAACG,iBAAD,CAApB;AACD;;AAEDtC,MAAAA,MAAM,CAACoC,IAAP,CAAYI,UAAU,CAACK,SAAvB,EAAkCJ,iBAAiB,GAAGK,gBAAH,GAAsBC,UAAzE;AACD;;AAED/C,IAAAA,MAAM,CAACoC,IAAP,CAAYD,aAAZ,EAA2B,YAAY;AACrC,YAAM,IAAIa,KAAJ,CAAU,8BAAV,CAAN;AACD,KAFD;;AAIA,aAASD,UAAT,CAAoBE,iBAApB,EAAuC;AACrCjB,MAAAA,KAAK,CAACiB,iBAAD,CAAL,CAAyBC,UAAzB;;AAEA,UAAIlB,KAAK,CAACiB,iBAAD,CAAL,CAAyBC,UAAzB,KAAwC,CAA5C,EAA+C;AAC7CjB,QAAAA,KAAK,CAACkB,IAAN,CAAWF,iBAAX;AACD;AACF,KApCmF,CAoClF;AACF;AACA;AACA;AACA;AACA;;;AAGA,aAASH,gBAAT,CAA0BG,iBAA1B,EAA6C;AAC3Cd,MAAAA,aAAa,CAACc,iBAAD,CAAb,GAAmC,IAAnC;AACAF,MAAAA,UAAU,CAACE,iBAAD,CAAV;AACD;AACF,GAhDD;AAiDA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGE,WAASlB,kBAAT,CAA4BL,YAA5B,EAA0C;AACxC,QAAIM,KAAK,GAAG,EAAZ;AACA,QAAIE,WAAW,GAAG,EAAlB;AACAlC,IAAAA,MAAM,CAACoC,IAAP,CAAYV,YAAZ,EAA0B,UAAUW,IAAV,EAAgB;AACxC,UAAIe,QAAQ,GAAGC,yBAAyB,CAACrB,KAAD,EAAQK,IAAR,CAAxC;AACA,UAAIM,YAAY,GAAGS,QAAQ,CAACT,YAAT,GAAwBpB,gBAAgB,CAACc,IAAD,CAA3D;AACA,UAAIiB,aAAa,GAAGC,wBAAwB,CAACZ,YAAD,EAAejB,YAAf,CAA5C;AACA0B,MAAAA,QAAQ,CAACF,UAAT,GAAsBI,aAAa,CAACzB,MAApC;;AAEA,UAAIuB,QAAQ,CAACF,UAAT,KAAwB,CAA5B,EAA+B;AAC7BhB,QAAAA,WAAW,CAACiB,IAAZ,CAAiBd,IAAjB;AACD;;AAEDrC,MAAAA,MAAM,CAACoC,IAAP,CAAYkB,aAAZ,EAA2B,UAAUE,aAAV,EAAyB;AAClD,YAAIxD,MAAM,CAACyD,OAAP,CAAeL,QAAQ,CAACM,WAAxB,EAAqCF,aAArC,IAAsD,CAA1D,EAA6D;AAC3DJ,UAAAA,QAAQ,CAACM,WAAT,CAAqBP,IAArB,CAA0BK,aAA1B;AACD;;AAED,YAAIG,QAAQ,GAAGN,yBAAyB,CAACrB,KAAD,EAAQwB,aAAR,CAAxC;;AAEA,YAAIxD,MAAM,CAACyD,OAAP,CAAeE,QAAQ,CAACd,SAAxB,EAAmCW,aAAnC,IAAoD,CAAxD,EAA2D;AACzDG,UAAAA,QAAQ,CAACd,SAAT,CAAmBM,IAAnB,CAAwBd,IAAxB;AACD;AACF,OAVD;AAWD,KArBD;AAsBA,WAAO;AACLL,MAAAA,KAAK,EAAEA,KADF;AAELE,MAAAA,WAAW,EAAEA;AAFR,KAAP;AAID;;AAED,WAASmB,yBAAT,CAAmCrB,KAAnC,EAA0CK,IAA1C,EAAgD;AAC9C,QAAI,CAACL,KAAK,CAACK,IAAD,CAAV,EAAkB;AAChBL,MAAAA,KAAK,CAACK,IAAD,CAAL,GAAc;AACZqB,QAAAA,WAAW,EAAE,EADD;AAEZb,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID;;AAED,WAAOb,KAAK,CAACK,IAAD,CAAZ;AACD;;AAED,WAASkB,wBAAT,CAAkCZ,YAAlC,EAAgDjB,YAAhD,EAA8D;AAC5D,QAAI4B,aAAa,GAAG,EAApB;AACAtD,IAAAA,MAAM,CAACoC,IAAP,CAAYO,YAAZ,EAA0B,UAAUiB,GAAV,EAAe;AACvC5D,MAAAA,MAAM,CAACyD,OAAP,CAAe/B,YAAf,EAA6BkC,GAA7B,KAAqC,CAArC,IAA0CN,aAAa,CAACH,IAAd,CAAmBS,GAAnB,CAA1C;AACD,KAFD;AAGA,WAAON,aAAP;AACD;AACF;;AAEDO,OAAO,CAACxD,MAAR,GAAiBA,MAAjB;AACAwD,OAAO,CAAClD,sBAAR,GAAiCA,sBAAjC;AACAkD,OAAO,CAACvC,uBAAR,GAAkCA,uBAAlC","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;"]},"metadata":{},"sourceType":"script"}