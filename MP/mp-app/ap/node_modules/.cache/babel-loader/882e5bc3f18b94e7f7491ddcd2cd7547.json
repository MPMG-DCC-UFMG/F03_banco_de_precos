{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\n\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/boxplot/BoxplotView.js"],"names":["zrUtil","require","ChartView","graphic","Path","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","BoxplotView","extend","type","render","seriesModel","ecModel","api","data","getData","group","oldData","_data","removeAll","constDim","get","diff","add","newIdx","hasValue","itemLayout","getItemLayout","symbolEl","createNormalBox","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateNormalBoxData","el","execute","eachItemGraphicEl","dispose","noop","BoxPath","shape","buildPath","ctx","ends","points","i","moveTo","lineTo","closePath","length","dataIndex","isInit","transInit","hostModel","updateMethod","itemModel","getItemModel","normalItemStyleModel","getModel","borderColor","getItemVisual","itemStyle","getItemStyle","stroke","strokeNoScale","useStyle","z2","hoverStyle","setHoverStyle","dim","map","point","slice","initBaseline","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Update common properties\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var oldData = this._data; // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    var constDim = seriesModel.get('layout') === 'horizontal' ? 1 : 0;\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var itemLayout = data.getItemLayout(newIdx);\n        var symbolEl = createNormalBox(itemLayout, data, newIdx, constDim, true);\n        data.setItemGraphicEl(newIdx, symbolEl);\n        group.add(symbolEl);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(symbolEl);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (!symbolEl) {\n        symbolEl = createNormalBox(itemLayout, data, newIdx, constDim);\n      } else {\n        updateNormalBoxData(itemLayout, symbolEl, data, newIdx);\n      }\n\n      group.add(symbolEl);\n      data.setItemGraphicEl(newIdx, symbolEl);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var data = this._data;\n    this._data = null;\n    data && data.eachItemGraphicEl(function (el) {\n      el && group.remove(el);\n    });\n  },\n  dispose: zrUtil.noop\n});\nvar BoxPath = Path.extend({\n  type: 'boxplotBoxPath',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n    var i = 0;\n    ctx.moveTo(ends[i][0], ends[i][1]);\n    i++;\n\n    for (; i < 4; i++) {\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n\n    ctx.closePath();\n\n    for (; i < ends.length; i++) {\n      ctx.moveTo(ends[i][0], ends[i][1]);\n      i++;\n      ctx.lineTo(ends[i][0], ends[i][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, data, dataIndex, constDim, isInit) {\n  var ends = itemLayout.ends;\n  var el = new BoxPath({\n    shape: {\n      points: isInit ? transInit(ends, constDim, itemLayout) : ends\n    }\n  });\n  updateNormalBoxData(itemLayout, el, data, dataIndex, isInit);\n  return el;\n}\n\nfunction updateNormalBoxData(itemLayout, el, data, dataIndex, isInit) {\n  var seriesModel = data.hostModel;\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps'];\n  updateMethod(el, {\n    shape: {\n      points: itemLayout.ends\n    }\n  }, seriesModel, dataIndex);\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var borderColor = data.getItemVisual(dataIndex, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  itemStyle.stroke = borderColor;\n  itemStyle.strokeNoScale = true;\n  el.useStyle(itemStyle);\n  el.z2 = 100;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}