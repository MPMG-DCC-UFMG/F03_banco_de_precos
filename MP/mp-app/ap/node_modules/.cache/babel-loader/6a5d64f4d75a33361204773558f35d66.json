{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* Some formulas were originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment of the method \"step\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var initialFriction = opts.friction == null ? 0.6 : opts.friction;\n  var friction = initialFriction;\n  return {\n    warmUp: function warmUp() {\n      friction = initialFriction * 0.8;\n    },\n    setFixed: function setFixed(idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function setUnfixed(idx) {\n      nodes[idx].fixed = false;\n    },\n\n    /**\n     * Some formulas were originally copied from \"d3.js\"\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\n     * with some modifications made for this project.\n     * See the license statement at the head of this file.\n     */\n    step: function step(cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n\n        if (e.ignoreForceLayout) {\n          continue;\n        }\n\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/graph/forceHelper.js"],"names":["vec2","require","scaleAndAdd","forceLayout","nodes","edges","opts","rect","width","height","center","x","y","gravity","i","length","n","p","create","Math","random","pp","clone","initialFriction","friction","warmUp","setFixed","idx","fixed","setUnfixed","step","cb","v12","nLen","e","ignoreForceLayout","n1","n2","sub","d","len","w","isNaN","normalize","j","set","repFact","rep","v","copy","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,yBAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,WAAW,GAAGF,IAAI,CAACE,WAAvB,C,CAAoC;AACpC;AACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACvC,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,MAAIC,MAAM,GAAGF,IAAI,CAACE,MAAlB;AACA,MAAIC,MAAM,GAAG,CAACH,IAAI,CAACI,CAAL,GAASH,KAAK,GAAG,CAAlB,EAAqBD,IAAI,CAACK,CAAL,GAASH,MAAM,GAAG,CAAvC,CAAb,CAJuC,CAIiB;;AAExD,MAAII,OAAO,GAAGP,IAAI,CAACO,OAAL,IAAgB,IAAhB,GAAuB,GAAvB,GAA6BP,IAAI,CAACO,OAAhD,CANuC,CAMkB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,CAAC,GAAGZ,KAAK,CAACU,CAAD,CAAb;;AAEA,QAAI,CAACE,CAAC,CAACC,CAAP,EAAU;AACRD,MAAAA,CAAC,CAACC,CAAF,GAAMjB,IAAI,CAACkB,MAAL,CAAYV,KAAK,IAAIW,IAAI,CAACC,MAAL,KAAgB,GAApB,CAAL,GAAgCV,MAAM,CAAC,CAAD,CAAlD,EAAuDD,MAAM,IAAIU,IAAI,CAACC,MAAL,KAAgB,GAApB,CAAN,GAAiCV,MAAM,CAAC,CAAD,CAA9F,CAAN;AACD;;AAEDM,IAAAA,CAAC,CAACK,EAAF,GAAOrB,IAAI,CAACsB,KAAL,CAAWN,CAAC,CAACC,CAAb,CAAP;AACAD,IAAAA,CAAC,CAACX,KAAF,GAAU,IAAV;AACD,GA1BsC,CA0BrC;AACF;AACA;;;AAGA,MAAIkB,eAAe,GAAGjB,IAAI,CAACkB,QAAL,IAAiB,IAAjB,GAAwB,GAAxB,GAA8BlB,IAAI,CAACkB,QAAzD;AACA,MAAIA,QAAQ,GAAGD,eAAf;AACA,SAAO;AACLE,IAAAA,MAAM,EAAE,kBAAY;AAClBD,MAAAA,QAAQ,GAAGD,eAAe,GAAG,GAA7B;AACD,KAHI;AAILG,IAAAA,QAAQ,EAAE,kBAAUC,GAAV,EAAe;AACvBvB,MAAAA,KAAK,CAACuB,GAAD,CAAL,CAAWC,KAAX,GAAmB,IAAnB;AACD,KANI;AAOLC,IAAAA,UAAU,EAAE,oBAAUF,GAAV,EAAe;AACzBvB,MAAAA,KAAK,CAACuB,GAAD,CAAL,CAAWC,KAAX,GAAmB,KAAnB;AACD,KATI;;AAWL;AACJ;AACA;AACA;AACA;AACA;AACIE,IAAAA,IAAI,EAAE,cAAUC,EAAV,EAAc;AAClB,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,IAAI,GAAG7B,KAAK,CAACW,MAAjB;;AAEA,WAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIoB,CAAC,GAAG7B,KAAK,CAACS,CAAD,CAAb;;AAEA,YAAIoB,CAAC,CAACC,iBAAN,EAAyB;AACvB;AACD;;AAED,YAAIC,EAAE,GAAGF,CAAC,CAACE,EAAX;AACA,YAAIC,EAAE,GAAGH,CAAC,CAACG,EAAX;AACArC,QAAAA,IAAI,CAACsC,GAAL,CAASN,GAAT,EAAcK,EAAE,CAACpB,CAAjB,EAAoBmB,EAAE,CAACnB,CAAvB;AACA,YAAIsB,CAAC,GAAGvC,IAAI,CAACwC,GAAL,CAASR,GAAT,IAAgBE,CAAC,CAACK,CAA1B;AACA,YAAIE,CAAC,GAAGJ,EAAE,CAACI,CAAH,IAAQL,EAAE,CAACK,CAAH,GAAOJ,EAAE,CAACI,CAAlB,CAAR;;AAEA,YAAIC,KAAK,CAACD,CAAD,CAAT,EAAc;AACZA,UAAAA,CAAC,GAAG,CAAJ;AACD;;AAEDzC,QAAAA,IAAI,CAAC2C,SAAL,CAAeX,GAAf,EAAoBA,GAApB;AACA,SAACI,EAAE,CAACR,KAAJ,IAAa1B,WAAW,CAACkC,EAAE,CAACnB,CAAJ,EAAOmB,EAAE,CAACnB,CAAV,EAAae,GAAb,EAAkBS,CAAC,GAAGF,CAAJ,GAAQf,QAA1B,CAAxB;AACA,SAACa,EAAE,CAACT,KAAJ,IAAa1B,WAAW,CAACmC,EAAE,CAACpB,CAAJ,EAAOoB,EAAE,CAACpB,CAAV,EAAae,GAAb,EAAkB,EAAE,IAAIS,CAAN,IAAWF,CAAX,GAAef,QAAjC,CAAxB;AACD,OAxBiB,CAwBhB;;;AAGF,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAApB,EAA0BnB,CAAC,EAA3B,EAA+B;AAC7B,YAAIE,CAAC,GAAGZ,KAAK,CAACU,CAAD,CAAb;;AAEA,YAAI,CAACE,CAAC,CAACY,KAAP,EAAc;AACZ5B,UAAAA,IAAI,CAACsC,GAAL,CAASN,GAAT,EAActB,MAAd,EAAsBM,CAAC,CAACC,CAAxB,EADY,CACgB;AAC5B;AACA;;AAEAf,UAAAA,WAAW,CAACc,CAAC,CAACC,CAAH,EAAMD,CAAC,CAACC,CAAR,EAAWe,GAAX,EAAgBnB,OAAO,GAAGW,QAA1B,CAAX;AACD;AACF,OArCiB,CAqChB;AACF;;;AAGA,WAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAApB,EAA0BnB,CAAC,EAA3B,EAA+B;AAC7B,YAAIsB,EAAE,GAAGhC,KAAK,CAACU,CAAD,CAAd;;AAEA,aAAK,IAAI8B,CAAC,GAAG9B,CAAC,GAAG,CAAjB,EAAoB8B,CAAC,GAAGX,IAAxB,EAA8BW,CAAC,EAA/B,EAAmC;AACjC,cAAIP,EAAE,GAAGjC,KAAK,CAACwC,CAAD,CAAd;AACA5C,UAAAA,IAAI,CAACsC,GAAL,CAASN,GAAT,EAAcK,EAAE,CAACpB,CAAjB,EAAoBmB,EAAE,CAACnB,CAAvB;AACA,cAAIsB,CAAC,GAAGvC,IAAI,CAACwC,GAAL,CAASR,GAAT,CAAR;;AAEA,cAAIO,CAAC,KAAK,CAAV,EAAa;AACX;AACAvC,YAAAA,IAAI,CAAC6C,GAAL,CAASb,GAAT,EAAcb,IAAI,CAACC,MAAL,KAAgB,GAA9B,EAAmCD,IAAI,CAACC,MAAL,KAAgB,GAAnD;AACAmB,YAAAA,CAAC,GAAG,CAAJ;AACD;;AAED,cAAIO,OAAO,GAAG,CAACV,EAAE,CAACW,GAAH,GAASV,EAAE,CAACU,GAAb,IAAoBR,CAApB,GAAwBA,CAAtC;AACA,WAACH,EAAE,CAACR,KAAJ,IAAa1B,WAAW,CAACkC,EAAE,CAACf,EAAJ,EAAQe,EAAE,CAACf,EAAX,EAAeW,GAAf,EAAoBc,OAApB,CAAxB;AACA,WAACT,EAAE,CAACT,KAAJ,IAAa1B,WAAW,CAACmC,EAAE,CAAChB,EAAJ,EAAQgB,EAAE,CAAChB,EAAX,EAAeW,GAAf,EAAoB,CAACc,OAArB,CAAxB;AACD;AACF;;AAED,UAAIE,CAAC,GAAG,EAAR;;AAEA,WAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAApB,EAA0BnB,CAAC,EAA3B,EAA+B;AAC7B,YAAIE,CAAC,GAAGZ,KAAK,CAACU,CAAD,CAAb;;AAEA,YAAI,CAACE,CAAC,CAACY,KAAP,EAAc;AACZ5B,UAAAA,IAAI,CAACsC,GAAL,CAASU,CAAT,EAAYhC,CAAC,CAACC,CAAd,EAAiBD,CAAC,CAACK,EAAnB;AACAnB,UAAAA,WAAW,CAACc,CAAC,CAACC,CAAH,EAAMD,CAAC,CAACC,CAAR,EAAW+B,CAAX,EAAcxB,QAAd,CAAX;AACAxB,UAAAA,IAAI,CAACiD,IAAL,CAAUjC,CAAC,CAACK,EAAZ,EAAgBL,CAAC,CAACC,CAAlB;AACD;AACF;;AAEDO,MAAAA,QAAQ,GAAGA,QAAQ,GAAG,KAAtB;AACAO,MAAAA,EAAE,IAAIA,EAAE,CAAC3B,KAAD,EAAQC,KAAR,EAAemB,QAAQ,GAAG,IAA1B,CAAR;AACD;AA5FI,GAAP;AA8FD;;AAED0B,OAAO,CAAC/C,WAAR,GAAsBA,WAAtB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* Some formulas were originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment of the method \"step\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]);\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var initialFriction = opts.friction == null ? 0.6 : opts.friction;\n  var friction = initialFriction;\n  return {\n    warmUp: function () {\n      friction = initialFriction * 0.8;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n\n    /**\n     * Some formulas were originally copied from \"d3.js\"\n     * https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/layout/force.js\n     * with some modifications made for this project.\n     * See the license statement at the head of this file.\n     */\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n\n        if (e.ignoreForceLayout) {\n          continue;\n        }\n\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;"]},"metadata":{},"sourceType":"script"}