{"ast":null,"code":"import _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport Mock from '../mock';\nimport * as _ from 'lodash';\nvar TodoDB = {\n  todo: [{\n    id: 1,\n    title: 'API problem',\n    note: 'API is malfunctioning. kindly fix it',\n    important: true,\n    starred: true,\n    done: false,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1, 2]\n  }, {\n    id: 2,\n    title: 'Mobile problem',\n    note: 'Mobile is malfunctioning. fix it',\n    important: false,\n    starred: false,\n    done: true,\n    read: true,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [2]\n  }, {\n    id: 3,\n    title: 'API problem',\n    note: 'API is malfunctioning. fix it',\n    important: false,\n    starred: false,\n    done: true,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1]\n  }, {\n    id: 4,\n    title: 'API problem',\n    note: 'API is malfunctioning. fix it',\n    important: false,\n    starred: false,\n    done: false,\n    read: true,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1, 2, 3]\n  }, {\n    id: 5,\n    title: 'API problem',\n    note: 'API is malfunctioning. fix it',\n    important: false,\n    starred: false,\n    done: true,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1]\n  }],\n  tag: [{\n    id: 1,\n    name: 'frontend'\n  }, {\n    id: 2,\n    name: 'backend'\n  }, {\n    id: 3,\n    name: 'API'\n  }, {\n    id: 4,\n    name: 'issue'\n  }, {\n    id: 5,\n    name: 'mobile'\n  }]\n};\nMock.onGet('/api/todo/all').reply(function (config) {\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onGet('/api/todo/tag').reply(function (config) {\n  var response = TodoDB.tag;\n  return [200, response];\n});\nMock.onGet('/api/todo').reply(function (config) {\n  var id = parseInt(config.data);\n  var response = TodoDB.todo.find(function (todo) {\n    return todo.id === id;\n  });\n  return [200, response];\n});\nMock.onPost('/api/todo/reorder').reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      todoList = _JSON$parse.todoList;\n\n  TodoDB.todo = _toConsumableArray(todoList);\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost('/api/todo/add').reply(function (config) {\n  var _JSON$parse2 = JSON.parse(config.data),\n      todo = _JSON$parse2.todo;\n\n  TodoDB.todo.push(_objectSpread({}, todo));\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost('/api/todo/tag/add').reply(function (config) {\n  var _JSON$parse3 = JSON.parse(config.data),\n      tag = _JSON$parse3.tag;\n\n  TodoDB.tag.push(_objectSpread({}, tag));\n  return [200, tag];\n});\nMock.onPost('/api/todo/update').reply(function (config) {\n  var _JSON$parse4 = JSON.parse(config.data),\n      todo = _JSON$parse4.todo;\n\n  TodoDB.todo.map(function (t, index) {\n    if (t.id === todo.id) {\n      TodoDB.todo[index] = _objectSpread({}, todo);\n    }\n\n    return 'dummy value';\n  });\n  return [200, todo];\n});\nMock.onPost('/api/todo/delete').reply(function (config) {\n  var _JSON$parse5 = JSON.parse(config.data),\n      todo = _JSON$parse5.todo;\n\n  _.remove(TodoDB.todo, function (t) {\n    return t.id === todo.id;\n  });\n\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost('/api/todo/tag/delete').reply(function (config) {\n  var _JSON$parse6 = JSON.parse(config.data),\n      tag = _JSON$parse6.tag;\n\n  _.remove(TodoDB.tag, function (t) {\n    return t.id === tag.id;\n  });\n\n  var response = TodoDB.tag;\n  return [200, response];\n}); // Mock.onPost(\"/api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n//   return [200, response];\n// });","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/fake-db/db/todos.js"],"names":["Mock","_","TodoDB","todo","id","title","note","important","starred","done","read","selected","startDate","Date","toISOString","dueDate","tag","name","onGet","reply","config","response","parseInt","data","find","onPost","JSON","parse","todoList","push","map","t","index","remove"],"mappings":"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","sourcesContent":["import Mock from '../mock'\nimport * as _ from 'lodash'\n\nconst TodoDB = {\n    todo: [\n        {\n            id: 1,\n            title: 'API problem',\n            note: 'API is malfunctioning. kindly fix it',\n            important: true,\n            starred: true,\n            done: false,\n            read: false,\n            selected: false,\n            startDate: new Date().toISOString(),\n            dueDate: new Date().toISOString(),\n\n            tag: [1, 2],\n        },\n        {\n            id: 2,\n            title: 'Mobile problem',\n            note: 'Mobile is malfunctioning. fix it',\n            important: false,\n            starred: false,\n            done: true,\n            read: true,\n            selected: false,\n            startDate: new Date().toISOString(),\n            dueDate: new Date().toISOString(),\n\n            tag: [2],\n        },\n        {\n            id: 3,\n            title: 'API problem',\n            note: 'API is malfunctioning. fix it',\n            important: false,\n            starred: false,\n            done: true,\n            read: false,\n            selected: false,\n            startDate: new Date().toISOString(),\n            dueDate: new Date().toISOString(),\n\n            tag: [1],\n        },\n        {\n            id: 4,\n            title: 'API problem',\n            note: 'API is malfunctioning. fix it',\n            important: false,\n            starred: false,\n            done: false,\n            read: true,\n            selected: false,\n            startDate: new Date().toISOString(),\n            dueDate: new Date().toISOString(),\n\n            tag: [1, 2, 3],\n        },\n        {\n            id: 5,\n            title: 'API problem',\n            note: 'API is malfunctioning. fix it',\n            important: false,\n            starred: false,\n            done: true,\n            read: false,\n            selected: false,\n            startDate: new Date().toISOString(),\n            dueDate: new Date().toISOString(),\n\n            tag: [1],\n        },\n    ],\n\n    tag: [\n        {\n            id: 1,\n            name: 'frontend',\n        },\n        {\n            id: 2,\n            name: 'backend',\n        },\n        {\n            id: 3,\n            name: 'API',\n        },\n        {\n            id: 4,\n            name: 'issue',\n        },\n        {\n            id: 5,\n            name: 'mobile',\n        },\n    ],\n}\n\nMock.onGet('/api/todo/all').reply((config) => {\n    const response = TodoDB.todo\n    return [200, response]\n})\n\nMock.onGet('/api/todo/tag').reply((config) => {\n    const response = TodoDB.tag\n    return [200, response]\n})\n\nMock.onGet('/api/todo').reply((config) => {\n    const id = parseInt(config.data)\n\n    const response = TodoDB.todo.find((todo) => todo.id === id)\n    return [200, response]\n})\n\nMock.onPost('/api/todo/reorder').reply((config) => {\n    let { todoList } = JSON.parse(config.data)\n\n    TodoDB.todo = [...todoList]\n    let response = TodoDB.todo\n    return [200, response]\n})\n\nMock.onPost('/api/todo/add').reply((config) => {\n    let { todo } = JSON.parse(config.data)\n    TodoDB.todo.push({ ...todo })\n    let response = TodoDB.todo\n    return [200, response]\n})\n\nMock.onPost('/api/todo/tag/add').reply((config) => {\n    let { tag } = JSON.parse(config.data)\n    TodoDB.tag.push({ ...tag })\n    return [200, tag]\n})\n\nMock.onPost('/api/todo/update').reply((config) => {\n    let { todo } = JSON.parse(config.data)\n\n    TodoDB.todo.map((t, index) => {\n        if (t.id === todo.id) {\n            TodoDB.todo[index] = { ...todo }\n        }\n        return 'dummy value'\n    })\n\n    return [200, todo]\n})\n\nMock.onPost('/api/todo/delete').reply((config) => {\n    let { todo } = JSON.parse(config.data)\n    _.remove(TodoDB.todo, (t) => t.id === todo.id)\n    let response = TodoDB.todo\n    return [200, response]\n})\n\nMock.onPost('/api/todo/tag/delete').reply((config) => {\n    let { tag } = JSON.parse(config.data)\n    _.remove(TodoDB.tag, (t) => t.id === tag.id)\n    let response = TodoDB.tag\n    return [200, response]\n})\n\n// Mock.onPost(\"/api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n\n//   return [200, response];\n// });\n"]},"metadata":{},"sourceType":"module"}