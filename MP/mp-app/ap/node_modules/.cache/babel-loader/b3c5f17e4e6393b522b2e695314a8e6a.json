{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var orient = itemModel.get('orient');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center' || labelPosition === 'insideLeft' || labelPosition === 'insideRight';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      if (labelPosition === 'insideLeft') {\n        textX = (points[0][0] + points[3][0]) / 2 + 5;\n        textY = (points[0][1] + points[3][1]) / 2;\n        textAlign = 'left';\n      } else if (labelPosition === 'insideRight') {\n        textX = (points[1][0] + points[2][0]) / 2 - 5;\n        textY = (points[1][1] + points[2][1]) / 2;\n        textAlign = 'right';\n      } else {\n        textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n        textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n        textAlign = 'center';\n      }\n\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else if (labelPosition === 'right') {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      } else if (labelPosition === 'top') {\n        // Top side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        y2 = y1 - labelLineLen;\n        textY = y2 - 5;\n        textAlign = 'center';\n      } else if (labelPosition === 'bottom') {\n        // Bottom side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        y2 = y1 + labelLineLen;\n        textY = y2 + 5;\n        textAlign = 'center';\n      } else if (labelPosition === 'rightTop') {\n        // RightTop side\n        x1 = orient === 'horizontal' ? points[3][0] : points[1][0];\n        y1 = orient === 'horizontal' ? points[3][1] : points[1][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 - labelLineLen;\n          textY = y2 - 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'top';\n        }\n      } else if (labelPosition === 'rightBottom') {\n        // RightBottom side\n        x1 = points[2][0];\n        y1 = points[2][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'bottom';\n        }\n      } else if (labelPosition === 'leftTop') {\n        // LeftTop side\n        x1 = points[0][0];\n        y1 = orient === 'horizontal' ? points[0][1] : points[1][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 - labelLineLen;\n          textY = y2 - 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 - labelLineLen;\n          textX = x2 - 5;\n          textAlign = 'right';\n        }\n      } else if (labelPosition === 'leftBottom') {\n        // LeftBottom side\n        x1 = orient === 'horizontal' ? points[1][0] : points[3][0];\n        y1 = orient === 'horizontal' ? points[1][1] : points[2][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 - labelLineLen;\n          textX = x2 - 5;\n          textAlign = 'right';\n        }\n      } else {\n        // Right side or Bottom side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'left';\n        }\n      }\n\n      if (orient === 'horizontal') {\n        x2 = x1;\n        textX = x2;\n      } else {\n        y2 = y1;\n        textY = y2;\n      }\n\n      linePoints = [[x1, y1], [x2, y2]];\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var orient = seriesModel.get('orient');\n    var viewWidth = viewRect.width;\n    var viewHeight = viewRect.height;\n    var x = viewRect.x;\n    var y = viewRect.y;\n    var sizeExtent = orient === 'horizontal' ? [parsePercent(seriesModel.get('minSize'), viewHeight), parsePercent(seriesModel.get('maxSize'), viewHeight)] : [parsePercent(seriesModel.get('minSize'), viewWidth), parsePercent(seriesModel.get('maxSize'), viewWidth)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var viewSize = orient === 'horizontal' ? viewWidth : viewHeight;\n    var itemSize = (viewSize - gap * (data.count() - 1)) / data.count();\n\n    var getLinePoints = function getLinePoints(idx, offset) {\n      // End point index is data.count() and we assign it 0\n      if (orient === 'horizontal') {\n        var val = data.get(valueDim, idx) || 0;\n        var itemHeight = linearMap(val, [min, max], sizeExtent, true);\n        var y0;\n\n        switch (funnelAlign) {\n          case 'top':\n            y0 = y;\n            break;\n\n          case 'center':\n            y0 = y + (viewHeight - itemHeight) / 2;\n            break;\n\n          case 'bottom':\n            y0 = y + (viewHeight - itemHeight);\n            break;\n        }\n\n        return [[offset, y0], [offset, y0 + itemHeight]];\n      }\n\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = x;\n          break;\n\n        case 'center':\n          x0 = x + (viewWidth - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = x + viewWidth - itemWidth;\n          break;\n      }\n\n      return [[x0, offset], [x0 + itemWidth, offset]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemSize = -itemSize;\n      gap = -gap;\n\n      if (orient === 'horizontal') {\n        x += viewWidth;\n      } else {\n        y += viewHeight;\n      }\n\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n\n      if (orient === 'horizontal') {\n        var width = itemModel.get('itemStyle.width');\n\n        if (width == null) {\n          width = itemSize;\n        } else {\n          width = parsePercent(width, viewWidth);\n\n          if (sort === 'ascending') {\n            width = -width;\n          }\n        }\n\n        var start = getLinePoints(idx, x);\n        var end = getLinePoints(nextIdx, x + width);\n        x += width + gap;\n        data.setItemLayout(idx, {\n          points: start.concat(end.slice().reverse())\n        });\n      } else {\n        var height = itemModel.get('itemStyle.height');\n\n        if (height == null) {\n          height = itemSize;\n        } else {\n          height = parsePercent(height, viewHeight);\n\n          if (sort === 'ascending') {\n            height = -height;\n          }\n        }\n\n        var start = orient === 'horizontal' ? getLinePoints(idx, x) : getLinePoints(idx, y);\n        var end = orient === 'horizontal' ? getLinePoints(nextIdx, x + width) : getLinePoints(nextIdx, y + height);\n        y += height + gap;\n        data.setItemLayout(idx, {\n          points: start.concat(end.slice().reverse())\n        });\n      }\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/funnel/funnelLayout.js"],"names":["_config","require","__DEV__","layout","_number","parsePercent","linearMap","getViewRect","seriesModel","api","getLayoutRect","getBoxLayoutParams","width","getWidth","height","getHeight","getSortedIndices","data","sort","valueDim","mapDimension","valueArr","mapArray","val","indices","isAscending","i","len","count","a","b","labelLayout","each","idx","itemModel","getItemModel","labelModel","getModel","labelPosition","get","orient","labelLineModel","getItemLayout","points","isLabelInside","textAlign","textX","textY","linePoints","x1","y1","x2","y2","labelLineLen","label","x","y","verticalAlign","inside","_default","ecModel","payload","eachSeriesByType","getData","viewRect","viewWidth","viewHeight","sizeExtent","dataExtent","getDataExtent","min","max","Math","funnelAlign","gap","viewSize","itemSize","getLinePoints","offset","itemHeight","y0","itemWidth","x0","reverse","length","nextIdx","start","end","setItemLayout","concat","slice","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueDim = data.mapDimension('value');\n  var valueArr = data.mapArray(valueDim, function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label');\n    var labelPosition = labelModel.get('position');\n    var orient = itemModel.get('orient');\n    var labelLineModel = itemModel.getModel('labelLine');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center' || labelPosition === 'insideLeft' || labelPosition === 'insideRight';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      if (labelPosition === 'insideLeft') {\n        textX = (points[0][0] + points[3][0]) / 2 + 5;\n        textY = (points[0][1] + points[3][1]) / 2;\n        textAlign = 'left';\n      } else if (labelPosition === 'insideRight') {\n        textX = (points[1][0] + points[2][0]) / 2 - 5;\n        textY = (points[1][1] + points[2][1]) / 2;\n        textAlign = 'right';\n      } else {\n        textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n        textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n        textAlign = 'center';\n      }\n\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else if (labelPosition === 'right') {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      } else if (labelPosition === 'top') {\n        // Top side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        y2 = y1 - labelLineLen;\n        textY = y2 - 5;\n        textAlign = 'center';\n      } else if (labelPosition === 'bottom') {\n        // Bottom side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        y2 = y1 + labelLineLen;\n        textY = y2 + 5;\n        textAlign = 'center';\n      } else if (labelPosition === 'rightTop') {\n        // RightTop side\n        x1 = orient === 'horizontal' ? points[3][0] : points[1][0];\n        y1 = orient === 'horizontal' ? points[3][1] : points[1][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 - labelLineLen;\n          textY = y2 - 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'top';\n        }\n      } else if (labelPosition === 'rightBottom') {\n        // RightBottom side\n        x1 = points[2][0];\n        y1 = points[2][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'bottom';\n        }\n      } else if (labelPosition === 'leftTop') {\n        // LeftTop side\n        x1 = points[0][0];\n        y1 = orient === 'horizontal' ? points[0][1] : points[1][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 - labelLineLen;\n          textY = y2 - 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 - labelLineLen;\n          textX = x2 - 5;\n          textAlign = 'right';\n        }\n      } else if (labelPosition === 'leftBottom') {\n        // LeftBottom side\n        x1 = orient === 'horizontal' ? points[1][0] : points[3][0];\n        y1 = orient === 'horizontal' ? points[1][1] : points[2][1];\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 - labelLineLen;\n          textX = x2 - 5;\n          textAlign = 'right';\n        }\n      } else {\n        // Right side or Bottom side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n\n        if (orient === 'horizontal') {\n          y2 = y1 + labelLineLen;\n          textY = y2 + 5;\n          textAlign = 'center';\n        } else {\n          x2 = x1 + labelLineLen;\n          textX = x2 + 5;\n          textAlign = 'left';\n        }\n      }\n\n      if (orient === 'horizontal') {\n        x2 = x1;\n        textX = x2;\n      } else {\n        y2 = y1;\n        textY = y2;\n      }\n\n      linePoints = [[x1, y1], [x2, y2]];\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var orient = seriesModel.get('orient');\n    var viewWidth = viewRect.width;\n    var viewHeight = viewRect.height;\n    var x = viewRect.x;\n    var y = viewRect.y;\n    var sizeExtent = orient === 'horizontal' ? [parsePercent(seriesModel.get('minSize'), viewHeight), parsePercent(seriesModel.get('maxSize'), viewHeight)] : [parsePercent(seriesModel.get('minSize'), viewWidth), parsePercent(seriesModel.get('maxSize'), viewWidth)];\n    var dataExtent = data.getDataExtent(valueDim);\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var viewSize = orient === 'horizontal' ? viewWidth : viewHeight;\n    var itemSize = (viewSize - gap * (data.count() - 1)) / data.count();\n\n    var getLinePoints = function (idx, offset) {\n      // End point index is data.count() and we assign it 0\n      if (orient === 'horizontal') {\n        var val = data.get(valueDim, idx) || 0;\n        var itemHeight = linearMap(val, [min, max], sizeExtent, true);\n        var y0;\n\n        switch (funnelAlign) {\n          case 'top':\n            y0 = y;\n            break;\n\n          case 'center':\n            y0 = y + (viewHeight - itemHeight) / 2;\n            break;\n\n          case 'bottom':\n            y0 = y + (viewHeight - itemHeight);\n            break;\n        }\n\n        return [[offset, y0], [offset, y0 + itemHeight]];\n      }\n\n      var val = data.get(valueDim, idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = x;\n          break;\n\n        case 'center':\n          x0 = x + (viewWidth - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = x + viewWidth - itemWidth;\n          break;\n      }\n\n      return [[x0, offset], [x0 + itemWidth, offset]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemSize = -itemSize;\n      gap = -gap;\n\n      if (orient === 'horizontal') {\n        x += viewWidth;\n      } else {\n        y += viewHeight;\n      }\n\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var itemModel = data.getItemModel(idx);\n\n      if (orient === 'horizontal') {\n        var width = itemModel.get('itemStyle.width');\n\n        if (width == null) {\n          width = itemSize;\n        } else {\n          width = parsePercent(width, viewWidth);\n\n          if (sort === 'ascending') {\n            width = -width;\n          }\n        }\n\n        var start = getLinePoints(idx, x);\n        var end = getLinePoints(nextIdx, x + width);\n        x += width + gap;\n        data.setItemLayout(idx, {\n          points: start.concat(end.slice().reverse())\n        });\n      } else {\n        var height = itemModel.get('itemStyle.height');\n\n        if (height == null) {\n          height = itemSize;\n        } else {\n          height = parsePercent(height, viewHeight);\n\n          if (sort === 'ascending') {\n            height = -height;\n          }\n        }\n\n        var start = orient === 'horizontal' ? getLinePoints(idx, x) : getLinePoints(idx, y);\n        var end = orient === 'horizontal' ? getLinePoints(nextIdx, x + width) : getLinePoints(nextIdx, y + height);\n        y += height + gap;\n        data.setItemLayout(idx, {\n          points: start.concat(end.slice().reverse())\n        });\n      }\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}