{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function init() {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function dispose() {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/parallel/ParallelView.js"],"names":["graphic","require","ChartView","DEFAULT_SMOOTH","ParallelView","extend","type","init","_dataGroup","Group","group","add","_data","_initialized","render","seriesModel","ecModel","api","payload","dataGroup","data","getData","oldData","coordSys","coordinateSystem","dimensions","seriesScope","makeSeriesScope","diff","update","remove","execute","newDataIndex","line","addEl","updateElCommon","oldDataIndex","getItemGraphicEl","points","createLinePoints","setItemGraphicEl","animationModel","animation","updateProps","shape","clipPath","createGridClipShape","setTimeout","removeClipPath","setClipPath","incrementalPrepareRender","removeAll","incrementalRender","taskParams","dataIndex","start","end","incremental","dispose","cb","parallelModel","model","rect","getRect","rectEl","Rect","x","y","width","height","dim","get","setShape","initProps","i","length","dimName","value","mapDimension","isEmptyValue","getAxis","push","dataToPoint","Polyline","silent","z2","smooth","lineStyle","getModel","getLineStyle","el","hasItemOption","lineStyleModel","getItemModel","useStyle","elStyle","style","fill","stroke","getItemVisual","opacity","val","axisType","isNaN","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function () {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}