{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar clazzUtil = require(\"../util/clazz\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\n\n\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/scale/Scale.js"],"names":["clazzUtil","require","Scale","setting","_setting","_extent","Infinity","_interval","init","apply","arguments","prototype","parse","val","getSetting","name","contain","extent","normalize","scale","unionExtent","other","unionExtentFromData","data","dim","getApproximateExtent","getExtent","slice","setExtent","start","end","thisExtent","isNaN","isBlank","_isBlank","setBlank","getLabel","enableClassExtend","enableClassManagement","registerWhenExtend","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar clazzUtil = require(\"../util/clazz\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}