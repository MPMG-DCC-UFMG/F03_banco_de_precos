{"ast":null,"code":"import _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/AppProgress.jsx\";\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinearProgress, CircularProgress } from '@material-ui/core';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    progress: {\n      margin: theme.spacing(2)\n    }\n  };\n});\n\nvar AppProgress = function AppProgress() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      completed = _React$useState2[0],\n      setCompleted = _React$useState2[1];\n\n  React.useEffect(function () {\n    function progress() {\n      setCompleted(function (oldCompleted) {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n\n        var diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    var timer = setInterval(progress, 500);\n    return function () {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"m-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-sm-30\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    routeSegments: [{\n      name: 'Material',\n      path: '/material'\n    }, {\n      name: 'Prgress'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Circuar Progress (Indeterminate)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    className: classes.progress,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Circuar Progress (static)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 25,\n    className: classes.progress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 50,\n    className: classes.progress,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CircularProgress, {\n    variant: \"static\",\n    value: 75,\n    className: classes.progress,\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Linear Progress (Indeterminate)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SimpleCard, {\n    title: \"Linear Progress (Determinate)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"determinate\",\n    value: completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(LinearProgress, {\n    color: \"secondary\",\n    variant: \"determinate\",\n    value: completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default AppProgress;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/AppProgress.jsx"],"names":["React","makeStyles","LinearProgress","CircularProgress","Breadcrumb","SimpleCard","useStyles","theme","root","flexGrow","progress","margin","spacing","AppProgress","classes","useState","completed","setCompleted","useEffect","oldCompleted","diff","Math","random","min","timer","setInterval","clearInterval","name","path"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { LinearProgress, CircularProgress } from '@material-ui/core'\nimport { Breadcrumb, SimpleCard } from 'app/components'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    progress: {\n        margin: theme.spacing(2),\n    },\n}))\n\nconst AppProgress = () => {\n    const classes = useStyles()\n    const [completed, setCompleted] = React.useState(0)\n\n    React.useEffect(() => {\n        function progress() {\n            setCompleted((oldCompleted) => {\n                if (oldCompleted === 100) {\n                    return 0\n                }\n                const diff = Math.random() * 10\n                return Math.min(oldCompleted + diff, 100)\n            })\n        }\n\n        const timer = setInterval(progress, 500)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [])\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Prgress' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"Circuar Progress (Indeterminate)\">\n                <CircularProgress className={classes.progress} />\n                <CircularProgress\n                    className={classes.progress}\n                    color=\"secondary\"\n                />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"Circuar Progress (static)\">\n                <CircularProgress\n                    variant=\"static\"\n                    value={25}\n                    className={classes.progress}\n                />\n                <CircularProgress\n                    variant=\"static\"\n                    value={50}\n                    className={classes.progress}\n                    color=\"secondary\"\n                />\n                <CircularProgress\n                    variant=\"static\"\n                    value={75}\n                    className={classes.progress}\n                    color=\"secondary\"\n                />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"Linear Progress (Indeterminate)\">\n                <LinearProgress />\n                <br />\n                <LinearProgress color=\"secondary\" />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"Linear Progress (Determinate)\">\n                <LinearProgress variant=\"determinate\" value={completed} />\n                <br />\n                <LinearProgress\n                    color=\"secondary\"\n                    variant=\"determinate\"\n                    value={completed}\n                />\n            </SimpleCard>\n        </div>\n    )\n}\nexport default AppProgress\n"]},"metadata":{},"sourceType":"module"}