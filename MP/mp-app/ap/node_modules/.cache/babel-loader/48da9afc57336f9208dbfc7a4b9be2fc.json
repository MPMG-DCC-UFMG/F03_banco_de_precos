{"ast":null,"code":"import _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/components/MatxCustomizer/MatxCustomizer.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { Fragment, useState } from 'react';\nimport { Icon, IconButton, Button // FormGroup,\n// Switch,\n// FormControlLabel,\n// FormControl,\n// FormLabel,\n, Card, Tooltip, Drawer, Link } from '@material-ui/core';\nimport Scrollbar from 'react-perfect-scrollbar'; // import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\n\nimport BadgeSelected from './BadgeSelected'; // import { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport useSettings from 'app/hooks/useSettings';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    label: {\n      color: palette.secondary.main,\n      backgroundColor: palette.primary.dark,\n      fontWeight: 700,\n      transform: 'rotate(90deg)',\n      marginBottom: '2.5rem',\n      padding: '.25rem .5rem',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      letterSpacing: '1.5px',\n      fontSize: '1rem',\n      '&:hover, &.open': {\n        backgroundColor: palette.secondary.main,\n        color: palette.secondary.contrastText\n      }\n    },\n    helpText: {\n      margin: '0px .5rem 1rem'\n    },\n    maxCustomizer: {\n      position: 'fixed',\n      top: 0,\n      right: 0,\n      zIndex: 50\n    },\n    customizerCloseButton: {\n      position: 'absolute',\n      right: 8,\n      top: 8\n    },\n    layoutBox: {\n      '&:hover': {\n        '& .layout-name': {\n          position: 'absolute',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '100%',\n          width: '100%',\n          background: 'rgba(0,0,0,0.3)',\n          zIndex: 12\n        }\n      }\n    }\n  };\n});\n\nvar MatxCustomizer = function MatxCustomizer(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tabIndex = _useState4[0],\n      setTabIndex = _useState4[1];\n\n  var classes = useStyles();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings; // const handleChange = (name, value) => {\n  //   let updatedSettings = set(settings, name, value);\n  //   updateSettings(updatedSettings);\n  // };\n  // const handleControlChange = (name) => (event) => {\n  //   let controlValue =\n  //     event.target.type === \"checkbox\"\n  //       ? event.target.checked\n  //       : event.target.value;\n  //   handleChange(name, controlValue);\n  // };\n\n\n  var tooglePanel = function tooglePanel() {\n    setOpen(!open);\n  };\n\n  var handleTabChange = function handleTabChange(index) {\n    setTabIndex(index);\n  };\n\n  var activeTheme = _objectSpread({}, settings.themes[settings.activeTheme]);\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: activeTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: 'right',\n    open: open,\n    variant: \"temporary\",\n    onClose: tooglePanel,\n    ModalProps: {\n      keepMounted: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default', classes.maxCustomizer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    className: \"px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, tabIndex === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-8 mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"Layouts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, demoLayouts.map(function (layout) {\n    return /*#__PURE__*/React.createElement(BadgeSelected, {\n      color: \"secondary\",\n      className: clsx('w-full my-3 max-h-152 cursor-pointer', classes.layoutBox),\n      badgeContent: 'Pro',\n      invisible: !layout.isPro,\n      key: layout.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"relative\",\n      onClick: function onClick() {\n        return updateSettings(layout.options);\n      },\n      elevation: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"layout-name hidden\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 57\n      }\n    }, layout.name)), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"w-full\",\n      src: layout.thumbnail,\n      alt: layout.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 53\n      }\n    })));\n  }))))))));\n};\n\nvar demoLayouts = [{\n  name: 'Light Sidebar',\n  thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'whiteBlue',\n        bgOpacity: 0.98\n      },\n      topbar: {\n        theme: 'blueDark',\n        fixed: true\n      }\n    },\n    footer: {\n      theme: 'slateark1'\n    }\n  }\n}, {\n  name: 'Compact Sidebar',\n  thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'compact',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'whiteBlue',\n        fixed: true\n      }\n    }\n  }\n}, {\n  name: 'Dark Sidebar',\n  thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n  isPro: false,\n  options: {\n    activeLayout: 'layout1',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'blueDark',\n        fixed: true\n      }\n    }\n  }\n}, {\n  name: 'Dark Theme',\n  thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n  isPro: true,\n  options: {\n    activeLayout: 'layout2',\n    activeTheme: 'blue',\n    layout1Settings: {\n      leftSidebar: {\n        mode: 'full',\n        theme: 'slateDark1',\n        bgOpacity: 0.92\n      },\n      topbar: {\n        theme: 'purpleDark1',\n        fixed: true\n      }\n    },\n    footer: {\n      theme: 'slateDark1'\n    }\n  }\n}, {\n  name: 'Horizontal Navigation',\n  thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n  isPro: true,\n  options: {\n    activeLayout: 'layout2',\n    activeTheme: 'purple1',\n    layout2Settings: {\n      mode: 'full'\n    },\n    footer: {\n      theme: 'slateDark1'\n    }\n  }\n}];\nexport default MatxCustomizer;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/components/MatxCustomizer/MatxCustomizer.jsx"],"names":["React","Fragment","useState","Icon","IconButton","Button","Card","Tooltip","Drawer","Link","Scrollbar","BadgeSelected","makeStyles","ThemeProvider","clsx","useSettings","useStyles","palette","theme","label","color","secondary","main","backgroundColor","primary","dark","fontWeight","transform","marginBottom","padding","borderRadius","cursor","letterSpacing","fontSize","contrastText","helpText","margin","maxCustomizer","position","top","right","zIndex","customizerCloseButton","layoutBox","display","justifyContent","alignItems","height","width","background","MatxCustomizer","props","open","setOpen","tabIndex","setTabIndex","classes","settings","updateSettings","tooglePanel","handleTabChange","index","activeTheme","themes","keepMounted","suppressScrollX","demoLayouts","map","layout","isPro","name","options","thumbnail","activeLayout","layout1Settings","leftSidebar","mode","bgOpacity","topbar","fixed","footer","layout2Settings"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport {\n    Icon,\n    IconButton,\n    Button,\n    // FormGroup,\n    // Switch,\n    // FormControlLabel,\n    // FormControl,\n    // FormLabel,\n    Card,\n    Tooltip,\n    Drawer,\n    Link,\n} from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\n// import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from './BadgeSelected'\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    label: {\n        color: palette.secondary.main,\n        backgroundColor: palette.primary.dark,\n        fontWeight: 700,\n        transform: 'rotate(90deg)',\n        marginBottom: '2.5rem',\n        padding: '.25rem .5rem',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        letterSpacing: '1.5px',\n        fontSize: '1rem',\n        '&:hover, &.open': {\n            backgroundColor: palette.secondary.main,\n            color: palette.secondary.contrastText,\n        },\n    },\n    helpText: {\n        margin: '0px .5rem 1rem',\n    },\n    maxCustomizer: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        zIndex: 50,\n    },\n    customizerCloseButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    layoutBox: {\n        '&:hover': {\n            '& .layout-name': {\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                width: '100%',\n                background: 'rgba(0,0,0,0.3)',\n                zIndex: 12,\n            },\n        },\n    },\n}))\n\nconst MatxCustomizer = (props) => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    // const handleChange = (name, value) => {\n    //   let updatedSettings = set(settings, name, value);\n\n    //   updateSettings(updatedSettings);\n    // };\n\n    // const handleControlChange = (name) => (event) => {\n    //   let controlValue =\n    //     event.target.type === \"checkbox\"\n    //       ? event.target.checked\n    //       : event.target.value;\n    //   handleChange(name, controlValue);\n    // };\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n           \n\n            {/* {open && ( */}\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx(\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\n                            classes.maxCustomizer\n                        )}\n                    >\n                       \n                        \n\n                        <Scrollbar\n                            options={{ suppressScrollX: true }}\n                            className=\"px-4\"\n                        >\n                            {tabIndex === 0 && (\n                                <div className=\"mb-8 mx-2\">\n                                    <div className=\"text-muted\">Layouts</div>\n\n                                    <div className=\"flex-column\">\n                                        {demoLayouts.map((layout) => (\n                                            <BadgeSelected\n                                                color=\"secondary\"\n                                                className={clsx(\n                                                    'w-full my-3 max-h-152 cursor-pointer',\n                                                    classes.layoutBox\n                                                )}\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    className=\"relative\"\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <div className=\"layout-name hidden\">\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </div>\n\n                                                    <img\n                                                        className=\"w-full\"\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </BadgeSelected>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* END LAYOUT */}\n\n                           \n                        </Scrollbar>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n            {/* )} */}\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Theme',\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'purpleDark1',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Horizontal Navigation',\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'purple1',\n            layout2Settings: {\n                mode: 'full',\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n"]},"metadata":{},"sourceType":"module"}