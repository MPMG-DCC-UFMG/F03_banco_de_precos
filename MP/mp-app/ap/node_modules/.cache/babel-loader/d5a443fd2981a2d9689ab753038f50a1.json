{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/component/geo.js"],"names":["echarts","require","zrUtil","makeAction","method","actionInfo","update","registerAction","payload","ecModel","selected","eachComponent","mainType","query","geoModel","name","geo","coordinateSystem","each","regions","region","isSelected","type","event"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,uBAAD,CAApB;;AAEAA,OAAO,CAAC,uBAAD,CAAP;;AAEAA,OAAO,CAAC,yBAAD,CAAP;;AAEAA,OAAO,CAAC,eAAD,CAAP;;AAEAA,OAAO,CAAC,mBAAD,CAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,CAAoBC,MAApB,EAA4BC,UAA5B,EAAwC;AACtCA,EAAAA,UAAU,CAACC,MAAX,GAAoB,YAApB;AACAN,EAAAA,OAAO,CAACO,cAAR,CAAuBF,UAAvB,EAAmC,UAAUG,OAAV,EAAmBC,OAAnB,EAA4B;AAC7D,QAAIC,QAAQ,GAAG,EAAf;AACAD,IAAAA,OAAO,CAACE,aAAR,CAAsB;AACpBC,MAAAA,QAAQ,EAAE,KADU;AAEpBC,MAAAA,KAAK,EAAEL;AAFa,KAAtB,EAGG,UAAUM,QAAV,EAAoB;AACrBA,MAAAA,QAAQ,CAACV,MAAD,CAAR,CAAiBI,OAAO,CAACO,IAAzB;AACA,UAAIC,GAAG,GAAGF,QAAQ,CAACG,gBAAnB;AACAf,MAAAA,MAAM,CAACgB,IAAP,CAAYF,GAAG,CAACG,OAAhB,EAAyB,UAAUC,MAAV,EAAkB;AACzCV,QAAAA,QAAQ,CAACU,MAAM,CAACL,IAAR,CAAR,GAAwBD,QAAQ,CAACO,UAAT,CAAoBD,MAAM,CAACL,IAA3B,KAAoC,KAA5D;AACD,OAFD;AAGD,KATD;AAUA,WAAO;AACLL,MAAAA,QAAQ,EAAEA,QADL;AAELK,MAAAA,IAAI,EAAEP,OAAO,CAACO;AAFT,KAAP;AAID,GAhBD;AAiBD;;AAEDZ,UAAU,CAAC,gBAAD,EAAmB;AAC3BmB,EAAAA,IAAI,EAAE,iBADqB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAAnB,CAAV;AAIApB,UAAU,CAAC,QAAD,EAAW;AACnBmB,EAAAA,IAAI,EAAE,WADa;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAAX,CAAV;AAIApB,UAAU,CAAC,UAAD,EAAa;AACrBmB,EAAAA,IAAI,EAAE,aADe;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAb,CAAV","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});"]},"metadata":{},"sourceType":"script"}