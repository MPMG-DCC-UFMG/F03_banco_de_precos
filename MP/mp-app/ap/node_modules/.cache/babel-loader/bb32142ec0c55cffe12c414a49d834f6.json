{"ast":null,"code":"// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this); // `mosuemove` and `mouseup` can be continue to fire when dragging.\n  // See [Drag outside] in `Handler.js`. So we do not need to trigger\n  // `_dragEnd` when globalout. That would brings better user experience.\n  // this.on('globalout', this._dragEnd, this);\n  // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function _dragStart(e) {\n    var draggingTarget = e.target; // Find if there is draggable in the ancestor\n\n    while (draggingTarget && !draggingTarget.draggable) {\n      draggingTarget = draggingTarget.parent;\n    }\n\n    if (draggingTarget) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function _drag(e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function _dragEnd(e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/mixin/Draggable.js"],"names":["Draggable","on","_dragStart","_drag","_dragEnd","prototype","constructor","e","draggingTarget","target","draggable","parent","_draggingTarget","dragging","_x","offsetX","_y","offsetY","dispatchToElement","param","event","x","y","dx","dy","drift","dropTarget","findHover","lastDropTarget","_dropTarget","topTarget","_default","module","exports"],"mappings":"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","sourcesContent":["// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this); // `mosuemove` and `mouseup` can be continue to fire when dragging.\n  // See [Drag outside] in `Handler.js`. So we do not need to trigger\n  // `_dragEnd` when globalout. That would brings better user experience.\n  // this.on('globalout', this._dragEnd, this);\n  // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target; // Find if there is draggable in the ancestor\n\n    while (draggingTarget && !draggingTarget.draggable) {\n      draggingTarget = draggingTarget.parent;\n    }\n\n    if (draggingTarget) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}