{"ast":null,"code":"import _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/components/MatxLayout/Layout1/Layout1.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { useMediaQuery } from '@material-ui/core';\nimport Scrollbar from 'react-perfect-scrollbar';\nimport { renderRoutes } from 'react-router-config';\nimport Layout1Topbar from './Layout1Topbar';\nimport Layout1Sidenav from './Layout1Sidenav';\nimport Footer from '../../Footer/Footer';\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar';\nimport AppContext from 'app/contexts/AppContext';\nimport { MatxSuspense } from 'app/components';\nimport { useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useSettings from 'app/hooks/useSettings';\nvar useStyles = makeStyles(function (_ref) {\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    contentWrap: function contentWrap(_ref2) {\n      var width = _ref2.width,\n          secondarySidebar = _ref2.secondarySidebar;\n      return {\n        verticalAlign: 'top',\n        marginLeft: width,\n        transition: 'all 0.3s ease',\n        // [theme.breakpoints.up(\"sm\")]: {\n        marginRight: secondarySidebar.open ? 50 : 0 // },\n\n      };\n    },\n    topbar: {\n      top: 0,\n      zIndex: 96,\n      background: 'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n      transition: 'all 0.3s ease'\n    }\n  };\n});\n\nvar Layout1 = function Layout1() {\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings;\n\n  var layout1Settings = settings.layout1Settings,\n      secondarySidebar = settings.secondarySidebar;\n  var _layout1Settings$left = layout1Settings.leftSidebar,\n      sidenavMode = _layout1Settings$left.mode,\n      showSidenav = _layout1Settings$left.show;\n\n  var _useContext = useContext(AppContext),\n      routes = _useContext.routes;\n\n  var getSidenavWidth = function getSidenavWidth() {\n    switch (sidenavMode) {\n      case 'full':\n        return 'var(--sidenav-width)';\n\n      case 'compact':\n      default:\n        return '0px';\n    }\n  };\n\n  var sidenavWidth = getSidenavWidth();\n  var classes = useStyles({\n    width: sidenavWidth,\n    secondarySidebar: secondarySidebar\n  });\n  var theme = useTheme();\n  var isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\n  var ref = useRef({\n    isMdScreen: isMdScreen,\n    settings: settings\n  });\n  var topbarTheme = settings.themes[layout1Settings.topbar.theme];\n  var layoutClasses = \"theme-\".concat(theme.palette.type, \" flex\");\n  useEffect(function () {\n    var settings = ref.current.settings;\n    var sidebarMode = settings.layout1Settings.leftSidebar.mode;\n\n    if (settings.layout1Settings.leftSidebar.show) {\n      var mode = isMdScreen ? 'close' : sidebarMode;\n      updateSettings({\n        layout1Settings: {\n          leftSidebar: {\n            mode: mode\n          }\n        }\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isMdScreen]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('bg-default', layoutClasses),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, showSidenav && sidenavMode !== 'close' && /*#__PURE__*/React.createElement(SidenavTheme, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx('flex-grow flex-column relative overflow-hidden h-full-screen', classes.contentWrap),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, layout1Settings.topbar.show && layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: topbarTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Layout1Topbar, {\n    fixed: true,\n    className: \"elevation-z8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  })), settings.perfectScrollbar && /*#__PURE__*/React.createElement(Scrollbar, {\n    className: \"flex-grow flex-column relative h-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: topbarTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Layout1Topbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative flex-grow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MatxSuspense, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, renderRoutes(routes))), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })), !settings.perfectScrollbar && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow flex-column relative h-full scroll-y\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: topbarTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Layout1Topbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(MatxSuspense, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, renderRoutes(routes))), settings.footer.show && !settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  })), settings.footer.show && settings.footer.fixed && /*#__PURE__*/React.createElement(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 67\n    }\n  })), settings.secondarySidebar.show && /*#__PURE__*/React.createElement(SecondarySidebar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 48\n    }\n  }));\n};\n\nexport default React.memo(Layout1);","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["React","useContext","useEffect","useRef","ThemeProvider","useMediaQuery","Scrollbar","renderRoutes","Layout1Topbar","Layout1Sidenav","Footer","SecondarySidebar","AppContext","MatxSuspense","useTheme","clsx","SidenavTheme","makeStyles","useSettings","useStyles","palette","theme","contentWrap","width","secondarySidebar","verticalAlign","marginLeft","transition","marginRight","open","topbar","top","zIndex","background","Layout1","settings","updateSettings","layout1Settings","leftSidebar","sidenavMode","mode","showSidenav","show","routes","getSidenavWidth","sidenavWidth","classes","isMdScreen","breakpoints","down","ref","topbarTheme","themes","layoutClasses","type","current","sidebarMode","fixed","perfectScrollbar","footer","memo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useMediaQuery } from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { renderRoutes } from 'react-router-config'\nimport Layout1Topbar from './Layout1Topbar'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Footer from '../../Footer/Footer'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport AppContext from 'app/contexts/AppContext'\nimport { MatxSuspense } from 'app/components'\nimport { useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    contentWrap: ({ width, secondarySidebar }) => {\n        return {\n            verticalAlign: 'top',\n            marginLeft: width,\n            transition: 'all 0.3s ease',\n            // [theme.breakpoints.up(\"sm\")]: {\n            marginRight: secondarySidebar.open ? 50 : 0,\n            // },\n        }\n    },\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n        transition: 'all 0.3s ease',\n    },\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n    const { routes } = useContext(AppContext)\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return 'var(--sidenav-width)'\n            case 'compact':\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    let classes = useStyles({ width: sidenavWidth, secondarySidebar })\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const layoutClasses = `theme-${theme.palette.type} flex`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <div className={clsx('bg-default', layoutClasses)}>\n            {/* barra lateral  */}\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                </SidenavTheme>\n            )}\n\n            <div\n                className={clsx(\n                    'flex-grow flex-column relative overflow-hidden h-full-screen',\n                    classes.contentWrap\n                )}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n\n                {settings.perfectScrollbar && (\n                    <Scrollbar className=\"flex-grow flex-column relative h-full\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"relative flex-grow\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </Scrollbar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <div className=\"flex-grow flex-column relative h-full scroll-y\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </div>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </div>\n    )\n}\n\nexport default React.memo(Layout1)\n"]},"metadata":{},"sourceType":"module"}