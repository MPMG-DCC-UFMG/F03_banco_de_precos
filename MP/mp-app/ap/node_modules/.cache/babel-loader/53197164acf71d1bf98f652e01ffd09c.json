{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/graph/edgeVisual.js"],"names":["normalize","a","Array","_default","ecModel","eachSeriesByType","seriesModel","graph","getGraph","edgeData","getEdgeData","symbolType","get","symbolSize","colorQuery","split","opacityQuery","setVisual","each","idx","itemModel","getItemModel","edge","getEdgeByIndex","getShallow","color","opacity","node1","getVisual","node2","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.color'.split('.');\n    var opacityQuery = 'lineStyle.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}