{"ast":null,"code":"import Mock from '../mock';\nvar invoiceDB = {\n  invoices: [{\n    id: 'lkfjdfjdsjdslgkfjdskjfds',\n    orderNo: '232',\n    status: 'pending',\n    date: new Date(),\n    currency: '$',\n    vat: 10,\n    buyer: {\n      name: 'Schoen, Conn and Mills',\n      address: 'rodriguez.trent@senger.com \\n 61 Johnson St. Shirley, NY 11967. \\n \\n +202-555-0170'\n    },\n    seller: {\n      name: 'UI Lib',\n      address: 'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170'\n    },\n    item: [{\n      name: 'Item 1',\n      unit: 9,\n      price: 200\n    }, {\n      name: 'Item 2',\n      unit: 15,\n      price: 300\n    }]\n  }, {\n    id: 'fkjjirewoigkjdhvkcxyhuig',\n    orderNo: '233',\n    status: 'processing',\n    date: new Date(),\n    currency: '$',\n    vat: 10,\n    buyer: {\n      name: 'New Age Inc.',\n      address: 'this is a test address \\n 7664 Rockcrest Road. Longview, TX 75604. \\n \\n +1-202-555-0153'\n    },\n    seller: {\n      name: 'UI Lib',\n      address: 'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170'\n    },\n    item: [{\n      name: 'Item 1',\n      unit: 3,\n      price: 2000\n    }, {\n      name: 'Item 2',\n      unit: 2,\n      price: 4000\n    }]\n  }, {\n    id: 'fdskjkljicuviosduisjd',\n    orderNo: '234',\n    status: 'delivered',\n    date: new Date(),\n    currency: '$',\n    vat: 10,\n    buyer: {\n      name: 'Predovic, Schowalter and Haag',\n      address: 'linwood53@price.com \\n 7178 Plumb Branch Dr. South Bend, IN 46614 \\n \\n +999 9999 9999'\n    },\n    seller: {\n      name: 'UI Lib',\n      address: 'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170'\n    },\n    item: [{\n      name: 'Item 1',\n      unit: 5,\n      price: 1000\n    }, {\n      name: 'Item 2',\n      unit: 2,\n      price: 4000\n    }]\n  }, {\n    id: 'fdskfjdsuoiucrwevbgd',\n    orderNo: '235',\n    status: 'delivered',\n    date: new Date(),\n    currency: '$',\n    vat: 10,\n    buyer: {\n      name: 'Hane PLC',\n      address: 'nader.savanna@lindgren.org \\n 858 8th St. Nanuet, NY 10954. \\n \\n +202-555-0131'\n    },\n    seller: {\n      name: 'UI Lib',\n      address: 'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170'\n    },\n    item: [{\n      name: 'Item 1',\n      unit: 3,\n      price: 4000\n    }, {\n      name: 'Item 2',\n      unit: 1,\n      price: 5000\n    }, {\n      name: 'Item 3',\n      unit: 3,\n      price: 4000\n    }, {\n      name: 'Item 4',\n      unit: 1,\n      price: 5000\n    }]\n  }]\n};\nMock.onGet('/api/invoices/all').reply(function (config) {\n  return [200, invoiceDB.invoices];\n});\nMock.onGet('/api/invoices').reply(function (config) {\n  var id = config.data;\n  var response = invoiceDB.invoices.find(function (invoice) {\n    return invoice.id === id;\n  });\n  return [200, response];\n});\nMock.onPost('/api/invoices/delete').reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  invoiceDB.invoices.forEach(function (element) {\n    if (element.id === invoice.id) {\n      return [200, invoiceDB.invoices.splice(index.i, 1)];\n    }\n\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\nMock.onPost('/api/invoices/update').reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  invoiceDB.invoices.forEach(function (element) {\n    if (element.id === invoice.id) {\n      invoiceDB.invoices[index.i] = invoice;\n      return [200, invoiceDB.invoices];\n    }\n\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\nMock.onPost('/api/invoices/add').reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  invoiceDB.invoices.push(invoice);\n  return [200, invoiceDB.invoices];\n});","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/fake-db/db/invoice.js"],"names":["Mock","invoiceDB","invoices","id","orderNo","status","date","Date","currency","vat","buyer","name","address","seller","item","unit","price","onGet","reply","config","data","response","find","invoice","onPost","JSON","parse","index","i","forEach","element","splice","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,EAAE,EAAE,0BADR;AAEIC,IAAAA,OAAO,EAAE,KAFb;AAGIC,IAAAA,MAAM,EAAE,SAHZ;AAIIC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAJV;AAKIC,IAAAA,QAAQ,EAAE,GALd;AAMIC,IAAAA,GAAG,EAAE,EANT;AAOIC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,wBADH;AAEHC,MAAAA,OAAO,EACH;AAHD,KAPX;AAYIC,IAAAA,MAAM,EAAE;AACJF,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,OAAO,EACH;AAHA,KAZZ;AAiBIE,IAAAA,IAAI,EAAE,CACF;AACIH,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KADE,EAMF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,EAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KANE;AAjBV,GADM,EA+BN;AACIb,IAAAA,EAAE,EAAE,0BADR;AAEIC,IAAAA,OAAO,EAAE,KAFb;AAGIC,IAAAA,MAAM,EAAE,YAHZ;AAIIC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAJV;AAKIC,IAAAA,QAAQ,EAAE,GALd;AAMIC,IAAAA,GAAG,EAAE,EANT;AAOIC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,cADH;AAEHC,MAAAA,OAAO,EACH;AAHD,KAPX;AAYIC,IAAAA,MAAM,EAAE;AACJF,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,OAAO,EACH;AAHA,KAZZ;AAiBIE,IAAAA,IAAI,EAAE,CACF;AACIH,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KADE,EAMF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KANE;AAjBV,GA/BM,EA6DN;AACIb,IAAAA,EAAE,EAAE,uBADR;AAEIC,IAAAA,OAAO,EAAE,KAFb;AAGIC,IAAAA,MAAM,EAAE,WAHZ;AAIIC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAJV;AAKIC,IAAAA,QAAQ,EAAE,GALd;AAMIC,IAAAA,GAAG,EAAE,EANT;AAOIC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,+BADH;AAEHC,MAAAA,OAAO,EACH;AAHD,KAPX;AAYIC,IAAAA,MAAM,EAAE;AACJF,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,OAAO,EACH;AAHA,KAZZ;AAiBIE,IAAAA,IAAI,EAAE,CACF;AACIH,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KADE,EAMF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KANE;AAjBV,GA7DM,EA2FN;AACIb,IAAAA,EAAE,EAAE,sBADR;AAEIC,IAAAA,OAAO,EAAE,KAFb;AAGIC,IAAAA,MAAM,EAAE,WAHZ;AAIIC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EAJV;AAKIC,IAAAA,QAAQ,EAAE,GALd;AAMIC,IAAAA,GAAG,EAAE,EANT;AAOIC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,UADH;AAEHC,MAAAA,OAAO,EACH;AAHD,KAPX;AAYIC,IAAAA,MAAM,EAAE;AACJF,MAAAA,IAAI,EAAE,QADF;AAEJC,MAAAA,OAAO,EACH;AAHA,KAZZ;AAiBIE,IAAAA,IAAI,EAAE,CACF;AACIH,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KADE,EAMF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KANE,EAWF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KAXE,EAgBF;AACIL,MAAAA,IAAI,EAAE,QADV;AAEII,MAAAA,IAAI,EAAE,CAFV;AAGIC,MAAAA,KAAK,EAAE;AAHX,KAhBE;AAjBV,GA3FM;AADI,CAAlB;AAuIAhB,IAAI,CAACiB,KAAL,CAAW,mBAAX,EAAgCC,KAAhC,CAAsC,UAACC,MAAD,EAAY;AAC9C,SAAO,CAAC,GAAD,EAAMlB,SAAS,CAACC,QAAhB,CAAP;AACH,CAFD;AAIAF,IAAI,CAACiB,KAAL,CAAW,eAAX,EAA4BC,KAA5B,CAAkC,UAACC,MAAD,EAAY;AAC1C,MAAMhB,EAAE,GAAGgB,MAAM,CAACC,IAAlB;AACA,MAAMC,QAAQ,GAAGpB,SAAS,CAACC,QAAV,CAAmBoB,IAAnB,CAAwB,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACpB,EAAR,KAAeA,EAA5B;AAAA,GAAxB,CAAjB;AACA,SAAO,CAAC,GAAD,EAAMkB,QAAN,CAAP;AACH,CAJD;AAMArB,IAAI,CAACwB,MAAL,CAAY,sBAAZ,EAAoCN,KAApC,CAA0C,UAACC,MAAD,EAAY;AAClD,MAAII,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,IAAlB,CAAd;AACA,MAAIO,KAAK,GAAG;AAAEC,IAAAA,CAAC,EAAE;AAAL,GAAZ;AACA3B,EAAAA,SAAS,CAACC,QAAV,CAAmB2B,OAAnB,CAA2B,UAACC,OAAD,EAAa;AACpC,QAAIA,OAAO,CAAC3B,EAAR,KAAeoB,OAAO,CAACpB,EAA3B,EAA+B;AAC3B,aAAO,CAAC,GAAD,EAAMF,SAAS,CAACC,QAAV,CAAmB6B,MAAnB,CAA0BJ,KAAK,CAACC,CAAhC,EAAmC,CAAnC,CAAN,CAAP;AACH;;AACDD,IAAAA,KAAK,CAACC,CAAN;AACH,GALD;AAMA,SAAO,CAAC,GAAD,EAAM3B,SAAS,CAACC,QAAhB,CAAP;AACH,CAVD;AAYAF,IAAI,CAACwB,MAAL,CAAY,sBAAZ,EAAoCN,KAApC,CAA0C,UAACC,MAAD,EAAY;AAClD,MAAII,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,IAAlB,CAAd;AACA,MAAIO,KAAK,GAAG;AAAEC,IAAAA,CAAC,EAAE;AAAL,GAAZ;AACA3B,EAAAA,SAAS,CAACC,QAAV,CAAmB2B,OAAnB,CAA2B,UAACC,OAAD,EAAa;AACpC,QAAIA,OAAO,CAAC3B,EAAR,KAAeoB,OAAO,CAACpB,EAA3B,EAA+B;AAC3BF,MAAAA,SAAS,CAACC,QAAV,CAAmByB,KAAK,CAACC,CAAzB,IAA8BL,OAA9B;AACA,aAAO,CAAC,GAAD,EAAMtB,SAAS,CAACC,QAAhB,CAAP;AACH;;AACDyB,IAAAA,KAAK,CAACC,CAAN;AACH,GAND;AAOA,SAAO,CAAC,GAAD,EAAM3B,SAAS,CAACC,QAAhB,CAAP;AACH,CAXD;AAaAF,IAAI,CAACwB,MAAL,CAAY,mBAAZ,EAAiCN,KAAjC,CAAuC,UAACC,MAAD,EAAY;AAC/C,MAAII,OAAO,GAAGE,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACC,IAAlB,CAAd;AACAnB,EAAAA,SAAS,CAACC,QAAV,CAAmB8B,IAAnB,CAAwBT,OAAxB;AACA,SAAO,CAAC,GAAD,EAAMtB,SAAS,CAACC,QAAhB,CAAP;AACH,CAJD","sourcesContent":["import Mock from '../mock'\n\nconst invoiceDB = {\n    invoices: [\n        {\n            id: 'lkfjdfjdsjdslgkfjdskjfds',\n            orderNo: '232',\n            status: 'pending',\n            date: new Date(),\n            currency: '$',\n            vat: 10,\n            buyer: {\n                name: 'Schoen, Conn and Mills',\n                address:\n                    'rodriguez.trent@senger.com \\n 61 Johnson St. Shirley, NY 11967. \\n \\n +202-555-0170',\n            },\n            seller: {\n                name: 'UI Lib',\n                address:\n                    'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170',\n            },\n            item: [\n                {\n                    name: 'Item 1',\n                    unit: 9,\n                    price: 200,\n                },\n                {\n                    name: 'Item 2',\n                    unit: 15,\n                    price: 300,\n                },\n            ],\n        },\n        {\n            id: 'fkjjirewoigkjdhvkcxyhuig',\n            orderNo: '233',\n            status: 'processing',\n            date: new Date(),\n            currency: '$',\n            vat: 10,\n            buyer: {\n                name: 'New Age Inc.',\n                address:\n                    'this is a test address \\n 7664 Rockcrest Road. Longview, TX 75604. \\n \\n +1-202-555-0153',\n            },\n            seller: {\n                name: 'UI Lib',\n                address:\n                    'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170',\n            },\n            item: [\n                {\n                    name: 'Item 1',\n                    unit: 3,\n                    price: 2000,\n                },\n                {\n                    name: 'Item 2',\n                    unit: 2,\n                    price: 4000,\n                },\n            ],\n        },\n        {\n            id: 'fdskjkljicuviosduisjd',\n            orderNo: '234',\n            status: 'delivered',\n            date: new Date(),\n            currency: '$',\n            vat: 10,\n            buyer: {\n                name: 'Predovic, Schowalter and Haag',\n                address:\n                    'linwood53@price.com \\n 7178 Plumb Branch Dr. South Bend, IN 46614 \\n \\n +999 9999 9999',\n            },\n            seller: {\n                name: 'UI Lib',\n                address:\n                    'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170',\n            },\n            item: [\n                {\n                    name: 'Item 1',\n                    unit: 5,\n                    price: 1000,\n                },\n                {\n                    name: 'Item 2',\n                    unit: 2,\n                    price: 4000,\n                },\n            ],\n        },\n        {\n            id: 'fdskfjdsuoiucrwevbgd',\n            orderNo: '235',\n            status: 'delivered',\n            date: new Date(),\n            currency: '$',\n            vat: 10,\n            buyer: {\n                name: 'Hane PLC',\n                address:\n                    'nader.savanna@lindgren.org \\n 858 8th St. Nanuet, NY 10954. \\n \\n +202-555-0131',\n            },\n            seller: {\n                name: 'UI Lib',\n                address:\n                    'sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170',\n            },\n            item: [\n                {\n                    name: 'Item 1',\n                    unit: 3,\n                    price: 4000,\n                },\n                {\n                    name: 'Item 2',\n                    unit: 1,\n                    price: 5000,\n                },\n                {\n                    name: 'Item 3',\n                    unit: 3,\n                    price: 4000,\n                },\n                {\n                    name: 'Item 4',\n                    unit: 1,\n                    price: 5000,\n                },\n            ],\n        },\n    ],\n}\n\nMock.onGet('/api/invoices/all').reply((config) => {\n    return [200, invoiceDB.invoices]\n})\n\nMock.onGet('/api/invoices').reply((config) => {\n    const id = config.data\n    const response = invoiceDB.invoices.find((invoice) => invoice.id === id)\n    return [200, response]\n})\n\nMock.onPost('/api/invoices/delete').reply((config) => {\n    let invoice = JSON.parse(config.data)\n    let index = { i: 0 }\n    invoiceDB.invoices.forEach((element) => {\n        if (element.id === invoice.id) {\n            return [200, invoiceDB.invoices.splice(index.i, 1)]\n        }\n        index.i++\n    })\n    return [200, invoiceDB.invoices]\n})\n\nMock.onPost('/api/invoices/update').reply((config) => {\n    let invoice = JSON.parse(config.data)\n    let index = { i: 0 }\n    invoiceDB.invoices.forEach((element) => {\n        if (element.id === invoice.id) {\n            invoiceDB.invoices[index.i] = invoice\n            return [200, invoiceDB.invoices]\n        }\n        index.i++\n    })\n    return [200, invoiceDB.invoices]\n})\n\nMock.onPost('/api/invoices/add').reply((config) => {\n    let invoice = JSON.parse(config.data)\n    invoiceDB.invoices.push(invoice)\n    return [200, invoiceDB.invoices]\n})\n"]},"metadata":{},"sourceType":"module"}