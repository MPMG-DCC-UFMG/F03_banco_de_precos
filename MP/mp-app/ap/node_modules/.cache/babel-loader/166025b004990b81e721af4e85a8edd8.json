{"ast":null,"code":"import _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx\";\n\nvar _excluded = [\"palette\"];\nimport React from 'react';\nimport { Icon, IconButton, MenuItem, Avatar, useMediaQuery, Hidden } from '@material-ui/core';\nimport { MatxMenu, MatxSearchBox } from 'app/components';\nimport NotificationBar from '../../NotificationBar/NotificationBar';\nimport { Link } from 'react-router-dom';\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport useAuth from 'app/hooks/useAuth';\nimport useSettings from 'app/hooks/useSettings';\nimport { NotificationProvider } from 'app/contexts/NotificationContext';\nvar useStyles = makeStyles(function (_ref) {\n  var _topbarHold;\n\n  var palette = _ref.palette,\n      theme = _objectWithoutProperties(_ref, _excluded);\n\n  return {\n    topbar: {\n      top: 0,\n      zIndex: 96,\n      transition: 'all 0.3s ease',\n      background: 'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n      '& .topbar-hold': (_topbarHold = {\n        backgroundColor: palette.primary.main,\n        height: 80,\n        paddingLeft: 18,\n        paddingRight: 20\n      }, _defineProperty(_topbarHold, theme.breakpoints.down('sm'), {\n        paddingLeft: 16,\n        paddingRight: 16\n      }), _defineProperty(_topbarHold, theme.breakpoints.down('xs'), {\n        paddingLeft: 14,\n        paddingRight: 16\n      }), _topbarHold),\n      '& .fixed': {\n        boxShadow: theme.shadows[8],\n        height: 64\n      }\n    },\n    userMenu: {\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      borderRadius: 24,\n      padding: 4,\n      '& span': {\n        margin: '0 8px' // color: palette.text.secondary\n\n      }\n    },\n    menuItem: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 185\n    }\n  };\n});\n\nvar Layout1Topbar = function Layout1Topbar() {\n  var _settings$layout1Sett, _settings$layout1Sett2;\n\n  var theme = useTheme();\n  var classes = useStyles();\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      updateSettings = _useSettings.updateSettings;\n\n  var _useAuth = useAuth(),\n      logout = _useAuth.logout,\n      user = _useAuth.user;\n\n  var isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\n  var fixed = settings === null || settings === void 0 ? void 0 : (_settings$layout1Sett = settings.layout1Settings) === null || _settings$layout1Sett === void 0 ? void 0 : (_settings$layout1Sett2 = _settings$layout1Sett.topbar) === null || _settings$layout1Sett2 === void 0 ? void 0 : _settings$layout1Sett2.fixed;\n\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    updateSettings({\n      layout1Settings: {\n        leftSidebar: _objectSpread({}, sidebarSettings)\n      }\n    });\n  };\n\n  var handleSidebarToggle = function handleSidebarToggle() {\n    var layout1Settings = settings.layout1Settings;\n    var mode;\n\n    if (isMdScreen) {\n      mode = layout1Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close';\n    } else {\n      mode = layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full';\n    }\n\n    updateSidebarMode({\n      mode: mode\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.topbar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx({\n      'topbar-hold': false,\n      fixed: fixed\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between items-center h-full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"w-full\",\n    src: \"/assets/images/illustrations/dreamer.png\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleSidebarToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, \"menu\"))))));\n};\n\nexport default React.memo(Layout1Topbar);","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/components/MatxLayout/Layout1/Layout1Topbar.jsx"],"names":["React","Icon","IconButton","MenuItem","Avatar","useMediaQuery","Hidden","MatxMenu","MatxSearchBox","NotificationBar","Link","ShoppingCart","makeStyles","useTheme","clsx","useAuth","useSettings","NotificationProvider","useStyles","palette","theme","topbar","top","zIndex","transition","background","backgroundColor","primary","main","height","paddingLeft","paddingRight","breakpoints","down","boxShadow","shadows","userMenu","display","alignItems","cursor","borderRadius","padding","margin","menuItem","minWidth","Layout1Topbar","classes","settings","updateSettings","logout","user","isMdScreen","fixed","layout1Settings","updateSidebarMode","sidebarSettings","leftSidebar","handleSidebarToggle","mode","memo"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,MAJJ,EAKIC,aALJ,EAMIC,MANJ,QAOO,mBAPP;AAQA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,gBAAxC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,oBAAT,QAAqC,kCAArC;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAAC;AAAA;;AAAA,MAAGO,OAAH,QAAGA,OAAH;AAAA,MAAeC,KAAf;;AAAA,SAA4B;AACrDC,IAAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAE,CADD;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,UAAU,EAAE,eAHR;AAIJC,MAAAA,UAAU,EACN,8GALA;AAOJ;AACIC,QAAAA,eAAe,EAAEP,OAAO,CAACQ,OAAR,CAAgBC,IADrC;AAEIC,QAAAA,MAAM,EAAE,EAFZ;AAGIC,QAAAA,WAAW,EAAE,EAHjB;AAIIC,QAAAA,YAAY,EAAE;AAJlB,sCAKKX,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CALL,EAKoC;AAC5BH,QAAAA,WAAW,EAAE,EADe;AAE5BC,QAAAA,YAAY,EAAE;AAFc,OALpC,gCASKX,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CATL,EASoC;AAC5BH,QAAAA,WAAW,EAAE,EADe;AAE5BC,QAAAA,YAAY,EAAE;AAFc,OATpC,eAPI;AAqBJ,kBAAY;AACRG,QAAAA,SAAS,EAAEd,KAAK,CAACe,OAAN,CAAc,CAAd,CADH;AAERN,QAAAA,MAAM,EAAE;AAFA;AArBR,KAD6C;AA2BrDO,IAAAA,QAAQ,EAAE;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,UAAU,EAAE,QAFN;AAGNC,MAAAA,MAAM,EAAE,SAHF;AAINC,MAAAA,YAAY,EAAE,EAJR;AAKNC,MAAAA,OAAO,EAAE,CALH;AAMN,gBAAU;AACNC,QAAAA,MAAM,EAAE,OADF,CAEN;;AAFM;AANJ,KA3B2C;AAsCrDC,IAAAA,QAAQ,EAAE;AACNN,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,UAAU,EAAE,QAFN;AAGNM,MAAAA,QAAQ,EAAE;AAHJ;AAtC2C,GAA5B;AAAA,CAAD,CAA5B;;AA6CA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AACxB,MAAMzB,KAAK,GAAGP,QAAQ,EAAtB;AACA,MAAMiC,OAAO,GAAG5B,SAAS,EAAzB;;AACA,qBAAqCF,WAAW,EAAhD;AAAA,MAAQ+B,QAAR,gBAAQA,QAAR;AAAA,MAAkBC,cAAlB,gBAAkBA,cAAlB;;AACA,iBAAyBjC,OAAO,EAAhC;AAAA,MAAQkC,MAAR,YAAQA,MAAR;AAAA,MAAgBC,IAAhB,YAAgBA,IAAhB;;AACA,MAAMC,UAAU,GAAG9C,aAAa,CAACe,KAAK,CAACY,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AACA,MAAMmB,KAAK,GAAGL,QAAH,aAAGA,QAAH,gDAAGA,QAAQ,CAAEM,eAAb,oFAAG,sBAA2BhC,MAA9B,2DAAG,uBAAmC+B,KAAjD;;AAEA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,eAAD,EAAqB;AAC3CP,IAAAA,cAAc,CAAC;AACXK,MAAAA,eAAe,EAAE;AACbG,QAAAA,WAAW,oBACJD,eADI;AADE;AADN,KAAD,CAAd;AAOH,GARD;;AAUA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9B,QAAMJ,eAAN,GAA0BN,QAA1B,CAAMM,eAAN;AACA,QAAIK,IAAJ;;AAEA,QAAIP,UAAJ,EAAgB;AACZO,MAAAA,IAAI,GACAL,eAAe,CAACG,WAAhB,CAA4BE,IAA5B,KAAqC,OAArC,GACM,QADN,GAEM,OAHV;AAIH,KALD,MAKO;AACHA,MAAAA,IAAI,GACAL,eAAe,CAACG,WAAhB,CAA4BE,IAA5B,KAAqC,MAArC,GAA8C,OAA9C,GAAwD,MAD5D;AAEH;;AAEDJ,IAAAA,iBAAiB,CAAC;AAAEI,MAAAA,IAAI,EAAJA;AAAF,KAAD,CAAjB;AACH,GAfD;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACzB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEP,IAAI,CAAC;AAAE,qBAAe,KAAjB;AAAwBsC,MAAAA,KAAK,EAAEA;AAA/B,KAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,GAAG,EAAC,0CAFR;AAGI,IAAA,GAAG,EAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAOI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEK,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAPJ,CAFJ,CADJ,CADJ,CADJ;AAoBH,CAvDD;;AAyDA,eAAezD,KAAK,CAAC2D,IAAN,CAAWd,aAAX,CAAf","sourcesContent":["import React from 'react'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@material-ui/core'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { Link } from 'react-router-dom'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        transition: 'all 0.3s ease',\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n\n        '& .topbar-hold': {\n            backgroundColor: palette.primary.main,\n            height: 80,\n            paddingLeft: 18,\n            paddingRight: 20,\n            [theme.breakpoints.down('sm')]: {\n                paddingLeft: 16,\n                paddingRight: 16,\n            },\n            [theme.breakpoints.down('xs')]: {\n                paddingLeft: 14,\n                paddingRight: 16,\n            },\n        },\n        '& .fixed': {\n            boxShadow: theme.shadows[8],\n            height: 64,\n        },\n    },\n    userMenu: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 24,\n        padding: 4,\n        '& span': {\n            margin: '0 8px',\n            // color: palette.text.secondary\n        },\n    },\n    menuItem: {\n        display: 'flex',\n        alignItems: 'center',\n        minWidth: 185,\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n    const fixed = settings?.layout1Settings?.topbar?.fixed\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <div className={classes.topbar}>\n            <div className={clsx({ 'topbar-hold': false, fixed: fixed })}>\n                <div className=\"flex justify-between items-center h-full\">\n                    {/* barra superior */}\n                    <div className=\"flex\">\n                        <img\n                            className=\"w-full\"\n                            src=\"/assets/images/illustrations/dreamer.png\"\n                            alt=\"\"\n                        />\n\n                        <IconButton onClick={handleSidebarToggle}>\n                            <Icon>menu</Icon>\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n"]},"metadata":{},"sourceType":"module"}