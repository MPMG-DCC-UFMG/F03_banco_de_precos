{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function getTargetSeries(ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function overallReset(ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setCalculatedRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      });\n    });\n  }\n});","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/component/dataZoom/dataZoomProcessor.js"],"names":["echarts","require","_util","createHashMap","each","registerProcessor","getTargetSeries","ecModel","seriesModelMap","eachComponent","dataZoomModel","eachTargetAxis","dimNames","axisIndex","axisProxy","getAxisProxy","name","getTargetSeriesModels","seriesModel","set","uid","modifyOutputEnd","overallReset","api","reset","filterData","findRepresentativeAxisProxy","percentRange","getDataPercentWindow","valueRange","getDataValueWindow","setCalculatedRange","start","end","startValue","endValue"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function (ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function (ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setCalculatedRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      });\n    });\n  }\n});"]},"metadata":{},"sourceType":"script"}