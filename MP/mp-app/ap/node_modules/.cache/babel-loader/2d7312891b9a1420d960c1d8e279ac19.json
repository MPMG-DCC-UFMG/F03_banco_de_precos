{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\n\n\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  filterMode: 'filter',\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title),\n  brushStyle: {\n    borderWidth: 0,\n    color: 'rgba(0,0,0,0.2)'\n  }\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function zoom() {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function back() {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: featureModel.getModel('brushStyle').getItemStyle()\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Default to be filter\n        filterMode: dataZoomOpt.filterMode || 'filter',\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/component/toolbox/feature/DataZoom.js"],"names":["echarts","require","zrUtil","BrushController","BrushTargetManager","history","sliderMove","lang","featureManager","dataZoomLang","toolbox","dataZoom","each","DATA_ZOOM_ID_BASE","DataZoom","model","ecModel","api","_brushController","getZr","on","bind","_onBrush","mount","_isZoomActive","defaultOption","show","filterMode","icon","zoom","back","title","clone","brushStyle","borderWidth","color","proto","prototype","render","featureModel","payload","updateZoomBtnStatus","updateBackBtnStatus","onclick","type","handlers","call","remove","unmount","dispose","nextActive","dispatchAction","key","dataZoomSelectActive","_dispatchZoomAction","pop","areas","opt","isEnd","length","snapshot","updateCovers","brushTargetManager","retrieveAxisSetting","option","include","matchOutputRanges","area","coordRange","coordSys","brushType","setBatch","lineX","lineY","push","dimName","minMax","axis","getAxis","axisModel","dataZoomModel","findDataZoom","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","minValueSpan","maxValueSpan","slice","scale","getExtent","id","dataZoomId","startValue","endValue","found","eachComponent","mainType","subType","dzModel","has","getAxisModel","componentIndex","batch","batchItem","from","uid","setting","name","setIconStatus","count","view","zoomActive","setPanels","makePanelOpts","targetInfo","xAxisDeclared","yAxisDeclared","enableBrush","getModel","getItemStyle","register","registerPreprocessor","dataZoomOpts","isArray","toolboxOpt","feature","dataZoomOpt","addForAxis","axisName","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","axisIndex","indexOf","newOpt","$fromToolbox","cb","opts","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  filterMode: 'filter',\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title),\n  brushStyle: {\n    borderWidth: 0,\n    color: 'rgba(0,0,0,0.2)'\n  }\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: featureModel.getModel('brushStyle').getItemStyle()\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Default to be filter\n        filterMode: dataZoomOpt.filterMode || 'filter',\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}