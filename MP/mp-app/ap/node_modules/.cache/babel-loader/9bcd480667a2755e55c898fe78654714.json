{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    textColor: '#000',\n    fontSize: '12px',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    showSpinner: true,\n    color: '#c23531',\n    spinnerRadius: 10,\n    lineWidth: 5,\n    zlevel: 0\n  });\n  var group = new graphic.Group();\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  group.add(mask);\n  var font = opts.fontSize + ' sans-serif';\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      font: font,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  group.add(labelRect);\n\n  if (opts.showSpinner) {\n    var arc = new graphic.Arc({\n      shape: {\n        startAngle: -PI / 2,\n        endAngle: -PI / 2 + 0.1,\n        r: opts.spinnerRadius\n      },\n      style: {\n        stroke: opts.color,\n        lineCap: 'round',\n        lineWidth: opts.lineWidth\n      },\n      zlevel: opts.zlevel,\n      z: 10001\n    });\n    arc.animateShape(true).when(1000, {\n      endAngle: PI * 3 / 2\n    }).start('circularInOut');\n    arc.animateShape(true).when(1000, {\n      startAngle: PI * 3 / 2\n    }).delay(300).start('circularInOut');\n    group.add(arc);\n  } // Inject resize\n\n\n  group.resize = function () {\n    var textWidth = textContain.getWidth(opts.text, font);\n    var r = opts.showSpinner ? opts.spinnerRadius : 0; // cx = (containerWidth - arcDiameter - textDistance - textWidth) / 2\n    // textDistance needs to be calculated when both animation and text exist\n\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 // only show the text\n    - (opts.showSpinner ? 0 : textWidth / 2);\n    var cy = api.getHeight() / 2;\n    opts.showSpinner && arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/loading/default.js"],"names":["zrUtil","require","graphic","textContain","PI","Math","_default","api","opts","defaults","text","textColor","fontSize","maskColor","showSpinner","color","spinnerRadius","lineWidth","zlevel","group","Group","mask","Rect","style","fill","z","add","font","labelRect","textPosition","textDistance","textFill","arc","Arc","shape","startAngle","endAngle","r","stroke","lineCap","animateShape","when","start","delay","resize","textWidth","getWidth","cx","cy","getHeight","setShape","x","y","width","height","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    textColor: '#000',\n    fontSize: '12px',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    showSpinner: true,\n    color: '#c23531',\n    spinnerRadius: 10,\n    lineWidth: 5,\n    zlevel: 0\n  });\n  var group = new graphic.Group();\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  group.add(mask);\n  var font = opts.fontSize + ' sans-serif';\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      font: font,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  group.add(labelRect);\n\n  if (opts.showSpinner) {\n    var arc = new graphic.Arc({\n      shape: {\n        startAngle: -PI / 2,\n        endAngle: -PI / 2 + 0.1,\n        r: opts.spinnerRadius\n      },\n      style: {\n        stroke: opts.color,\n        lineCap: 'round',\n        lineWidth: opts.lineWidth\n      },\n      zlevel: opts.zlevel,\n      z: 10001\n    });\n    arc.animateShape(true).when(1000, {\n      endAngle: PI * 3 / 2\n    }).start('circularInOut');\n    arc.animateShape(true).when(1000, {\n      startAngle: PI * 3 / 2\n    }).delay(300).start('circularInOut');\n    group.add(arc);\n  } // Inject resize\n\n\n  group.resize = function () {\n    var textWidth = textContain.getWidth(opts.text, font);\n    var r = opts.showSpinner ? opts.spinnerRadius : 0; // cx = (containerWidth - arcDiameter - textDistance - textWidth) / 2\n    // textDistance needs to be calculated when both animation and text exist\n\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 // only show the text\n    - (opts.showSpinner ? 0 : textWidth / 2);\n    var cy = api.getHeight() / 2;\n    opts.showSpinner && arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}