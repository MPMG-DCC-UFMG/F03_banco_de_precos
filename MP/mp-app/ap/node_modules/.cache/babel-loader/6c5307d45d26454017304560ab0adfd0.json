{"ast":null,"code":"import _classCallCheck from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/buttons/DataFormulario2.jsx\";\nimport React, { Component } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\n\nvar MyClass = /*#__PURE__*/function (_Component) {\n  _inherits(MyClass, _Component);\n\n  var _super = _createSuper(MyClass);\n\n  function MyClass(props) {\n    var _this;\n\n    _classCallCheck(this, MyClass);\n\n    _this = _super.call(this, props);\n\n    _this.addTextInput = function (index) {\n      var textInput = _this.state.textInput;\n      textInput.push( /*#__PURE__*/React.createElement(TextInput, {\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this.addValues(text, index);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      }));\n\n      _this.setState({\n        textInput: textInput\n      });\n    };\n\n    _this.removeTextInput = function () {\n      var textInput = _this.state.textInput;\n      var inputData = _this.state.inputData;\n      textInput.pop();\n      inputData.pop();\n\n      _this.setState({\n        textInput: textInput,\n        inputData: inputData\n      });\n    };\n\n    _this.addValues = function (text, index) {\n      var dataArray = _this.state.inputData;\n      var checkBool = false;\n\n      if (dataArray.length !== 0) {\n        dataArray.forEach(function (element) {\n          if (element.index === index) {\n            element.text = text;\n            checkBool = true;\n          }\n        });\n      }\n\n      if (checkBool) {\n        _this.setState({\n          inputData: dataArray\n        });\n      } else {\n        dataArray.push({\n          'text': text,\n          'index': index\n        });\n\n        _this.setState({\n          inputData: dataArray\n        });\n      }\n    };\n\n    _this.getValues = function () {\n      console.log('Data', _this.state.inputData);\n    };\n\n    _this.state = {\n      textInput: [],\n      inputData: []\n    };\n    return _this;\n  } //function to add TextInput dynamically\n\n\n  _createClass(MyClass, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        title: \"Add\",\n        onPress: function onPress() {\n          return _this2.addTextInput(_this2.state.textInput.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(View, {\n        style: {\n          margin: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        title: \"Remove\",\n        onPress: function onPress() {\n          return _this2.removeTextInput();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }))), this.state.textInput.map(function (value) {\n        return value;\n      }), /*#__PURE__*/React.createElement(Button, {\n        title: \"Get Values\",\n        onPress: function onPress() {\n          return _this2.getValues();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return MyClass;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  buttonView: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    height: 40,\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 20\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});\nexport default MyClass;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/buttons/DataFormulario2.jsx"],"names":["React","Component","View","TextInput","Button","StyleSheet","MyClass","props","addTextInput","index","textInput","state","push","styles","text","addValues","setState","removeTextInput","inputData","pop","dataArray","checkBool","length","forEach","element","getValues","console","log","row","margin","map","value","create","container","flex","justifyContent","alignItems","backgroundColor","buttonView","flexDirection","height","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\n\n\nclass MyClass extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      textInput : [],\n      inputData : []\n    }\n  }\n\n  //function to add TextInput dynamically\n  addTextInput = (index) => {\n    let textInput = this.state.textInput;\n    textInput.push(<TextInput style={styles.textInput}\n      onChangeText={(text) => this.addValues(text, index)} />);\n    this.setState({ textInput });\n  }\n\n  //function to remove TextInput dynamically\n  removeTextInput = () => {\n    let textInput = this.state.textInput;\n    let inputData = this.state.inputData;\n    textInput.pop();\n    inputData.pop();\n    this.setState({ textInput,inputData });\n  }\n\n  //function to add text from TextInputs into single array\n  addValues = (text, index) => {\n    let dataArray = this.state.inputData;\n    let checkBool = false;\n    if (dataArray.length !== 0){\n      dataArray.forEach(element => {\n        if (element.index === index ){\n          element.text = text;\n          checkBool = true;\n        }\n      });\n    }\n    if (checkBool){\n    this.setState({\n      inputData: dataArray\n    });\n  }\n  else {\n    dataArray.push({'text':text,'index':index});\n    this.setState({\n      inputData: dataArray\n    });\n  }\n  }\n\n  //function to console the output\n  getValues = () => {\n    console.log('Data',this.state.inputData);\n  }\n\n\n  render(){\n    return(\n      <View>\n        <View style= {styles.row}>\n          <View style={{margin: 10}}>\n        <Button title='Add' onPress={() => this.addTextInput(this.state.textInput.length)} />\n        </View>\n        <View style={{margin: 10}}>\n        <Button title='Remove' onPress={() => this.removeTextInput()} />\n        </View>\n        </View>\n        {this.state.textInput.map((value) => {\n          return value\n        })}\n        <Button title='Get Values' onPress={() => this.getValues()} />\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n  buttonView: {\n  flexDirection: 'row'\n  },\n  textInput: {\n  height: 40,\n  borderColor: 'black', \n  borderWidth: 1,\n  margin: 20\n},\nrow:{\n  flexDirection: 'row',\n  justifyContent: 'center'\n  },\n});\n\nexport default MyClass;"]},"metadata":{},"sourceType":"module"}