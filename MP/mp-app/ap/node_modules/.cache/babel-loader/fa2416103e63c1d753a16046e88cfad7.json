{"ast":null,"code":"var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/contain/arc.js"],"names":["_util","require","normalizeRadian","PI2","Math","PI","containStroke","cx","cy","r","startAngle","endAngle","anticlockwise","lineWidth","x","y","_l","d","sqrt","abs","tmp","angle","atan2","exports"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AAEA,IAAIC,eAAe,GAAGF,KAAK,CAACE,eAA5B;AACA,IAAIC,GAAG,GAAGC,IAAI,CAACC,EAAL,GAAU,CAApB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,CAA/B,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwDC,aAAxD,EAAuEC,SAAvE,EAAkFC,CAAlF,EAAqFC,CAArF,EAAwF;AACtF,MAAIF,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAIG,EAAE,GAAGH,SAAT;AACAC,EAAAA,CAAC,IAAIP,EAAL;AACAQ,EAAAA,CAAC,IAAIP,EAAL;AACA,MAAIS,CAAC,GAAGb,IAAI,CAACc,IAAL,CAAUJ,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAtB,CAAR;;AAEA,MAAIE,CAAC,GAAGD,EAAJ,GAASP,CAAT,IAAcQ,CAAC,GAAGD,EAAJ,GAASP,CAA3B,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,MAAIL,IAAI,CAACe,GAAL,CAAST,UAAU,GAAGC,QAAtB,IAAkCR,GAAlC,GAAwC,IAA5C,EAAkD;AAChD;AACA,WAAO,IAAP;AACD;;AAED,MAAIS,aAAJ,EAAmB;AACjB,QAAIQ,GAAG,GAAGV,UAAV;AACAA,IAAAA,UAAU,GAAGR,eAAe,CAACS,QAAD,CAA5B;AACAA,IAAAA,QAAQ,GAAGT,eAAe,CAACkB,GAAD,CAA1B;AACD,GAJD,MAIO;AACLV,IAAAA,UAAU,GAAGR,eAAe,CAACQ,UAAD,CAA5B;AACAC,IAAAA,QAAQ,GAAGT,eAAe,CAACS,QAAD,CAA1B;AACD;;AAED,MAAID,UAAU,GAAGC,QAAjB,EAA2B;AACzBA,IAAAA,QAAQ,IAAIR,GAAZ;AACD;;AAED,MAAIkB,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWP,CAAX,EAAcD,CAAd,CAAZ;;AAEA,MAAIO,KAAK,GAAG,CAAZ,EAAe;AACbA,IAAAA,KAAK,IAAIlB,GAAT;AACD;;AAED,SAAOkB,KAAK,IAAIX,UAAT,IAAuBW,KAAK,IAAIV,QAAhC,IAA4CU,KAAK,GAAGlB,GAAR,IAAeO,UAAf,IAA6BW,KAAK,GAAGlB,GAAR,IAAeQ,QAA/F;AACD;;AAEDY,OAAO,CAACjB,aAAR,GAAwBA,aAAxB","sourcesContent":["var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;"]},"metadata":{},"sourceType":"script"}