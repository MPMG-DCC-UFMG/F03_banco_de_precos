{"ast":null,"code":"import _classCallCheck from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nvar styles = function styles(theme) {\n  return {\n    close: {\n      padding: theme.spacing(0.5)\n    }\n  };\n};\n\nvar ConsecutiveSnackbars = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConsecutiveSnackbars, _React$Component);\n\n  var _super = _createSuper(ConsecutiveSnackbars);\n\n  function ConsecutiveSnackbars() {\n    var _this;\n\n    _classCallCheck(this, ConsecutiveSnackbars);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.queue = [];\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClick = function (message) {\n      return function () {\n        _this.queue.push({\n          message: message,\n          key: new Date().getTime()\n        });\n\n        if (_this.state.open) {\n          // immediately begin dismissing current message\n          // to start showing new one\n          _this.setState({\n            open: false\n          });\n        } else {\n          _this.processQueue();\n        }\n      };\n    };\n\n    _this.processQueue = function () {\n      if (_this.queue.length > 0) {\n        _this.setState({\n          messageInfo: _this.queue.shift(),\n          open: true\n        });\n      }\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleExited = function () {\n      _this.processQueue();\n    };\n\n    return _this;\n  }\n\n  _createClass(ConsecutiveSnackbars, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state$messageIn = this.state.messageInfo,\n          messageInfo = _this$state$messageIn === void 0 ? {} : _this$state$messageIn;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClick('Message A'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, \"Show message A\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: this.handleClick('Message B'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Show message B\"), /*#__PURE__*/React.createElement(Snackbar, {\n        key: messageInfo.key,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        onExited: this.handleExited,\n        ContentProps: {\n          'aria-describedby': 'message-id'\n        },\n        message: /*#__PURE__*/React.createElement(\"span\", {\n          id: \"message-id\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 30\n          }\n        }, messageInfo.message),\n        action: [/*#__PURE__*/React.createElement(Button, {\n          key: \"undo\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: this.handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }\n        }, \"UNDO\"), /*#__PURE__*/React.createElement(IconButton, {\n          key: \"close\",\n          \"aria-label\": \"Close\",\n          color: \"inherit\",\n          className: classes.close,\n          onClick: this.handleClose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CloseIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }\n        }))],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ConsecutiveSnackbars;\n}(React.Component);\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ConsecutiveSnackbars);","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx"],"names":["React","PropTypes","withStyles","Button","Snackbar","IconButton","CloseIcon","styles","theme","close","padding","spacing","ConsecutiveSnackbars","queue","state","open","handleClick","message","push","key","Date","getTime","setState","processQueue","length","messageInfo","shift","handleClose","event","reason","handleExited","classes","props","vertical","horizontal","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst styles = (theme) => ({\n    close: {\n        padding: theme.spacing(0.5),\n    },\n})\n\nclass ConsecutiveSnackbars extends React.Component {\n    queue = []\n\n    state = {\n        open: false,\n    }\n\n    handleClick = (message) => () => {\n        this.queue.push({\n            message,\n            key: new Date().getTime(),\n        })\n\n        if (this.state.open) {\n            // immediately begin dismissing current message\n            // to start showing new one\n            this.setState({ open: false })\n        } else {\n            this.processQueue()\n        }\n    }\n\n    processQueue = () => {\n        if (this.queue.length > 0) {\n            this.setState({\n                messageInfo: this.queue.shift(),\n                open: true,\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        this.setState({ open: false })\n    }\n\n    handleExited = () => {\n        this.processQueue()\n    }\n\n    render() {\n        const { classes } = this.props\n        const { messageInfo = {} } = this.state\n\n        return (\n            <div>\n                <Button onClick={this.handleClick('Message A')}>\n                    Show message A\n                </Button>\n                <Button onClick={this.handleClick('Message B')}>\n                    Show message B\n                </Button>\n                <Snackbar\n                    key={messageInfo.key}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={6000}\n                    onClose={this.handleClose}\n                    onExited={this.handleExited}\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{messageInfo.message}</span>}\n                    action={[\n                        <Button\n                            key=\"undo\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            onClick={this.handleClose}\n                        >\n                            UNDO\n                        </Button>,\n                        <IconButton\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"inherit\"\n                            className={classes.close}\n                            onClick={this.handleClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>,\n                    ]}\n                />\n            </div>\n        )\n    }\n}\n\nConsecutiveSnackbars.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ConsecutiveSnackbars)\n"]},"metadata":{},"sourceType":"module"}