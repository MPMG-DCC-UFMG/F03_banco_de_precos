{"ast":null,"code":"/**\n * @param {Object} ctx\n * @param {Object} shape\n * @param {number} shape.x\n * @param {number} shape.y\n * @param {number} shape.width\n * @param {number} shape.height\n * @param {number} shape.r\n */\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/graphic/helper/roundRect.js"],"names":["buildPath","ctx","shape","x","y","width","height","r","r1","r2","r3","r4","Array","length","total","moveTo","lineTo","arc","Math","PI","exports"],"mappings":"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","sourcesContent":["/**\n * @param {Object} ctx\n * @param {Object} shape\n * @param {number} shape.x\n * @param {number} shape.y\n * @param {number} shape.width\n * @param {number} shape.height\n * @param {number} shape.r\n */\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI / 2, 0);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n}\n\nexports.buildPath = buildPath;"]},"metadata":{},"sourceType":"script"}