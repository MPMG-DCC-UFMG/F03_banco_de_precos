{"ast":null,"code":"import _regeneratorRuntime from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/johnatan/MP/mp-app/ap/src/app/contexts/NotificationContext.js\";\n\nimport React, { createContext, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'LOAD_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    case 'DELETE_NOTIFICATION':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    case 'CLEAR_NOTIFICATIONS':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          notifications: action.payload\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nvar NotificationContext = createContext({\n  notifications: [],\n  deleteNotification: function deleteNotification() {},\n  clearNotifications: function clearNotifications() {},\n  getNotifications: function getNotifications() {},\n  createNotification: function createNotification() {}\n});\nexport var NotificationProvider = function NotificationProvider(_ref) {\n  var settings = _ref.settings,\n      children = _ref.children;\n\n  var _useReducer = useReducer(reducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var deleteNotification = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(notificationID) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.post('/api/notification/delete', {\n                id: notificationID\n              });\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function deleteNotification(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var clearNotifications = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post('/api/notification/delete-all');\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function clearNotifications() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getNotifications = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get('/api/notification');\n\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data\n              });\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function getNotifications() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var createNotification = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(notification) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.post('/api/notification/add', {\n                notification: notification\n              });\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function createNotification(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getNotifications();\n  }, []);\n  return /*#__PURE__*/React.createElement(NotificationContext.Provider, {\n    value: {\n      notifications: state.notifications,\n      deleteNotification: deleteNotification,\n      clearNotifications: clearNotifications,\n      getNotifications: getNotifications,\n      createNotification: createNotification\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default NotificationContext;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/contexts/NotificationContext.js"],"names":["React","createContext","useEffect","useReducer","axios","reducer","state","action","type","notifications","payload","NotificationContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","settings","children","dispatch","notificationID","post","id","res","data","console","error","get","notification"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n"]},"metadata":{},"sourceType":"module"}