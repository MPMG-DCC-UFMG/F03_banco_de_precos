{"ast":null,"code":"import axios from 'axios';\nexport var GET_ALL_BOARD = 'GET_ALL_BOARD';\nexport var GET_BOARD_BY_ID = 'GET_BOARD_BY_ID';\nexport var ADD_BOARD = 'ADD_BOARD';\nexport var ADD_MEMBER_IN_BOARD = 'ADD_MEMBER_IN_BOARD';\nexport var DELETE_MEMBER_FROM_BOARD = 'DELETE_MEMBER_FROM_BOARD';\nexport var GET_ALL_MEMBERS = 'GET_ALL_MEMBERS';\nexport var GET_ALL_LABELS = 'GET_ALL_LABELS';\nexport var ADD_LIST = 'ADD_LIST';\nexport var RENAME_LIST = 'RENAME_LIST';\nexport var REORDER_LIST = 'REORDER_LIST';\nexport var DELETE_LIST = 'DELETE_LIST';\nexport var ADD_CARD = 'ADD_CARD';\nexport var UPDATE_CARD = 'UPDATE_CARD';\nexport var REORDER_CARD = 'REORDER_CARD';\nexport var REORDER_CARD_LIST = 'REORDER_CARD_LIST';\nexport var MOVE_CARD = 'MOVE_CARD';\nexport var DELETE_CARD = 'DELETE_CARD';\nexport var getAllMembers = function getAllMembers() {\n  return function (dispatch) {\n    axios.get('/api/scrum-board/all-member').then(function (res) {\n      dispatch({\n        type: GET_ALL_MEMBERS,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var getAllLabels = function getAllLabels() {\n  return function (dispatch) {\n    axios.get('/api/scrum-board/all-label').then(function (res) {\n      dispatch({\n        type: GET_ALL_LABELS,\n        payload: res.data\n      });\n    });\n  };\n}; // BOARD RELATED ACTIONS\n\nexport var getAllBoard = function getAllBoard() {\n  return function (dispatch) {\n    axios.get('/api/scrum-board/all-board').then(function (res) {\n      dispatch({\n        type: GET_ALL_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addNewBoard = function addNewBoard(boardTitle) {\n  return function (dispatch) {\n    axios.post('/api/scrum-board/add-board', boardTitle).then(function (res) {\n      dispatch({\n        type: ADD_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var getBoardById = function getBoardById(id) {\n  return function (dispatch) {\n    axios.get('/api/scrum-board', {\n      data: id\n    }).then(function (res) {\n      dispatch({\n        type: GET_BOARD_BY_ID,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addMemberInBoard = function addMemberInBoard(_ref) {\n  var boardId = _ref.boardId,\n      memberId = _ref.memberId;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/add-member', {\n      boardId: boardId,\n      memberId: memberId\n    }).then(function (res) {\n      dispatch({\n        type: ADD_MEMBER_IN_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var deleteMemberFromBoard = function deleteMemberFromBoard(_ref2) {\n  var boardId = _ref2.boardId,\n      memberId = _ref2.memberId;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/delete-member', {\n      boardId: boardId,\n      memberId: memberId\n    }).then(function (res) {\n      dispatch({\n        type: DELETE_MEMBER_FROM_BOARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addListInBoard = function addListInBoard(_ref3) {\n  var boardId = _ref3.boardId,\n      listTitle = _ref3.listTitle;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/add-column', {\n      boardId: boardId,\n      listTitle: listTitle\n    }).then(function (res) {\n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var renameListInBoard = function renameListInBoard(_ref4) {\n  var boardId = _ref4.boardId,\n      listTitle = _ref4.listTitle,\n      listId = _ref4.listId;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/rename-column', {\n      boardId: boardId,\n      listTitle: listTitle,\n      listId: listId\n    }).then(function (res) {\n      dispatch({\n        type: RENAME_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var reorderList = function reorderList(boardId, startIndex, endIndex) {\n  return function (dispatch) {\n    axios.post('/api/scrum-board/reorder-list', {\n      boardId: boardId,\n      startIndex: startIndex,\n      endIndex: endIndex\n    }).then(function (res) {\n      dispatch({\n        type: REORDER_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var deleteListFromBoard = function deleteListFromBoard(_ref5) {\n  var boardId = _ref5.boardId,\n      listId = _ref5.listId;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/delete-column', {\n      boardId: boardId,\n      listId: listId\n    }).then(function (res) {\n      dispatch({\n        type: DELETE_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addNewCardInList = function addNewCardInList(_ref6) {\n  var listId = _ref6.listId,\n      boardId = _ref6.boardId,\n      cardTitle = _ref6.cardTitle;\n  return function (dispatch) {\n    axios.post('/api/scrum-board/add-card', {\n      listId: listId,\n      boardId: boardId,\n      cardTitle: cardTitle\n    }).then(function (res) {\n      dispatch({\n        type: ADD_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var reorderCardInList = function reorderCardInList(boardId, listId, startIndex, endIndex) {\n  return function (dispatch) {\n    axios.post('/api/scrum-board/reorder-card', {\n      boardId: boardId,\n      listId: listId,\n      startIndex: startIndex,\n      endIndex: endIndex\n    }).then(function (res) {\n      dispatch({\n        type: REORDER_CARD_LIST,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var moveCardInList = function moveCardInList(boardId, sourcelistId, destinationlistId, source, destination) {\n  return function (dispatch) {\n    axios.post('/api/scrum-board/move-card', {\n      boardId: boardId,\n      sourcelistId: sourcelistId,\n      destinationlistId: destinationlistId,\n      source: source,\n      destination: destination\n    }).then(function (res) {\n      dispatch({\n        type: MOVE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var updateCardInList = function updateCardInList(boardId, listId, card) {\n  return function (dispatch) {\n    axios.post('/api/scrum-board/update-card', {\n      boardId: boardId,\n      listId: listId,\n      card: card\n    }).then(function (res) {\n      dispatch({\n        type: UPDATE_CARD,\n        payload: res.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/app/redux/actions/ScrumBoardActions.js"],"names":["axios","GET_ALL_BOARD","GET_BOARD_BY_ID","ADD_BOARD","ADD_MEMBER_IN_BOARD","DELETE_MEMBER_FROM_BOARD","GET_ALL_MEMBERS","GET_ALL_LABELS","ADD_LIST","RENAME_LIST","REORDER_LIST","DELETE_LIST","ADD_CARD","UPDATE_CARD","REORDER_CARD","REORDER_CARD_LIST","MOVE_CARD","DELETE_CARD","getAllMembers","dispatch","get","then","res","type","payload","data","getAllLabels","getAllBoard","addNewBoard","boardTitle","post","getBoardById","id","addMemberInBoard","boardId","memberId","deleteMemberFromBoard","addListInBoard","listTitle","renameListInBoard","listId","reorderList","startIndex","endIndex","deleteListFromBoard","addNewCardInList","cardTitle","reorderCardInList","moveCardInList","sourcelistId","destinationlistId","source","destination","updateCardInList","card"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const GET_ALL_BOARD = 'GET_ALL_BOARD'\nexport const GET_BOARD_BY_ID = 'GET_BOARD_BY_ID'\nexport const ADD_BOARD = 'ADD_BOARD'\nexport const ADD_MEMBER_IN_BOARD = 'ADD_MEMBER_IN_BOARD'\nexport const DELETE_MEMBER_FROM_BOARD = 'DELETE_MEMBER_FROM_BOARD'\nexport const GET_ALL_MEMBERS = 'GET_ALL_MEMBERS'\nexport const GET_ALL_LABELS = 'GET_ALL_LABELS'\n\nexport const ADD_LIST = 'ADD_LIST'\nexport const RENAME_LIST = 'RENAME_LIST'\nexport const REORDER_LIST = 'REORDER_LIST'\nexport const DELETE_LIST = 'DELETE_LIST'\n\nexport const ADD_CARD = 'ADD_CARD'\nexport const UPDATE_CARD = 'UPDATE_CARD'\nexport const REORDER_CARD = 'REORDER_CARD'\nexport const REORDER_CARD_LIST = 'REORDER_CARD_LIST'\nexport const MOVE_CARD = 'MOVE_CARD'\nexport const DELETE_CARD = 'DELETE_CARD'\n\nexport const getAllMembers = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-member').then((res) => {\n            dispatch({\n                type: GET_ALL_MEMBERS,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const getAllLabels = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-label').then((res) => {\n            dispatch({\n                type: GET_ALL_LABELS,\n                payload: res.data,\n            })\n        })\n    }\n}\n\n// BOARD RELATED ACTIONS\nexport const getAllBoard = () => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board/all-board').then((res) => {\n            dispatch({\n                type: GET_ALL_BOARD,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const addNewBoard = (boardTitle) => {\n    return (dispatch) => {\n        axios.post('/api/scrum-board/add-board', boardTitle).then((res) => {\n            dispatch({\n                type: ADD_BOARD,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const getBoardById = (id) => {\n    return (dispatch) => {\n        axios.get('/api/scrum-board', { data: id }).then((res) => {\n            dispatch({\n                type: GET_BOARD_BY_ID,\n                payload: res.data,\n            })\n        })\n    }\n}\n\nexport const addMemberInBoard = ({ boardId, memberId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-member', { boardId, memberId })\n            .then((res) => {\n                dispatch({\n                    type: ADD_MEMBER_IN_BOARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const deleteMemberFromBoard = ({ boardId, memberId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/delete-member', { boardId, memberId })\n            .then((res) => {\n                dispatch({\n                    type: DELETE_MEMBER_FROM_BOARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const addListInBoard = ({ boardId, listTitle }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-column', { boardId, listTitle })\n            .then((res) => {\n                dispatch({\n                    type: ADD_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const renameListInBoard = ({ boardId, listTitle, listId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/rename-column', {\n                boardId,\n                listTitle,\n                listId,\n            })\n            .then((res) => {\n                dispatch({\n                    type: RENAME_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const reorderList = (boardId, startIndex, endIndex) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/reorder-list', {\n                boardId,\n                startIndex,\n                endIndex,\n            })\n            .then((res) => {\n                dispatch({\n                    type: REORDER_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const deleteListFromBoard = ({ boardId, listId }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/delete-column', { boardId, listId })\n            .then((res) => {\n                dispatch({\n                    type: DELETE_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const addNewCardInList = ({ listId, boardId, cardTitle }) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/add-card', { listId, boardId, cardTitle })\n            .then((res) => {\n                dispatch({\n                    type: ADD_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const reorderCardInList = (boardId, listId, startIndex, endIndex) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/reorder-card', {\n                boardId,\n                listId,\n                startIndex,\n                endIndex,\n            })\n            .then((res) => {\n                dispatch({\n                    type: REORDER_CARD_LIST,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const moveCardInList = (\n    boardId,\n    sourcelistId,\n    destinationlistId,\n    source,\n    destination\n) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/move-card', {\n                boardId,\n                sourcelistId,\n                destinationlistId,\n                source,\n                destination,\n            })\n            .then((res) => {\n                dispatch({\n                    type: MOVE_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n\nexport const updateCardInList = (boardId, listId, card) => {\n    return (dispatch) => {\n        axios\n            .post('/api/scrum-board/update-card', { boardId, listId, card })\n            .then((res) => {\n                dispatch({\n                    type: UPDATE_CARD,\n                    payload: res.data,\n                })\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}