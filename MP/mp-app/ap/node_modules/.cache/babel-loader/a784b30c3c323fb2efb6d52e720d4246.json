{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function render(seriesModel, ecModel, api) {\n    // If there is clipPath created in large mode. Remove it.\n    this.group.removeClipPath();\n\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function _updateDrawMode(seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function _renderNormal(seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var needsClip = seriesModel.get('clip', true);\n    var coord = seriesModel.coordinateSystem;\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n          return;\n        }\n\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n        group.remove(el);\n        return;\n      }\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function _renderLarge(seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderNormal: function _incrementalRenderNormal(params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function _incrementalRenderLarge(params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function remove(ecModel) {\n    this._clear();\n  },\n  _clear: function _clear() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction isNormalBoxClipped(clipArea, itemLayout) {\n  var clipped = true;\n\n  for (var i = 0; i < itemLayout.ends.length; i++) {\n    // If any point are in the region.\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\n      clipped = false;\n      break;\n    }\n  }\n\n  return clipped;\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function buildPath(ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/candlestick/CandlestickView.js"],"names":["zrUtil","require","ChartView","graphic","Path","_createClipPathFromCoordSys","createClipPath","NORMAL_ITEM_STYLE_PATH","EMPHASIS_ITEM_STYLE_PATH","SKIP_PROPS","CandlestickView","extend","type","render","seriesModel","ecModel","api","group","removeClipPath","_updateDrawMode","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","incrementalRender","params","_incrementalRenderLarge","_incrementalRenderNormal","isLargeDraw","pipelineContext","large","data","getData","oldData","_data","isSimpleBox","getLayout","needsClip","get","coord","coordinateSystem","clipArea","getArea","removeAll","diff","add","newIdx","hasValue","el","itemLayout","getItemLayout","isNormalBoxClipped","createNormalBox","initProps","shape","points","ends","setBoxCommon","setItemGraphicEl","update","oldIdx","getItemGraphicEl","remove","updateProps","execute","createLarge","clipPath","setClipPath","dataIndex","next","incremental","dispose","noop","NormalBoxPath","buildPath","ctx","__simpleBox","moveTo","lineTo","closePath","isInit","transInit","z2","clipped","i","length","contain","itemModel","getItemModel","normalItemStyleModel","getModel","color","getItemVisual","borderColor","itemStyle","getItemStyle","useStyle","style","strokeNoScale","fill","stroke","hoverStyle","setHoverStyle","map","point","slice","initBaseline","LargeBoxPath","__sign","x","largePoints","elP","elN","setLargeStyle","sign","suffix","getVisual","_default","module","exports"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMAL_ITEM_STYLE_PATH = ['itemStyle'];\nvar EMPHASIS_ITEM_STYLE_PATH = ['emphasis', 'itemStyle'];\nvar SKIP_PROPS = ['color', 'color0', 'borderColor', 'borderColor0'];\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  render: function (seriesModel, ecModel, api) {\n    // If there is clipPath created in large mode. Remove it.\n    this.group.removeClipPath();\n\n    this._updateDrawMode(seriesModel);\n\n    this._isLargeDraw ? this._renderLarge(seriesModel) : this._renderNormal(seriesModel);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    this._isLargeDraw ? this._incrementalRenderLarge(params, seriesModel) : this._incrementalRenderNormal(params, seriesModel);\n  },\n  _updateDrawMode: function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw ^ this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  },\n  _renderNormal: function (seriesModel) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var needsClip = seriesModel.get('clip', true);\n    var coord = seriesModel.coordinateSystem;\n    var clipArea = coord.getArea && coord.getArea(); // There is no old data only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!this._data) {\n      group.removeAll();\n    }\n\n    data.diff(oldData).add(function (newIdx) {\n      if (data.hasValue(newIdx)) {\n        var el;\n        var itemLayout = data.getItemLayout(newIdx);\n\n        if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n          return;\n        }\n\n        el = createNormalBox(itemLayout, newIdx, true);\n        graphic.initProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n        setBoxCommon(el, data, newIdx, isSimpleBox);\n        group.add(el);\n        data.setItemGraphicEl(newIdx, el);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n      if (!data.hasValue(newIdx)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemLayout = data.getItemLayout(newIdx);\n\n      if (needsClip && isNormalBoxClipped(clipArea, itemLayout)) {\n        group.remove(el);\n        return;\n      }\n\n      if (!el) {\n        el = createNormalBox(itemLayout, newIdx);\n      } else {\n        graphic.updateProps(el, {\n          shape: {\n            points: itemLayout.ends\n          }\n        }, seriesModel, newIdx);\n      }\n\n      setBoxCommon(el, data, newIdx, isSimpleBox);\n      group.add(el);\n      data.setItemGraphicEl(newIdx, el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n  _renderLarge: function (seriesModel) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  },\n  _incrementalRenderNormal: function (params, seriesModel) {\n    var data = seriesModel.getData();\n    var isSimpleBox = data.getLayout('isSimpleBox');\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var el;\n      var itemLayout = data.getItemLayout(dataIndex);\n      el = createNormalBox(itemLayout, dataIndex);\n      setBoxCommon(el, data, dataIndex, isSimpleBox);\n      el.incremental = true;\n      this.group.add(el);\n    }\n  },\n  _incrementalRenderLarge: function (params, seriesModel) {\n    createLarge(seriesModel, this.group, true);\n  },\n  remove: function (ecModel) {\n    this._clear();\n  },\n  _clear: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: zrUtil.noop\n});\nvar NormalBoxPath = Path.extend({\n  type: 'normalCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    var ends = shape.points;\n\n    if (this.__simpleBox) {\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[6][0], ends[6][1]);\n    } else {\n      ctx.moveTo(ends[0][0], ends[0][1]);\n      ctx.lineTo(ends[1][0], ends[1][1]);\n      ctx.lineTo(ends[2][0], ends[2][1]);\n      ctx.lineTo(ends[3][0], ends[3][1]);\n      ctx.closePath();\n      ctx.moveTo(ends[4][0], ends[4][1]);\n      ctx.lineTo(ends[5][0], ends[5][1]);\n      ctx.moveTo(ends[6][0], ends[6][1]);\n      ctx.lineTo(ends[7][0], ends[7][1]);\n    }\n  }\n});\n\nfunction createNormalBox(itemLayout, dataIndex, isInit) {\n  var ends = itemLayout.ends;\n  return new NormalBoxPath({\n    shape: {\n      points: isInit ? transInit(ends, itemLayout) : ends\n    },\n    z2: 100\n  });\n}\n\nfunction isNormalBoxClipped(clipArea, itemLayout) {\n  var clipped = true;\n\n  for (var i = 0; i < itemLayout.ends.length; i++) {\n    // If any point are in the region.\n    if (clipArea.contain(itemLayout.ends[i][0], itemLayout.ends[i][1])) {\n      clipped = false;\n      break;\n    }\n  }\n\n  return clipped;\n}\n\nfunction setBoxCommon(el, data, dataIndex, isSimpleBox) {\n  var itemModel = data.getItemModel(dataIndex);\n  var normalItemStyleModel = itemModel.getModel(NORMAL_ITEM_STYLE_PATH);\n  var color = data.getItemVisual(dataIndex, 'color');\n  var borderColor = data.getItemVisual(dataIndex, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.strokeNoScale = true;\n  el.style.fill = color;\n  el.style.stroke = borderColor;\n  el.__simpleBox = isSimpleBox;\n  var hoverStyle = itemModel.getModel(EMPHASIS_ITEM_STYLE_PATH).getItemStyle();\n  graphic.setHoverStyle(el, hoverStyle);\n}\n\nfunction transInit(points, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[1] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nvar LargeBoxPath = Path.extend({\n  type: 'largeCandlestickBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n\n    for (var i = 0; i < points.length;) {\n      if (this.__sign === points[i++]) {\n        var x = points[i++];\n        ctx.moveTo(x, points[i++]);\n        ctx.lineTo(x, points[i++]);\n      } else {\n        i += 3;\n      }\n    }\n  }\n});\n\nfunction createLarge(seriesModel, group, incremental) {\n  var data = seriesModel.getData();\n  var largePoints = data.getLayout('largePoints');\n  var elP = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: 1\n  });\n  group.add(elP);\n  var elN = new LargeBoxPath({\n    shape: {\n      points: largePoints\n    },\n    __sign: -1\n  });\n  group.add(elN);\n  setLargeStyle(1, elP, seriesModel, data);\n  setLargeStyle(-1, elN, seriesModel, data);\n\n  if (incremental) {\n    elP.incremental = true;\n    elN.incremental = true;\n  }\n}\n\nfunction setLargeStyle(sign, el, seriesModel, data) {\n  var suffix = sign > 0 ? 'P' : 'N';\n  var borderColor = data.getVisual('borderColor' + suffix) || data.getVisual('color' + suffix); // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = seriesModel.getModel(NORMAL_ITEM_STYLE_PATH).getItemStyle(SKIP_PROPS);\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor; // No different\n  // el.style.lineWidth = .5;\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}