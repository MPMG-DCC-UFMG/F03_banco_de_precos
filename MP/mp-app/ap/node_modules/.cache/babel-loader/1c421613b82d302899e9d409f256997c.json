{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\n\n\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/component/dataZoom/roams.js"],"names":["zrUtil","require","RoamController","throttleUtil","ATTR","register","api","dataZoomInfo","store","giveStore","theDataZoomId","dataZoomId","theCoordId","coordId","each","record","dataZoomInfos","indexOf","allCoordIds","count","cleanStore","controller","createController","dispatchAction","curry","controllerParams","mergeControllerParams","enable","controlType","opt","setPointerChecker","containsPoint","createOrUpdate","dataZoomModel","get","unregister","dispose","generateCoordId","coordModel","type","id","zr","getZr","newRecord","eventName","on","event","batch","info","isAvailableBehavior","option","method","getRange","range","push","start","end","length","prefix","typePriority","preventDefaultMouseMove","oneType","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,uCAAD,CAA5B;;AAEA,IAAIE,YAAY,GAAGF,OAAO,CAAC,qBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,IAAI,GAAG,sBAAX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,YAAvB,EAAqC;AACnC,MAAIC,KAAK,GAAGC,SAAS,CAACH,GAAD,CAArB;AACA,MAAII,aAAa,GAAGH,YAAY,CAACI,UAAjC;AACA,MAAIC,UAAU,GAAGL,YAAY,CAACM,OAA9B,CAHmC,CAGI;AACvC;;AAEAb,EAAAA,MAAM,CAACc,IAAP,CAAYN,KAAZ,EAAmB,UAAUO,MAAV,EAAkBF,OAAlB,EAA2B;AAC5C,QAAIG,aAAa,GAAGD,MAAM,CAACC,aAA3B;;AAEA,QAAIA,aAAa,CAACN,aAAD,CAAb,IAAgCV,MAAM,CAACiB,OAAP,CAAeV,YAAY,CAACW,WAA5B,EAAyCN,UAAzC,IAAuD,CAA3F,EAA8F;AAC5F,aAAOI,aAAa,CAACN,aAAD,CAApB;AACAK,MAAAA,MAAM,CAACI,KAAP;AACD;AACF,GAPD;AAQAC,EAAAA,UAAU,CAACZ,KAAD,CAAV;AACA,MAAIO,MAAM,GAAGP,KAAK,CAACI,UAAD,CAAlB,CAfmC,CAeH;;AAEhC,MAAI,CAACG,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGP,KAAK,CAACI,UAAD,CAAL,GAAoB;AAC3BC,MAAAA,OAAO,EAAED,UADkB;AAE3BI,MAAAA,aAAa,EAAE,EAFY;AAG3BG,MAAAA,KAAK,EAAE;AAHoB,KAA7B;AAKAJ,IAAAA,MAAM,CAACM,UAAP,GAAoBC,gBAAgB,CAAChB,GAAD,EAAMS,MAAN,CAApC;AACAA,IAAAA,MAAM,CAACQ,cAAP,GAAwBvB,MAAM,CAACwB,KAAP,CAAaD,cAAb,EAA6BjB,GAA7B,CAAxB;AACD,GAzBkC,CAyBjC;;;AAGF,GAACS,MAAM,CAACC,aAAP,CAAqBN,aAArB,CAAD,IAAwCK,MAAM,CAACI,KAAP,EAAxC;AACAJ,EAAAA,MAAM,CAACC,aAAP,CAAqBN,aAArB,IAAsCH,YAAtC;AACA,MAAIkB,gBAAgB,GAAGC,qBAAqB,CAACX,MAAM,CAACC,aAAR,CAA5C;AACAD,EAAAA,MAAM,CAACM,UAAP,CAAkBM,MAAlB,CAAyBF,gBAAgB,CAACG,WAA1C,EAAuDH,gBAAgB,CAACI,GAAxE,EA/BmC,CA+B2C;;AAE9Ed,EAAAA,MAAM,CAACM,UAAP,CAAkBS,iBAAlB,CAAoCvB,YAAY,CAACwB,aAAjD,EAjCmC,CAiC8B;;AAEjE5B,EAAAA,YAAY,CAAC6B,cAAb,CAA4BjB,MAA5B,EAAoC,gBAApC,EAAsDR,YAAY,CAAC0B,aAAb,CAA2BC,GAA3B,CAA+B,UAA/B,EAA2C,IAA3C,CAAtD,EAAwG,SAAxG;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAASC,UAAT,CAAoB7B,GAApB,EAAyBK,UAAzB,EAAqC;AACnC,MAAIH,KAAK,GAAGC,SAAS,CAACH,GAAD,CAArB;AACAN,EAAAA,MAAM,CAACc,IAAP,CAAYN,KAAZ,EAAmB,UAAUO,MAAV,EAAkB;AACnCA,IAAAA,MAAM,CAACM,UAAP,CAAkBe,OAAlB;AACA,QAAIpB,aAAa,GAAGD,MAAM,CAACC,aAA3B;;AAEA,QAAIA,aAAa,CAACL,UAAD,CAAjB,EAA+B;AAC7B,aAAOK,aAAa,CAACL,UAAD,CAApB;AACAI,MAAAA,MAAM,CAACI,KAAP;AACD;AACF,GARD;AASAC,EAAAA,UAAU,CAACZ,KAAD,CAAV;AACD;AACD;AACA;AACA;;;AAGA,SAAS6B,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,SAAOA,UAAU,CAACC,IAAX,GAAkB,KAAlB,GAA0BD,UAAU,CAACE,EAA5C;AACD;AACD;AACA;AACA;AACA;;;AAGA,SAAS/B,SAAT,CAAmBH,GAAnB,EAAwB;AACtB;AACA;AACA,MAAImC,EAAE,GAAGnC,GAAG,CAACoC,KAAJ,EAAT;AACA,SAAOD,EAAE,CAACrC,IAAD,CAAF,KAAaqC,EAAE,CAACrC,IAAD,CAAF,GAAW,EAAxB,CAAP;AACD;;AAED,SAASkB,gBAAT,CAA0BhB,GAA1B,EAA+BqC,SAA/B,EAA0C;AACxC,MAAItB,UAAU,GAAG,IAAInB,cAAJ,CAAmBI,GAAG,CAACoC,KAAJ,EAAnB,CAAjB;AACA1C,EAAAA,MAAM,CAACc,IAAP,CAAY,CAAC,KAAD,EAAQ,MAAR,EAAgB,YAAhB,CAAZ,EAA2C,UAAU8B,SAAV,EAAqB;AAC9DvB,IAAAA,UAAU,CAACwB,EAAX,CAAcD,SAAd,EAAyB,UAAUE,KAAV,EAAiB;AACxC,UAAIC,KAAK,GAAG,EAAZ;AACA/C,MAAAA,MAAM,CAACc,IAAP,CAAY6B,SAAS,CAAC3B,aAAtB,EAAqC,UAAUgC,IAAV,EAAgB;AACnD;AACA;AACA,YAAI,CAACF,KAAK,CAACG,mBAAN,CAA0BD,IAAI,CAACf,aAAL,CAAmBiB,MAA7C,CAAL,EAA2D;AACzD;AACD;;AAED,YAAIC,MAAM,GAAG,CAACH,IAAI,CAACI,QAAL,IAAiB,EAAlB,EAAsBR,SAAtB,CAAb;AACA,YAAIS,KAAK,GAAGF,MAAM,IAAIA,MAAM,CAACR,SAAS,CAACtB,UAAX,EAAuByB,KAAvB,CAA5B;AACA,SAACE,IAAI,CAACf,aAAL,CAAmBC,GAAnB,CAAuB,UAAvB,EAAmC,IAAnC,CAAD,IAA6CmB,KAA7C,IAAsDN,KAAK,CAACO,IAAN,CAAW;AAC/D3C,UAAAA,UAAU,EAAEqC,IAAI,CAACrC,UAD8C;AAE/D4C,UAAAA,KAAK,EAAEF,KAAK,CAAC,CAAD,CAFmD;AAG/DG,UAAAA,GAAG,EAAEH,KAAK,CAAC,CAAD;AAHqD,SAAX,CAAtD;AAKD,OAdD;AAeAN,MAAAA,KAAK,CAACU,MAAN,IAAgBd,SAAS,CAACpB,cAAV,CAAyBwB,KAAzB,CAAhB;AACD,KAlBD;AAmBD,GApBD;AAqBA,SAAO1B,UAAP;AACD;;AAED,SAASD,UAAT,CAAoBZ,KAApB,EAA2B;AACzBR,EAAAA,MAAM,CAACc,IAAP,CAAYN,KAAZ,EAAmB,UAAUO,MAAV,EAAkBF,OAAlB,EAA2B;AAC5C,QAAI,CAACE,MAAM,CAACI,KAAZ,EAAmB;AACjBJ,MAAAA,MAAM,CAACM,UAAP,CAAkBe,OAAlB;AACA,aAAO5B,KAAK,CAACK,OAAD,CAAZ;AACD;AACF,GALD;AAMD;AACD;AACA;AACA;;;AAGA,SAASU,cAAT,CAAwBjB,GAAxB,EAA6ByC,KAA7B,EAAoC;AAClCzC,EAAAA,GAAG,CAACiB,cAAJ,CAAmB;AACjBgB,IAAAA,IAAI,EAAE,UADW;AAEjBQ,IAAAA,KAAK,EAAEA;AAFU,GAAnB;AAID;AACD;AACA;AACA;;;AAGA,SAASrB,qBAAT,CAA+BV,aAA/B,EAA8C;AAC5C,MAAIY,WAAJ,CAD4C,CAC3B;AACjB;;AAEA,MAAI8B,MAAM,GAAG,OAAb;AACA,MAAIC,YAAY,GAAG;AACjB,iBAAa,CADI;AAEjB,iBAAa,CAFI;AAGjB,kBAAc,CAHG;AAIjB,sBAAkB,CAAC;AAJF,GAAnB;AAMA,MAAIC,uBAAuB,GAAG,IAA9B;AACA5D,EAAAA,MAAM,CAACc,IAAP,CAAYE,aAAZ,EAA2B,UAAUT,YAAV,EAAwB;AACjD,QAAI0B,aAAa,GAAG1B,YAAY,CAAC0B,aAAjC;AACA,QAAI4B,OAAO,GAAG5B,aAAa,CAACC,GAAd,CAAkB,UAAlB,EAA8B,IAA9B,IAAsC,KAAtC,GAA8CD,aAAa,CAACC,GAAd,CAAkB,UAAlB,EAA8B,IAA9B,IAAsC,MAAtC,GAA+C,IAA3G;;AAEA,QAAIyB,YAAY,CAACD,MAAM,GAAGG,OAAV,CAAZ,GAAiCF,YAAY,CAACD,MAAM,GAAG9B,WAAV,CAAjD,EAAyE;AACvEA,MAAAA,WAAW,GAAGiC,OAAd;AACD,KANgD,CAM/C;AACF;;;AAGAD,IAAAA,uBAAuB,IAAI3B,aAAa,CAACC,GAAd,CAAkB,yBAAlB,EAA6C,IAA7C,CAA3B;AACD,GAXD;AAYA,SAAO;AACLN,IAAAA,WAAW,EAAEA,WADR;AAELC,IAAAA,GAAG,EAAE;AACH;AACA;AACA;AACAiC,MAAAA,gBAAgB,EAAE,IAJf;AAKHC,MAAAA,eAAe,EAAE,IALd;AAMHC,MAAAA,gBAAgB,EAAE,IANf;AAOHJ,MAAAA,uBAAuB,EAAE,CAAC,CAACA;AAPxB;AAFA,GAAP;AAYD;;AAEDK,OAAO,CAAC5D,QAAR,GAAmBA,QAAnB;AACA4D,OAAO,CAAC9B,UAAR,GAAqBA,UAArB;AACA8B,OAAO,CAAC5B,eAAR,GAA0BA,eAA1B","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;"]},"metadata":{},"sourceType":"script"}