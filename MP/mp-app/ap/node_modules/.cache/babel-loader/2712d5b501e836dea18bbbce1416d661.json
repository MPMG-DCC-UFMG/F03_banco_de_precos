{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function preventIncremental() {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/echarts/lib/chart/heatmap/HeatmapSeries.js"],"names":["SeriesModel","require","createListFromArray","CoordinateSystem","_default","extend","type","getInitialData","option","ecModel","getSource","generateCoord","preventIncremental","coordSysCreator","get","dimensions","defaultOption","coordinateSystem","zlevel","z","geoIndex","blurSize","pointSize","maxOpacity","minOpacity","module","exports"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AAEA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,+BAAD,CAAjC;;AAEA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,wBAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIG,QAAQ,GAAGJ,WAAW,CAACK,MAAZ,CAAmB;AAChCC,EAAAA,IAAI,EAAE,gBAD0B;AAEhCC,EAAAA,cAAc,EAAE,wBAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACzC,WAAOP,mBAAmB,CAAC,KAAKQ,SAAL,EAAD,EAAmB,IAAnB,EAAyB;AACjDC,MAAAA,aAAa,EAAE;AADkC,KAAzB,CAA1B;AAGD,GAN+B;AAOhCC,EAAAA,kBAAkB,EAAE,8BAAY;AAC9B,QAAIC,eAAe,GAAGV,gBAAgB,CAACW,GAAjB,CAAqB,KAAKA,GAAL,CAAS,kBAAT,CAArB,CAAtB;;AAEA,QAAID,eAAe,IAAIA,eAAe,CAACE,UAAvC,EAAmD;AACjD,aAAOF,eAAe,CAACE,UAAhB,CAA2B,CAA3B,MAAkC,KAAlC,IAA2CF,eAAe,CAACE,UAAhB,CAA2B,CAA3B,MAAkC,KAApF;AACD;AACF,GAb+B;AAchCC,EAAAA,aAAa,EAAE;AACb;AACAC,IAAAA,gBAAgB,EAAE,aAFL;AAGbC,IAAAA,MAAM,EAAE,CAHK;AAIbC,IAAAA,CAAC,EAAE,CAJU;AAKb;AACA;AACA;AACA;AACAC,IAAAA,QAAQ,EAAE,CATG;AAUbC,IAAAA,QAAQ,EAAE,EAVG;AAWbC,IAAAA,SAAS,EAAE,EAXE;AAYbC,IAAAA,UAAU,EAAE,CAZC;AAabC,IAAAA,UAAU,EAAE;AAbC;AAdiB,CAAnB,CAAf;;AA+BAC,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function () {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}