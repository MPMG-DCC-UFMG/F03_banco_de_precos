{"ast":null,"code":"import _objectSpread from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/johnatan/MP/mp-app/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"start\", \"end\"];\nimport Mock from '../mock';\nvar date = new Date();\nvar calendarEventDB = {\n  events: [{\n    id: '344jdfher3wh23',\n    title: 'Meeting with all employees',\n    start: new Date(date.getFullYear(), date.getMonth(), 1),\n    end: new Date(date.getFullYear(), date.getMonth(), 3)\n  }, {\n    id: 'dfdfdsfedrevcr',\n    title: 'A trip to Bali Island',\n    start: new Date(),\n    end: new Date(date.getFullYear(), date.getMonth(), date.getDate() + 2)\n  }]\n};\nMock.onGet('/api/calendar/events/all').reply(function (config) {\n  return [200, calendarEventDB.events];\n});\nMock.onPost('/api/calendar/events/add').reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      start = _JSON$parse.start,\n      end = _JSON$parse.end,\n      others = _objectWithoutProperties(_JSON$parse, _excluded);\n\n  var event = _objectSpread({\n    start: new Date(start),\n    end: new Date(end)\n  }, others);\n\n  calendarEventDB.events.push(event);\n  return [200, calendarEventDB.events];\n});\nMock.onPost('/api/calendar/events/update').reply(function (config) {\n  var updatedEvent = JSON.parse(config.data);\n\n  if (updatedEvent.event) {\n    // resize or move event handling\n    calendarEventDB.events.map(function (event) {\n      if (event.id === updatedEvent.event.id) {\n        event.start = new Date(updatedEvent.start);\n        event.end = new Date(updatedEvent.end);\n      }\n\n      return event;\n    });\n  } else {\n    calendarEventDB.events.map(function (event) {\n      if (event.id === updatedEvent.id) {\n        event.start = new Date(updatedEvent.start);\n        event.end = new Date(updatedEvent.end);\n        event.title = updatedEvent.title;\n        event.location = updatedEvent.location;\n        event.note = updatedEvent.note;\n      }\n\n      return event;\n    });\n  }\n\n  return [200, calendarEventDB.events];\n});\nMock.onPost('/api/calendar/events/delete').reply(function (config) {\n  var event = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  calendarEventDB.events.forEach(function (element) {\n    if (element.id === event.id) {\n      return [200, calendarEventDB.events.splice(index.i, 1)];\n    }\n\n    index.i++;\n  });\n  return [200, calendarEventDB.events];\n});","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/src/fake-db/db/calendarEvents.js"],"names":["Mock","date","Date","calendarEventDB","events","id","title","start","getFullYear","getMonth","end","getDate","onGet","reply","config","onPost","JSON","parse","data","others","event","push","updatedEvent","map","location","note","index","i","forEach","element","splice"],"mappings":"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","sourcesContent":["import Mock from '../mock'\nconst date = new Date()\n\nconst calendarEventDB = {\n    events: [\n        {\n            id: '344jdfher3wh23',\n            title: 'Meeting with all employees',\n            start: new Date(date.getFullYear(), date.getMonth(), 1),\n            end: new Date(date.getFullYear(), date.getMonth(), 3),\n        },\n        {\n            id: 'dfdfdsfedrevcr',\n            title: 'A trip to Bali Island',\n            start: new Date(),\n            end: new Date(\n                date.getFullYear(),\n                date.getMonth(),\n                date.getDate() + 2\n            ),\n        },\n    ],\n}\n\nMock.onGet('/api/calendar/events/all').reply((config) => {\n    return [200, calendarEventDB.events]\n})\n\nMock.onPost('/api/calendar/events/add').reply((config) => {\n    let { start, end, ...others } = JSON.parse(config.data)\n    let event = {\n        start: new Date(start),\n        end: new Date(end),\n        ...others,\n    }\n    calendarEventDB.events.push(event)\n    return [200, calendarEventDB.events]\n})\n\nMock.onPost('/api/calendar/events/update').reply((config) => {\n    let updatedEvent = JSON.parse(config.data)\n\n    if (updatedEvent.event) {\n        // resize or move event handling\n        calendarEventDB.events.map((event) => {\n            if (event.id === updatedEvent.event.id) {\n                event.start = new Date(updatedEvent.start)\n                event.end = new Date(updatedEvent.end)\n            }\n            return event\n        })\n    } else {\n        calendarEventDB.events.map((event) => {\n            if (event.id === updatedEvent.id) {\n                event.start = new Date(updatedEvent.start)\n                event.end = new Date(updatedEvent.end)\n                event.title = updatedEvent.title\n                event.location = updatedEvent.location\n                event.note = updatedEvent.note\n            }\n\n            return event\n        })\n    }\n\n    return [200, calendarEventDB.events]\n})\n\nMock.onPost('/api/calendar/events/delete').reply((config) => {\n    let event = JSON.parse(config.data)\n\n    let index = { i: 0 }\n\n    calendarEventDB.events.forEach((element) => {\n        if (element.id === event.id) {\n            return [200, calendarEventDB.events.splice(index.i, 1)]\n        }\n        index.i++\n    })\n\n    return [200, calendarEventDB.events]\n})\n"]},"metadata":{},"sourceType":"module"}