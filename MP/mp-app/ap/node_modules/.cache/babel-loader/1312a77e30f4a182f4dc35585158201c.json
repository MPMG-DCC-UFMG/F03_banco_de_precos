{"ast":null,"code":"var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","map":{"version":3,"sources":["/home/johnatan/MP/mp-app/ap/node_modules/zrender/lib/graphic/shape/Sector.js"],"names":["Path","require","fixClipWithShadow","_default","extend","type","shape","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","brush","prototype","buildPath","ctx","x","y","max","unitX","cos","unitY","sin","moveTo","lineTo","arc","closePath","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAA/B;AAEA;AACA;AACA;AACA;;;AACA,IAAIE,QAAQ,GAAGH,IAAI,CAACI,MAAL,CAAY;AACzBC,EAAAA,IAAI,EAAE,QADmB;AAEzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,EAAE,CADC;AAELC,IAAAA,EAAE,EAAE,CAFC;AAGLC,IAAAA,EAAE,EAAE,CAHC;AAILC,IAAAA,CAAC,EAAE,CAJE;AAKLC,IAAAA,UAAU,EAAE,CALP;AAMLC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,EAAL,GAAU,CANf;AAOLC,IAAAA,SAAS,EAAE;AAPN,GAFkB;AAWzBC,EAAAA,KAAK,EAAEd,iBAAiB,CAACF,IAAI,CAACiB,SAAL,CAAeD,KAAhB,CAXC;AAYzBE,EAAAA,SAAS,EAAE,mBAAUC,GAAV,EAAeb,KAAf,EAAsB;AAC/B,QAAIc,CAAC,GAAGd,KAAK,CAACC,EAAd;AACA,QAAIc,CAAC,GAAGf,KAAK,CAACE,EAAd;AACA,QAAIC,EAAE,GAAGI,IAAI,CAACS,GAAL,CAAShB,KAAK,CAACG,EAAN,IAAY,CAArB,EAAwB,CAAxB,CAAT;AACA,QAAIC,CAAC,GAAGG,IAAI,CAACS,GAAL,CAAShB,KAAK,CAACI,CAAf,EAAkB,CAAlB,CAAR;AACA,QAAIC,UAAU,GAAGL,KAAK,CAACK,UAAvB;AACA,QAAIC,QAAQ,GAAGN,KAAK,CAACM,QAArB;AACA,QAAIG,SAAS,GAAGT,KAAK,CAACS,SAAtB;AACA,QAAIQ,KAAK,GAAGV,IAAI,CAACW,GAAL,CAASb,UAAT,CAAZ;AACA,QAAIc,KAAK,GAAGZ,IAAI,CAACa,GAAL,CAASf,UAAT,CAAZ;AACAQ,IAAAA,GAAG,CAACQ,MAAJ,CAAWJ,KAAK,GAAGd,EAAR,GAAaW,CAAxB,EAA2BK,KAAK,GAAGhB,EAAR,GAAaY,CAAxC;AACAF,IAAAA,GAAG,CAACS,MAAJ,CAAWL,KAAK,GAAGb,CAAR,GAAYU,CAAvB,EAA0BK,KAAK,GAAGf,CAAR,GAAYW,CAAtC;AACAF,IAAAA,GAAG,CAACU,GAAJ,CAAQT,CAAR,EAAWC,CAAX,EAAcX,CAAd,EAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC,CAACG,SAAxC;AACAI,IAAAA,GAAG,CAACS,MAAJ,CAAWf,IAAI,CAACW,GAAL,CAASZ,QAAT,IAAqBH,EAArB,GAA0BW,CAArC,EAAwCP,IAAI,CAACa,GAAL,CAASd,QAAT,IAAqBH,EAArB,GAA0BY,CAAlE;;AAEA,QAAIZ,EAAE,KAAK,CAAX,EAAc;AACZU,MAAAA,GAAG,CAACU,GAAJ,CAAQT,CAAR,EAAWC,CAAX,EAAcZ,EAAd,EAAkBG,QAAlB,EAA4BD,UAA5B,EAAwCI,SAAxC;AACD;;AAEDI,IAAAA,GAAG,CAACW,SAAJ;AACD;AAhCwB,CAAZ,CAAf;;AAmCAC,MAAM,CAACC,OAAP,GAAiB7B,QAAjB","sourcesContent":["var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;"]},"metadata":{},"sourceType":"script"}